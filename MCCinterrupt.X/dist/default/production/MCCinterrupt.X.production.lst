

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 23 02:14:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F45K50 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	nvBANK0
    91  0000B3                     __pnvBANK0:
    92                           	opt callstack 0
    93  0000B3                     _INT0_InterruptHandler:
    94                           	opt callstack 0
    95  0000B3                     	ds	2
    96  0000B5                     _IOCB4_InterruptHandler:
    97                           	opt callstack 0
    98  0000B5                     	ds	2
    99  0000                     _ANSELA	set	3931
   100  0000                     _ANSELE	set	3935
   101  0000                     _ANSELB	set	3932
   102  0000                     _ANSELC	set	3933
   103  0000                     _ANSELD	set	3934
   104  0000                     _PORTEbits	set	3972
   105  0000                     _PORTDbits	set	3971
   106  0000                     _OSCCON2	set	4050
   107  0000                     _OSCCON	set	4051
   108  0000                     _PORTBbits	set	3969
   109  0000                     _RCONbits	set	4048
   110  0000                     _INTCONbits	set	4082
   111  0000                     _IOCBbits	set	3974
   112  0000                     _INTCON2bits	set	4081
   113  0000                     _WPUB	set	3973
   114  0000                     _TRISD	set	3989
   115  0000                     _TRISC	set	3988
   116  0000                     _TRISB	set	3987
   117  0000                     _TRISA	set	3986
   118  0000                     _TRISE	set	3990
   119  0000                     _LATC	set	3979
   120  0000                     _LATB	set	3978
   121  0000                     _LATA	set	3977
   122  0000                     _LATD	set	3980
   123  0000                     _LATE	set	3981
   124                           
   125                           	psect	smallconst
   126  000800                     __psmallconst:
   127                           	opt callstack 0
   128  000800  00                 	db	0
   129  000801                     STR_1:
   130  000801  68                 	db	104	;'h'
   131  000802  6F                 	db	111	;'o'
   132  000803  6C                 	db	108	;'l'
   133  000804  61                 	db	97	;'a'
   134  000805  00                 	db	0
   135  000806                     STR_2:
   136  000806  25                 	db	37
   137  000807  30                 	db	48	;'0'
   138  000808  32                 	db	50	;'2'
   139  000809  75                 	db	117	;'u'
   140  00080A  00                 	db	0
   141  0000                     
   142                           ; #config settings
   143  00080B  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           	psect	cinit
   146  001862                     __pcinit:
   147                           	opt callstack 0
   148  001862                     start_initialization:
   149                           	opt callstack 0
   150  001862                     __initialization:
   151                           	opt callstack 0
   152                           
   153                           ; Clear objects allocated to BANK0 (47 bytes)
   154  001862  EE00  F060         	lfsr	0,__pbssBANK0
   155  001866  0E2F               	movlw	47
   156  001868                     clear_0:
   157  001868  6AEE               	clrf	postinc0,c
   158  00186A  06E8               	decf	wreg,f,c
   159  00186C  E1FD               	bnz	clear_0
   160                           
   161                           ; Clear objects allocated to COMRAM (8 bytes)
   162  00186E  EE00  F04F         	lfsr	0,__pbssCOMRAM
   163  001872  0E08               	movlw	8
   164  001874                     clear_1:
   165  001874  6AEE               	clrf	postinc0,c
   166  001876  06E8               	decf	wreg,f,c
   167  001878  E1FD               	bnz	clear_1
   168  00187A                     end_of_initialization:
   169                           	opt callstack 0
   170  00187A                     __end_of__initialization:
   171                           	opt callstack 0
   172  00187A  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   173  00187C  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   174  00187E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175  001880  6EF8               	movwf	tblptru,c
   176  001882  0100               	movlb	0
   177  001884  EF73  F007         	goto	_main	;jump to C main() function
   178                           
   179                           	psect	bssCOMRAM
   180  00004F                     __pbssCOMRAM:
   181                           	opt callstack 0
   182  00004F                     _nout:
   183                           	opt callstack 0
   184  00004F                     	ds	2
   185  000051                     _width:
   186                           	opt callstack 0
   187  000051                     	ds	2
   188  000053                     _prec:
   189                           	opt callstack 0
   190  000053                     	ds	2
   191  000055                     _flags:
   192                           	opt callstack 0
   193  000055                     	ds	2
   194                           
   195                           	psect	bssBANK0
   196  000060                     __pbssBANK0:
   197                           	opt callstack 0
   198  000060                     _cont2:
   199                           	opt callstack 0
   200  000060                     	ds	2
   201  000062                     _cont1:
   202                           	opt callstack 0
   203  000062                     	ds	2
   204  000064                     _cont:
   205                           	opt callstack 0
   206  000064                     	ds	2
   207  000066                     _dbuf:
   208                           	opt callstack 0
   209  000066                     	ds	32
   210  000086                     _horas:
   211                           	opt callstack 0
   212  000086                     	ds	3
   213  000089                     _minut:
   214                           	opt callstack 0
   215  000089                     	ds	3
   216  00008C                     _segun:
   217                           	opt callstack 0
   218  00008C                     	ds	3
   219                           
   220                           	psect	cstackBANK0
   221  00008F                     __pcstackBANK0:
   222                           	opt callstack 0
   223  00008F                     vfpfcnvrt@llu:
   224                           	opt callstack 0
   225                           
   226                           ; 8 bytes @ 0x0
   227  00008F                     	ds	8
   228  000097                     vfpfcnvrt@done:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x8
   232  000097                     	ds	2
   233  000099                     _vfpfcnvrt$773:
   234                           	opt callstack 0
   235                           
   236                           ; 2 bytes @ 0xA
   237  000099                     	ds	2
   238  00009B                     ?_vfprintf:
   239                           	opt callstack 0
   240  00009B                     vfprintf@fp:
   241                           	opt callstack 0
   242                           
   243                           ; 2 bytes @ 0xC
   244  00009B                     	ds	2
   245  00009D                     vfprintf@fmt:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0xE
   249  00009D                     	ds	2
   250  00009F                     vfprintf@ap:
   251                           	opt callstack 0
   252                           
   253                           ; 2 bytes @ 0x10
   254  00009F                     	ds	2
   255  0000A1                     ?_sprintf:
   256                           	opt callstack 0
   257  0000A1                     sprintf@s:
   258                           	opt callstack 0
   259                           
   260                           ; 2 bytes @ 0x12
   261  0000A1                     	ds	2
   262  0000A3                     sprintf@fmt:
   263                           	opt callstack 0
   264                           
   265                           ; 2 bytes @ 0x14
   266  0000A3                     	ds	6
   267  0000A9                     sprintf@ap:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x1A
   271  0000A9                     	ds	2
   272  0000AB                     sprintf@f:
   273                           	opt callstack 0
   274                           
   275                           ; 6 bytes @ 0x1C
   276  0000AB                     	ds	6
   277  0000B1                     ??_main:
   278                           
   279                           ; 1 bytes @ 0x22
   280  0000B1                     	ds	2
   281                           
   282                           	psect	cstackCOMRAM
   283  000001                     __pcstackCOMRAM:
   284                           	opt callstack 0
   285  000001                     ??_INTERRUPT_InterruptManagerHigh:
   286  000001                     
   287                           ; 1 bytes @ 0x0
   288  000001                     	ds	2
   289  000003                     ??_INTERRUPT_InterruptManagerLow:
   290                           
   291                           ; 1 bytes @ 0x2
   292  000003                     	ds	5
   293  000008                     ?_strlen:
   294                           	opt callstack 0
   295  000008                     ?_isdigit:
   296                           	opt callstack 0
   297  000008                     ?_isspace:
   298                           	opt callstack 0
   299  000008                     ?___wmul:
   300                           	opt callstack 0
   301  000008                     ?___lodiv:
   302                           	opt callstack 0
   303  000008                     ?___lomod:
   304                           	opt callstack 0
   305  000008                     busdata@a:
   306                           	opt callstack 0
   307  000008                     IOCB4_SetInterruptHandler@InterruptHandler:
   308                           	opt callstack 0
   309  000008                     INT0_SetInterruptHandler@InterruptHandler:
   310                           	opt callstack 0
   311  000008                     ___wmul@multiplier:
   312                           	opt callstack 0
   313  000008                     isdigit@c:
   314                           	opt callstack 0
   315  000008                     isspace@c:
   316                           	opt callstack 0
   317  000008                     fputc@c:
   318                           	opt callstack 0
   319  000008                     strlen@s:
   320                           	opt callstack 0
   321  000008                     ___lodiv@dividend:
   322                           	opt callstack 0
   323  000008                     ___lomod@dividend:
   324                           	opt callstack 0
   325                           
   326                           ; 8 bytes @ 0x7
   327  000008                     	ds	1
   328  000009                     comando@a:
   329                           	opt callstack 0
   330                           
   331                           ; 1 bytes @ 0x8
   332  000009                     	ds	1
   333  00000A                     ??_isdigit:
   334  00000A                     ??_isspace:
   335  00000A                     setCursor@y:
   336                           	opt callstack 0
   337  00000A                     caracter@m:
   338                           	opt callstack 0
   339  00000A                     ___wmul@multiplicand:
   340                           	opt callstack 0
   341  00000A                     fputc@fp:
   342                           	opt callstack 0
   343  00000A                     strlen@a:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0x9
   347  00000A                     	ds	1
   348  00000B                     ??_setCursor:
   349  00000B                     caracter@n:
   350                           	opt callstack 0
   351                           
   352                           ; 1 bytes @ 0xA
   353  00000B                     	ds	1
   354  00000C                     ??_fputc:
   355  00000C                     caracter@a:
   356                           	opt callstack 0
   357  00000C                     ___wmul@product:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0xB
   361  00000C                     	ds	1
   362  00000D                     print@a:
   363                           	opt callstack 0
   364                           
   365                           ; 2 bytes @ 0xC
   366  00000D                     	ds	1
   367  00000E                     setCursor@m:
   368                           	opt callstack 0
   369  00000E                     _isspace$1246:
   370                           	opt callstack 0
   371                           
   372                           ; 1 bytes @ 0xD
   373  00000E                     	ds	1
   374  00000F                     ??_print:
   375  00000F                     ?_atoi:
   376                           	opt callstack 0
   377  00000F                     setCursor@n:
   378                           	opt callstack 0
   379  00000F                     atoi@s:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0xE
   383  00000F                     	ds	1
   384  000010                     setCursor@x:
   385                           	opt callstack 0
   386  000010                     ___lodiv@divisor:
   387                           	opt callstack 0
   388  000010                     ___lomod@divisor:
   389                           	opt callstack 0
   390                           
   391                           ; 8 bytes @ 0xF
   392  000010                     	ds	1
   393  000011                     ??_atoi:
   394  000011                     print@k:
   395                           	opt callstack 0
   396  000011                     fputs@s:
   397                           	opt callstack 0
   398                           
   399                           ; 2 bytes @ 0x10
   400  000011                     	ds	2
   401  000013                     fputs@fp:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x12
   405  000013                     	ds	2
   406  000015                     fputs@c:
   407                           	opt callstack 0
   408  000015                     atoi@neg:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x14
   412  000015                     	ds	1
   413  000016                     fputs@i:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x15
   417  000016                     	ds	1
   418  000017                     _atoi$1228:
   419                           	opt callstack 0
   420                           
   421                           ; 2 bytes @ 0x16
   422  000017                     	ds	1
   423  000018                     ?_pad:
   424                           	opt callstack 0
   425  000018                     ___lomod@counter:
   426                           	opt callstack 0
   427  000018                     pad@fp:
   428                           	opt callstack 0
   429  000018                     ___lodiv@quotient:
   430                           	opt callstack 0
   431                           
   432                           ; 8 bytes @ 0x17
   433  000018                     	ds	1
   434  000019                     _atoi$1230:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x18
   438  000019                     	ds	1
   439  00001A                     pad@buf:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x19
   443  00001A                     	ds	1
   444  00001B                     _atoi$1229:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x1A
   448  00001B                     	ds	1
   449  00001C                     pad@p:
   450                           	opt callstack 0
   451  00001C                     atoi@n:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x1B
   455  00001C                     	ds	2
   456  00001E                     ??_pad:
   457                           
   458                           ; 1 bytes @ 0x1D
   459  00001E                     	ds	1
   460  00001F                     pad@i:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x1E
   464  00001F                     	ds	1
   465  000020                     ___lodiv@counter:
   466                           	opt callstack 0
   467                           
   468                           ; 1 bytes @ 0x1F
   469  000020                     	ds	1
   470  000021                     pad@w:
   471                           	opt callstack 0
   472                           
   473                           ; 2 bytes @ 0x20
   474  000021                     	ds	2
   475  000023                     ?_utoa:
   476                           	opt callstack 0
   477  000023                     utoa@fp:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x22
   481  000023                     	ds	2
   482  000025                     utoa@d:
   483                           	opt callstack 0
   484                           
   485                           ; 8 bytes @ 0x24
   486  000025                     	ds	8
   487  00002D                     ??_utoa:
   488                           
   489                           ; 1 bytes @ 0x2C
   490  00002D                     	ds	8
   491  000035                     utoa@p:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x34
   495  000035                     	ds	2
   496  000037                     utoa@w:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x36
   500  000037                     	ds	2
   501  000039                     utoa@n:
   502                           	opt callstack 0
   503                           
   504                           ; 8 bytes @ 0x38
   505  000039                     	ds	8
   506  000041                     utoa@i:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x40
   510  000041                     	ds	2
   511  000043                     ?_vfpfcnvrt:
   512                           	opt callstack 0
   513  000043                     vfpfcnvrt@fp:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x42
   517  000043                     	ds	2
   518  000045                     vfpfcnvrt@fmt:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x44
   522  000045                     	ds	2
   523  000047                     vfpfcnvrt@ap:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x46
   527  000047                     	ds	2
   528  000049                     ??_vfpfcnvrt:
   529                           
   530                           ; 1 bytes @ 0x48
   531  000049                     	ds	4
   532  00004D                     vfprintf@cfmt:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x4C
   536  00004D                     	ds	2
   537  00004F                     
   538                           ; 1 bytes @ 0x4E
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 12 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   558 ;;      Params:         0       0       0       0       0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0       0       0       0       0
   560 ;;      Temps:          0       2       0       0       0       0       0       0       0
   561 ;;      Totals:         0       2       0       0       0       0       0       0       0
   562 ;;Total ram usage:        2 bytes
   563 ;; Hardware stack levels required when called:   16
   564 ;; This function calls:
   565 ;;		_SYSTEM_Initialize
   566 ;;		_begin
   567 ;;		_print
   568 ;;		_setCursor
   569 ;;		_sprintf
   570 ;; This function is called by:
   571 ;;		Startup code after reset
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text0
   576  000EE6                     __ptext0:
   577                           	opt callstack 0
   578  000EE6                     _main:
   579                           	opt callstack 15
   580  000EE6                     
   581                           ;main.c: 15:     SYSTEM_Initialize();
   582  000EE6  EC87  F00C         	call	_SYSTEM_Initialize	;wreg free
   583  000EEA                     
   584                           ;main.c: 16:     begin();
   585  000EEA  EC66  F00B         	call	_begin	;wreg free
   586  000EEE                     
   587                           ;main.c: 17:     (INTCONbits.GIEH = 1);
   588  000EEE  8EF2               	bsf	242,7,c	;volatile
   589  000EF0                     
   590                           ;main.c: 18:     (INTCONbits.GIEL = 1);
   591  000EF0  8CF2               	bsf	242,6,c	;volatile
   592  000EF2                     
   593                           ;main.c: 19:     (INTCONbits.PEIE = 1);
   594  000EF2  8CF2               	bsf	242,6,c	;volatile
   595  000EF4                     
   596                           ;main.c: 21:     TRISD=0;
   597  000EF4  0E00               	movlw	0
   598  000EF6  6E95               	movwf	149,c	;volatile
   599  000EF8                     
   600                           ;main.c: 22:     ANSELD=0;
   601  000EF8  0E00               	movlw	0
   602  000EFA  010F               	movlb	15	; () banked
   603  000EFC  6F5E               	movwf	94,b	;volatile
   604  000EFE                     
   605                           ; BSR set to: 15
   606                           ;main.c: 23:     TRISE=0;
   607  000EFE  0E00               	movlw	0
   608  000F00  6E96               	movwf	150,c	;volatile
   609  000F02                     
   610                           ; BSR set to: 15
   611                           ;main.c: 24:     setCursor(3,2);
   612  000F02  0E02               	movlw	2
   613  000F04  6E0A               	movwf	setCursor@y^0,c
   614  000F06  0E03               	movlw	3
   615  000F08  EC1B  F008         	call	_setCursor
   616  000F0C                     
   617                           ;main.c: 25:     print("hola");
   618  000F0C  0E01               	movlw	low STR_1
   619  000F0E  6E0D               	movwf	print@a^0,c
   620  000F10  0E08               	movlw	high STR_1
   621  000F12  6E0E               	movwf	(print@a+1)^0,c
   622  000F14  EC4E  F00A         	call	_print	;wreg free
   623  000F18                     l2521:
   624                           
   625                           ;main.c: 29:     {;main.c: 30:         _delay((unsigned long)((1000)*(2000000/4000.0)));
   626  000F18  0E03               	movlw	3
   627  000F1A  0100               	movlb	0	; () banked
   628  000F1C  6FB2               	movwf	(??_main+1)& (0+255),b
   629  000F1E  0E8A               	movlw	138
   630  000F20  6FB1               	movwf	??_main& (0+255),b
   631  000F22  0E55               	movlw	85
   632  000F24                     u1597:
   633  000F24  2EE8               	decfsz	wreg,f,c
   634  000F26  D7FE               	bra	u1597
   635  000F28  2FB1               	decfsz	??_main& (0+255),f,b
   636  000F2A  D7FC               	bra	u1597
   637  000F2C  2FB2               	decfsz	(??_main+1)& (0+255),f,b
   638  000F2E  D7FA               	bra	u1597
   639  000F30  D000               	nop2	
   640  000F32                     
   641                           ;main.c: 31:         cont++;
   642  000F32  0100               	movlb	0	; () banked
   643  000F34  4B64               	infsnz	_cont& (0+255),f,b
   644  000F36  2B65               	incf	(_cont+1)& (0+255),f,b
   645  000F38                     
   646                           ; BSR set to: 0
   647                           ;main.c: 32:         if(cont==60){
   648  000F38  0E3C               	movlw	60
   649  000F3A  1964               	xorwf	_cont& (0+255),w,b
   650  000F3C  1165               	iorwf	(_cont+1)& (0+255),w,b
   651  000F3E  A4D8               	btfss	status,2,c
   652  000F40  EFA4  F007         	goto	u1561
   653  000F44  EFA6  F007         	goto	u1560
   654  000F48                     u1561:
   655  000F48  EFAC  F007         	goto	l2531
   656  000F4C                     u1560:
   657  000F4C                     
   658                           ; BSR set to: 0
   659                           ;main.c: 33:             cont=0;
   660  000F4C  0E00               	movlw	0
   661  000F4E  6F65               	movwf	(_cont+1)& (0+255),b
   662  000F50  0E00               	movlw	0
   663  000F52  6F64               	movwf	_cont& (0+255),b
   664  000F54                     
   665                           ; BSR set to: 0
   666                           ;main.c: 34:             cont1++;
   667  000F54  4B62               	infsnz	_cont1& (0+255),f,b
   668  000F56  2B63               	incf	(_cont1+1)& (0+255),f,b
   669  000F58                     l2531:
   670                           
   671                           ; BSR set to: 0
   672                           ;main.c: 36:         if(cont1==60){
   673  000F58  0E3C               	movlw	60
   674  000F5A  1962               	xorwf	_cont1& (0+255),w,b
   675  000F5C  1163               	iorwf	(_cont1+1)& (0+255),w,b
   676  000F5E  A4D8               	btfss	status,2,c
   677  000F60  EFB4  F007         	goto	u1571
   678  000F64  EFB6  F007         	goto	u1570
   679  000F68                     u1571:
   680  000F68  EFBC  F007         	goto	l2537
   681  000F6C                     u1570:
   682  000F6C                     
   683                           ; BSR set to: 0
   684                           ;main.c: 37:             cont1=0;
   685  000F6C  0E00               	movlw	0
   686  000F6E  6F63               	movwf	(_cont1+1)& (0+255),b
   687  000F70  0E00               	movlw	0
   688  000F72  6F62               	movwf	_cont1& (0+255),b
   689  000F74                     
   690                           ; BSR set to: 0
   691                           ;main.c: 38:             cont2++;
   692  000F74  4B60               	infsnz	_cont2& (0+255),f,b
   693  000F76  2B61               	incf	(_cont2+1)& (0+255),f,b
   694  000F78                     l2537:
   695                           
   696                           ; BSR set to: 0
   697                           ;main.c: 40:         if(cont2==60){
   698  000F78  0E3C               	movlw	60
   699  000F7A  1960               	xorwf	_cont2& (0+255),w,b
   700  000F7C  1161               	iorwf	(_cont2+1)& (0+255),w,b
   701  000F7E  A4D8               	btfss	status,2,c
   702  000F80  EFC4  F007         	goto	u1581
   703  000F84  EFC6  F007         	goto	u1580
   704  000F88                     u1581:
   705  000F88  EFCA  F007         	goto	l2541
   706  000F8C                     u1580:
   707  000F8C                     
   708                           ; BSR set to: 0
   709                           ;main.c: 41:             cont2=0;
   710  000F8C  0E00               	movlw	0
   711  000F8E  6F61               	movwf	(_cont2+1)& (0+255),b
   712  000F90  0E00               	movlw	0
   713  000F92  6F60               	movwf	_cont2& (0+255),b
   714  000F94                     l2541:
   715                           
   716                           ; BSR set to: 0
   717                           ;main.c: 44:         sprintf(segun,"%02u",cont);
   718  000F94  0E8C               	movlw	low _segun
   719  000F96  6FA1               	movwf	sprintf@s& (0+255),b
   720  000F98  0E00               	movlw	high _segun
   721  000F9A  6FA2               	movwf	(sprintf@s+1)& (0+255),b
   722  000F9C  0E06               	movlw	low STR_2
   723  000F9E  6FA3               	movwf	sprintf@fmt& (0+255),b
   724  000FA0  0E08               	movlw	high STR_2
   725  000FA2  6FA4               	movwf	(sprintf@fmt+1)& (0+255),b
   726  000FA4  C064  F0A5         	movff	_cont,?_sprintf+4
   727  000FA8  C065  F0A6         	movff	_cont+1,?_sprintf+5
   728  000FAC  EC14  F00B         	call	_sprintf	;wreg free
   729  000FB0                     
   730                           ;main.c: 45:         sprintf(minut,"%02u",cont1);
   731  000FB0  0E89               	movlw	low _minut
   732  000FB2  0100               	movlb	0	; () banked
   733  000FB4  6FA1               	movwf	sprintf@s& (0+255),b
   734  000FB6  0E00               	movlw	high _minut
   735  000FB8  6FA2               	movwf	(sprintf@s+1)& (0+255),b
   736  000FBA  0E06               	movlw	low STR_2
   737  000FBC  6FA3               	movwf	sprintf@fmt& (0+255),b
   738  000FBE  0E08               	movlw	high STR_2
   739  000FC0  6FA4               	movwf	(sprintf@fmt+1)& (0+255),b
   740  000FC2  C062  F0A5         	movff	_cont1,?_sprintf+4
   741  000FC6  C063  F0A6         	movff	_cont1+1,?_sprintf+5
   742  000FCA  EC14  F00B         	call	_sprintf	;wreg free
   743  000FCE                     
   744                           ;main.c: 46:         sprintf(horas,"%02u",cont2);
   745  000FCE  0E86               	movlw	low _horas
   746  000FD0  0100               	movlb	0	; () banked
   747  000FD2  6FA1               	movwf	sprintf@s& (0+255),b
   748  000FD4  0E00               	movlw	high _horas
   749  000FD6  6FA2               	movwf	(sprintf@s+1)& (0+255),b
   750  000FD8  0E06               	movlw	low STR_2
   751  000FDA  6FA3               	movwf	sprintf@fmt& (0+255),b
   752  000FDC  0E08               	movlw	high STR_2
   753  000FDE  6FA4               	movwf	(sprintf@fmt+1)& (0+255),b
   754  000FE0  C060  F0A5         	movff	_cont2,?_sprintf+4
   755  000FE4  C061  F0A6         	movff	_cont2+1,?_sprintf+5
   756  000FE8  EC14  F00B         	call	_sprintf	;wreg free
   757  000FEC                     
   758                           ;main.c: 47:         setCursor(5,3);
   759  000FEC  0E03               	movlw	3
   760  000FEE  6E0A               	movwf	setCursor@y^0,c
   761  000FF0  0E05               	movlw	5
   762  000FF2  EC1B  F008         	call	_setCursor
   763  000FF6                     
   764                           ;main.c: 48:         print(horas);
   765  000FF6  0E86               	movlw	low _horas
   766  000FF8  6E0D               	movwf	print@a^0,c
   767  000FFA  0E00               	movlw	high _horas
   768  000FFC  6E0E               	movwf	(print@a+1)^0,c
   769  000FFE  EC4E  F00A         	call	_print	;wreg free
   770  001002                     
   771                           ;main.c: 49:         setCursor(8,3);
   772  001002  0E03               	movlw	3
   773  001004  6E0A               	movwf	setCursor@y^0,c
   774  001006  0E08               	movlw	8
   775  001008  EC1B  F008         	call	_setCursor
   776  00100C                     
   777                           ;main.c: 50:         print(minut);
   778  00100C  0E89               	movlw	low _minut
   779  00100E  6E0D               	movwf	print@a^0,c
   780  001010  0E00               	movlw	high _minut
   781  001012  6E0E               	movwf	(print@a+1)^0,c
   782  001014  EC4E  F00A         	call	_print	;wreg free
   783  001018                     
   784                           ;main.c: 51:         setCursor(11,3);
   785  001018  0E03               	movlw	3
   786  00101A  6E0A               	movwf	setCursor@y^0,c
   787  00101C  0E0B               	movlw	11
   788  00101E  EC1B  F008         	call	_setCursor
   789  001022                     
   790                           ;main.c: 52:         print(segun);
   791  001022  0E8C               	movlw	low _segun
   792  001024  6E0D               	movwf	print@a^0,c
   793  001026  0E00               	movlw	high _segun
   794  001028  6E0E               	movwf	(print@a+1)^0,c
   795  00102A  EC4E  F00A         	call	_print	;wreg free
   796  00102E  EF8C  F007         	goto	l2521
   797  001032  EF45  F000         	goto	start
   798  001036                     __end_of_main:
   799                           	opt callstack 0
   800                           
   801 ;; *************** function _sprintf *****************
   802 ;; Defined at:
   803 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  s               2   18[BANK0 ] PTR unsigned char 
   806 ;;		 -> horas(3), minut(3), segun(3), 
   807 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
   808 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  f               6   28[BANK0 ] struct _IO_FILE
   811 ;;  ap              2   26[BANK0 ] PTR void [1]
   812 ;;		 -> ?_sprintf(2), 
   813 ;;  ret             2    0        int 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  2   18[BANK0 ] int 
   816 ;; Registers used:
   817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   823 ;;      Params:         0       6       0       0       0       0       0       0       0
   824 ;;      Locals:         0      10       0       0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0
   826 ;;      Totals:         0      16       0       0       0       0       0       0       0
   827 ;;Total ram usage:       16 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:   15
   830 ;; This function calls:
   831 ;;		_vfprintf
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text1
   838  001628                     __ptext1:
   839                           	opt callstack 0
   840  001628                     _sprintf:
   841                           	opt callstack 15
   842  001628  0EA5               	movlw	low (?_sprintf+4)
   843  00162A  0100               	movlb	0	; () banked
   844  00162C  6FA9               	movwf	sprintf@ap& (0+255),b
   845  00162E  0E00               	movlw	high (?_sprintf+4)
   846  001630  6FAA               	movwf	(sprintf@ap+1)& (0+255),b
   847  001632  C0A1  F0AB         	movff	sprintf@s,sprintf@f
   848  001636  C0A2  F0AC         	movff	sprintf@s+1,sprintf@f+1
   849  00163A                     
   850                           ; BSR set to: 0
   851  00163A  0E00               	movlw	0
   852  00163C  6FAE               	movwf	(sprintf@f+3)& (0+255),b
   853  00163E  0E00               	movlw	0
   854  001640  6FAD               	movwf	(sprintf@f+2)& (0+255),b
   855  001642                     
   856                           ; BSR set to: 0
   857  001642  0E00               	movlw	0
   858  001644  6FB0               	movwf	(sprintf@f+5)& (0+255),b
   859  001646  0E00               	movlw	0
   860  001648  6FAF               	movwf	(sprintf@f+4)& (0+255),b
   861  00164A                     
   862                           ; BSR set to: 0
   863  00164A  0EAB               	movlw	low sprintf@f
   864  00164C  6F9B               	movwf	vfprintf@fp& (0+255),b
   865  00164E  0E00               	movlw	high sprintf@f
   866  001650  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
   867  001652  C0A3  F09D         	movff	sprintf@fmt,vfprintf@fmt
   868  001656  C0A4  F09E         	movff	sprintf@fmt+1,vfprintf@fmt+1
   869  00165A  0EA9               	movlw	low sprintf@ap
   870  00165C  6F9F               	movwf	vfprintf@ap& (0+255),b
   871  00165E  0E00               	movlw	high sprintf@ap
   872  001660  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
   873  001662  EC8D  F00A         	call	_vfprintf	;wreg free
   874  001666  0100               	movlb	0	; () banked
   875  001668  51AD               	movf	(sprintf@f+2)& (0+255),w,b
   876  00166A  25A1               	addwf	sprintf@s& (0+255),w,b
   877  00166C  6ED9               	movwf	fsr2l,c
   878  00166E  51AE               	movf	(sprintf@f+3)& (0+255),w,b
   879  001670  21A2               	addwfc	(sprintf@s+1)& (0+255),w,b
   880  001672  6EDA               	movwf	fsr2h,c
   881  001674  0E00               	movlw	0
   882  001676  6EDF               	movwf	indf2,c
   883  001678                     
   884                           ; BSR set to: 0
   885  001678  0012               	return		;funcret
   886  00167A                     __end_of_sprintf:
   887                           	opt callstack 0
   888                           
   889 ;; *************** function _vfprintf *****************
   890 ;; Defined at:
   891 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
   894 ;;		 -> sprintf@f(6), 
   895 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
   896 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   897 ;;  ap              2   16[BANK0 ] PTR PTR void 
   898 ;;		 -> sprintf@ap(2), 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
   901 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  2   12[BANK0 ] int 
   904 ;; Registers used:
   905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   911 ;;      Params:         0       6       0       0       0       0       0       0       0
   912 ;;      Locals:         2       0       0       0       0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0
   914 ;;      Totals:         2       6       0       0       0       0       0       0       0
   915 ;;Total ram usage:        8 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:   14
   918 ;; This function calls:
   919 ;;		_vfpfcnvrt
   920 ;; This function is called by:
   921 ;;		_sprintf
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text2
   926  00151A                     __ptext2:
   927                           	opt callstack 0
   928  00151A                     _vfprintf:
   929                           	opt callstack 15
   930  00151A                     
   931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   932  00151A  C09D  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
   933  00151E  C09E  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   934  001522                     
   935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   936  001522  0E00               	movlw	0
   937  001524  6E50               	movwf	(_nout+1)^0,c
   938  001526  0E00               	movlw	0
   939  001528  6E4F               	movwf	_nout^0,c
   940                           
   941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   942  00152A  EFA9  F00A         	goto	l2487
   943  00152E                     l2485:
   944                           
   945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   946  00152E  C09B  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   947  001532  C09C  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   948  001536  0E4D               	movlw	low vfprintf@cfmt
   949  001538  6E45               	movwf	vfpfcnvrt@fmt^0,c
   950  00153A  0E00               	movlw	high vfprintf@cfmt
   951  00153C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   952  00153E  C09F  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   953  001542  C0A0  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   954  001546  EC06  F004         	call	_vfpfcnvrt	;wreg free
   955  00154A  5043               	movf	?_vfpfcnvrt^0,w,c
   956  00154C  264F               	addwf	_nout^0,f,c
   957  00154E  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
   958  001550  2250               	addwfc	(_nout+1)^0,f,c
   959  001552                     l2487:
   960                           
   961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   962  001552  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
   963  001556  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   964  00155A                     	if	0	;tblptru may be non-zero
   965  00155A                     	endif
   966  00155A                     	if	0	;tblptru may be non-zero
   967  00155A                     	endif
   968  00155A  0008               	tblrd		*
   969  00155C  50F5               	movf	tablat,w,c
   970  00155E  0900               	iorlw	0
   971  001560  A4D8               	btfss	status,2,c
   972  001562  EFB5  F00A         	goto	u1551
   973  001566  EFB7  F00A         	goto	u1550
   974  00156A                     u1551:
   975  00156A  EF97  F00A         	goto	l2485
   976  00156E                     u1550:
   977  00156E                     
   978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   979  00156E  C04F  F09B         	movff	_nout,?_vfprintf
   980  001572  C050  F09C         	movff	_nout+1,?_vfprintf+1
   981  001576  0012               	return		;funcret
   982  001578                     __end_of_vfprintf:
   983                           	opt callstack 0
   984                           
   985 ;; *************** function _vfpfcnvrt *****************
   986 ;; Defined at:
   987 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
   990 ;;		 -> sprintf@f(6), 
   991 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
   992 ;;		 -> vfprintf@cfmt(2), 
   993 ;;  ap              2   70[COMRAM] PTR PTR void 
   994 ;;		 -> sprintf@ap(2), 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  llu             8    0[BANK0 ] unsigned long long 
   997 ;;  ll              8    0        long long 
   998 ;;  f               4    0        long long 
   999 ;;  vp              3    0        PTR void 
  1000 ;;  ct              3    0        unsigned char [3]
  1001 ;;  cp              3    0        PTR unsigned char 
  1002 ;;  done            2    8[BANK0 ] int 
  1003 ;;  i               2    0        int 
  1004 ;;  c               1    0        unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2   66[COMRAM] int 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1014 ;;      Params:         6       0       0       0       0       0       0       0       0
  1015 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1016 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1017 ;;      Totals:        10      12       0       0       0       0       0       0       0
  1018 ;;Total ram usage:       22 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:   13
  1021 ;; This function calls:
  1022 ;;		_atoi
  1023 ;;		_fputc
  1024 ;;		_isdigit
  1025 ;;		_utoa
  1026 ;; This function is called by:
  1027 ;;		_vfprintf
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text3
  1032  00080C                     __ptext3:
  1033                           	opt callstack 0
  1034  00080C                     _vfpfcnvrt:
  1035                           	opt callstack 15
  1036  00080C                     
  1037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1038  00080C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1039  000810  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1040  000814  CFDE FFF6          	movff	postinc2,tblptrl
  1041  000818  CFDD FFF7          	movff	postdec2,tblptrh
  1042  00081C                     	if	0	;tblptru may be non-zero
  1043  00081C                     	endif
  1044  00081C                     	if	0	;tblptru may be non-zero
  1045  00081C                     	endif
  1046  00081C  0008               	tblrd		*
  1047  00081E  50F5               	movf	tablat,w,c
  1048  000820  0A25               	xorlw	37
  1049  000822  A4D8               	btfss	status,2,c
  1050  000824  EF16  F004         	goto	u1171
  1051  000828  EF18  F004         	goto	u1170
  1052  00082C                     u1171:
  1053  00082C  EF8F  F005         	goto	l2069
  1054  000830                     u1170:
  1055  000830                     
  1056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1057  000830  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1058  000834  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1059  000838  2ADE               	incf	postinc2,f,c
  1060  00083A  0E00               	movlw	0
  1061  00083C  22DD               	addwfc	postdec2,f,c
  1062  00083E                     
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1064  00083E  0E00               	movlw	0
  1065  000840  6E52               	movwf	(_width+1)^0,c
  1066  000842  0E00               	movlw	0
  1067  000844  6E51               	movwf	_width^0,c
  1068  000846  C051  F055         	movff	_width,_flags
  1069  00084A  C052  F056         	movff	_width+1,_flags+1
  1070  00084E                     
  1071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1072  00084E  6853               	setf	_prec^0,c
  1073  000850  6854               	setf	(_prec+1)^0,c
  1074  000852                     
  1075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1076  000852  0E00               	movlw	0
  1077  000854  0100               	movlb	0	; () banked
  1078  000856  6F98               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1079  000858  0E00               	movlw	0
  1080  00085A  6F97               	movwf	vfpfcnvrt@done& (0+255),b
  1081                           
  1082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1083  00085C  EF76  F004         	goto	l2023
  1084  000860                     l1997:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1088  000860  8055               	bsf	_flags^0,0,c
  1089  000862                     l1999:
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1093  000862  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1094  000866  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1095  00086A  2ADE               	incf	postinc2,f,c
  1096  00086C  0E00               	movlw	0
  1097  00086E  22DD               	addwfc	postdec2,f,c
  1098                           
  1099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1100  000870  EF76  F004         	goto	l2023
  1101  000874                     l2001:
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1105  000874  8255               	bsf	_flags^0,1,c
  1106  000876  EF31  F004         	goto	l1999
  1107  00087A                     l2005:
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1111  00087A  8455               	bsf	_flags^0,2,c
  1112  00087C  EF31  F004         	goto	l1999
  1113  000880                     l2009:
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1117  000880  8655               	bsf	_flags^0,3,c
  1118  000882  EF31  F004         	goto	l1999
  1119  000886                     l2013:
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1123  000886  8855               	bsf	_flags^0,4,c
  1124  000888  EF31  F004         	goto	l1999
  1125  00088C                     l2017:
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1129  00088C  0E00               	movlw	0
  1130  00088E  6F98               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1131  000890  0E01               	movlw	1
  1132  000892  6F97               	movwf	vfpfcnvrt@done& (0+255),b
  1133                           
  1134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1135  000894  EF76  F004         	goto	l2023
  1136  000898                     l2021:
  1137                           
  1138                           ; BSR set to: 0
  1139  000898  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1140  00089C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1141  0008A0  CFDE FFF6          	movff	postinc2,tblptrl
  1142  0008A4  CFDD FFF7          	movff	postdec2,tblptrh
  1143  0008A8                     	if	0	;tblptru may be non-zero
  1144  0008A8                     	endif
  1145  0008A8                     	if	0	;tblptru may be non-zero
  1146  0008A8                     	endif
  1147  0008A8  0008               	tblrd		*
  1148  0008AA  50F5               	movf	tablat,w,c
  1149  0008AC  6E49               	movwf	??_vfpfcnvrt^0,c
  1150  0008AE  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1151                           
  1152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1153                           ; Switch size 1, requested type "simple"
  1154                           ; Number of cases is 1, Range of values is 0 to 0
  1155                           ; switch strategies available:
  1156                           ; Name         Instructions Cycles
  1157                           ; simple_byte            4     3 (average)
  1158                           ;	Chosen strategy is simple_byte
  1159  0008B0  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1160  0008B2  0A00               	xorlw	0	; case 0
  1161  0008B4  B4D8               	btfsc	status,2,c
  1162  0008B6  EF5F  F004         	goto	l2629
  1163  0008BA  EF46  F004         	goto	l2017
  1164  0008BE                     l2629:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ; Switch size 1, requested type "simple"
  1168                           ; Number of cases is 5, Range of values is 32 to 48
  1169                           ; switch strategies available:
  1170                           ; Name         Instructions Cycles
  1171                           ; simple_byte           16     9 (average)
  1172                           ;	Chosen strategy is simple_byte
  1173  0008BE  5049               	movf	??_vfpfcnvrt^0,w,c
  1174  0008C0  0A20               	xorlw	32	; case 32
  1175  0008C2  B4D8               	btfsc	status,2,c
  1176  0008C4  EF40  F004         	goto	l2009
  1177  0008C8  0A03               	xorlw	3	; case 35
  1178  0008CA  B4D8               	btfsc	status,2,c
  1179  0008CC  EF43  F004         	goto	l2013
  1180  0008D0  0A08               	xorlw	8	; case 43
  1181  0008D2  B4D8               	btfsc	status,2,c
  1182  0008D4  EF3D  F004         	goto	l2005
  1183  0008D8  0A06               	xorlw	6	; case 45
  1184  0008DA  B4D8               	btfsc	status,2,c
  1185  0008DC  EF30  F004         	goto	l1997
  1186  0008E0  0A1D               	xorlw	29	; case 48
  1187  0008E2  B4D8               	btfsc	status,2,c
  1188  0008E4  EF3A  F004         	goto	l2001
  1189  0008E8  EF46  F004         	goto	l2017
  1190  0008EC                     l2023:
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1194  0008EC  5197               	movf	vfpfcnvrt@done& (0+255),w,b
  1195  0008EE  1198               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1196  0008F0  B4D8               	btfsc	status,2,c
  1197  0008F2  EF7D  F004         	goto	u1181
  1198  0008F6  EF7F  F004         	goto	u1180
  1199  0008FA                     u1181:
  1200  0008FA  EF4C  F004         	goto	l2021
  1201  0008FE                     u1180:
  1202  0008FE                     
  1203                           ; BSR set to: 0
  1204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1205  0008FE  A055               	btfss	_flags^0,0,c
  1206  000900  EF84  F004         	goto	u1191
  1207  000904  EF86  F004         	goto	u1190
  1208  000908                     u1191:
  1209  000908  EF87  F004         	goto	l2027
  1210  00090C                     u1190:
  1211  00090C                     
  1212                           ; BSR set to: 0
  1213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1214  00090C  9255               	bcf	_flags^0,1,c
  1215  00090E                     l2027:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1219  00090E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1220  000912  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1221  000916  CFDE FFF6          	movff	postinc2,tblptrl
  1222  00091A  CFDD FFF7          	movff	postdec2,tblptrh
  1223  00091E                     	if	0	;tblptru may be non-zero
  1224  00091E                     	endif
  1225  00091E                     	if	0	;tblptru may be non-zero
  1226  00091E                     	endif
  1227  00091E  0008               	tblrd		*
  1228  000920  50F5               	movf	tablat,w,c
  1229  000922  0A2A               	xorlw	42
  1230  000924  A4D8               	btfss	status,2,c
  1231  000926  EF97  F004         	goto	u1201
  1232  00092A  EF99  F004         	goto	u1200
  1233  00092E                     u1201:
  1234  00092E  EFC2  F004         	goto	l2035
  1235  000932                     u1200:
  1236  000932                     
  1237                           ; BSR set to: 0
  1238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1239  000932  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1240  000936  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1241  00093A  2ADE               	incf	postinc2,f,c
  1242  00093C  0E00               	movlw	0
  1243  00093E  22DD               	addwfc	postdec2,f,c
  1244                           
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1246  000940  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1247  000944  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1248  000948  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1249  00094C  0E02               	movlw	2
  1250  00094E  26DE               	addwf	postinc2,f,c
  1251  000950  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1252  000954  0E00               	movlw	0
  1253  000956  22DD               	addwfc	postdec2,f,c
  1254  000958  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1255  00095C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1256  000960  CFDE F051          	movff	postinc2,_width
  1257  000964  CFDD F052          	movff	postdec2,_width+1
  1258  000968                     
  1259                           ; BSR set to: 0
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1261  000968  BE52               	btfsc	(_width+1)^0,7,c
  1262  00096A  EFBB  F004         	goto	u1210
  1263  00096E  EFB9  F004         	goto	u1211
  1264  000972                     u1211:
  1265  000972  EF06  F005         	goto	l2045
  1266  000976                     u1210:
  1267  000976                     
  1268                           ; BSR set to: 0
  1269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1270  000976  8055               	bsf	_flags^0,0,c
  1271                           
  1272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1273  000978  6C51               	negf	_width^0,c
  1274  00097A  1E52               	comf	(_width+1)^0,f,c
  1275  00097C  B0D8               	btfsc	status,0,c
  1276  00097E  2A52               	incf	(_width+1)^0,f,c
  1277  000980  EF06  F005         	goto	l2045
  1278  000984                     l2035:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1282  000984  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1283  000988  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1284  00098C  CFDE F00F          	movff	postinc2,atoi@s
  1285  000990  CFDD F010          	movff	postdec2,atoi@s+1
  1286  000994  ECAB  F006         	call	_atoi	;wreg free
  1287  000998  C00F  F051         	movff	?_atoi,_width
  1288  00099C  C010  F052         	movff	?_atoi+1,_width+1
  1289                           
  1290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1291  0009A0  EFD9  F004         	goto	l2039
  1292  0009A4                     l2037:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1296  0009A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1297  0009A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1298  0009AC  2ADE               	incf	postinc2,f,c
  1299  0009AE  0E00               	movlw	0
  1300  0009B0  22DD               	addwfc	postdec2,f,c
  1301  0009B2                     l2039:
  1302  0009B2  0ED0               	movlw	208
  1303  0009B4  6E49               	movwf	??_vfpfcnvrt^0,c
  1304  0009B6  0EFF               	movlw	255
  1305  0009B8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1306  0009BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1307  0009BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1308  0009C2  CFDE FFF6          	movff	postinc2,tblptrl
  1309  0009C6  CFDD FFF7          	movff	postdec2,tblptrh
  1310  0009CA                     	if	0	;tblptru may be non-zero
  1311  0009CA                     	endif
  1312  0009CA                     	if	0	;tblptru may be non-zero
  1313  0009CA                     	endif
  1314  0009CA  0008               	tblrd		*
  1315  0009CC  50F5               	movf	tablat,w,c
  1316  0009CE  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1317  0009D0  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1318  0009D2  5049               	movf	??_vfpfcnvrt^0,w,c
  1319  0009D4  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1320  0009D6  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1321  0009D8  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1322  0009DA  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1323  0009DC  E10A               	bnz	u1220
  1324  0009DE  0E0A               	movlw	10
  1325  0009E0  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1326  0009E2  A0D8               	btfss	status,0,c
  1327  0009E4  EFF6  F004         	goto	u1221
  1328  0009E8  EFF9  F004         	goto	u1220
  1329  0009EC                     u1221:
  1330  0009EC  0E01               	movlw	1
  1331  0009EE  EFFA  F004         	goto	u1230
  1332  0009F2                     u1220:
  1333  0009F2  0E00               	movlw	0
  1334  0009F4                     u1230:
  1335  0009F4  0100               	movlb	0	; () banked
  1336  0009F6  6F99               	movwf	_vfpfcnvrt$773& (0+255),b
  1337  0009F8  6B9A               	clrf	(_vfpfcnvrt$773+1)& (0+255),b
  1338  0009FA                     
  1339                           ; BSR set to: 0
  1340  0009FA  5199               	movf	_vfpfcnvrt$773& (0+255),w,b
  1341  0009FC  119A               	iorwf	(_vfpfcnvrt$773+1)& (0+255),w,b
  1342  0009FE  A4D8               	btfss	status,2,c
  1343  000A00  EF04  F005         	goto	u1241
  1344  000A04  EF06  F005         	goto	u1240
  1345  000A08                     u1241:
  1346  000A08  EFD2  F004         	goto	l2037
  1347  000A0C                     u1240:
  1348  000A0C                     l2045:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1352  000A0C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1353  000A10  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1354  000A14  CFDE FFF6          	movff	postinc2,tblptrl
  1355  000A18  CFDD FFF7          	movff	postdec2,tblptrh
  1356  000A1C                     	if	0	;tblptru may be non-zero
  1357  000A1C                     	endif
  1358  000A1C                     	if	0	;tblptru may be non-zero
  1359  000A1C                     	endif
  1360  000A1C  0008               	tblrd		*
  1361  000A1E  50F5               	movf	tablat,w,c
  1362  000A20  0A75               	xorlw	117
  1363  000A22  A4D8               	btfss	status,2,c
  1364  000A24  EF16  F005         	goto	u1251
  1365  000A28  EF18  F005         	goto	u1250
  1366  000A2C                     u1251:
  1367  000A2C  EF59  F005         	goto	l2053
  1368  000A30                     u1250:
  1369  000A30                     
  1370                           ; BSR set to: 0
  1371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1372  000A30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1373  000A34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1374  000A38  2ADE               	incf	postinc2,f,c
  1375  000A3A  0E00               	movlw	0
  1376  000A3C  22DD               	addwfc	postdec2,f,c
  1377                           
  1378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1379  000A3E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1380  000A42  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1381  000A46  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1382  000A4A  0E02               	movlw	2
  1383  000A4C  26DE               	addwf	postinc2,f,c
  1384  000A4E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1385  000A52  0E00               	movlw	0
  1386  000A54  22DD               	addwfc	postdec2,f,c
  1387  000A56  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1388  000A5A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1389  000A5E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1390  000A62  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1391  000A66  C04B  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1392  000A6A  C04C  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1393  000A6E  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1394  000A70  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1395  000A72  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1396  000A74  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1397  000A76  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1398  000A78  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1399  000A7A                     
  1400                           ; BSR set to: 0
  1401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1402  000A7A  C043  F023         	movff	vfpfcnvrt@fp,utoa@fp
  1403  000A7E  C044  F024         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1404  000A82  C08F  F025         	movff	vfpfcnvrt@llu,utoa@d
  1405  000A86  C090  F026         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1406  000A8A  C091  F027         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1407  000A8E  C092  F028         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1408  000A92  C093  F029         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1409  000A96  C094  F02A         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1410  000A9A  C095  F02B         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1411  000A9E  C096  F02C         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1412  000AA2  ECAB  F005         	call	_utoa	;wreg free
  1413  000AA6  C023  F043         	movff	?_utoa,?_vfpfcnvrt
  1414  000AAA  C024  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  1415  000AAE  EFAA  F005         	goto	l325
  1416  000AB2                     l2053:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1420  000AB2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1421  000AB6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1422  000ABA  CFDE FFF6          	movff	postinc2,tblptrl
  1423  000ABE  CFDD FFF7          	movff	postdec2,tblptrh
  1424  000AC2                     	if	0	;tblptru may be non-zero
  1425  000AC2                     	endif
  1426  000AC2                     	if	0	;tblptru may be non-zero
  1427  000AC2                     	endif
  1428  000AC2  0008               	tblrd		*
  1429  000AC4  50F5               	movf	tablat,w,c
  1430  000AC6  0A25               	xorlw	37
  1431  000AC8  A4D8               	btfss	status,2,c
  1432  000ACA  EF69  F005         	goto	u1261
  1433  000ACE  EF6B  F005         	goto	u1260
  1434  000AD2                     u1261:
  1435  000AD2  EF82  F005         	goto	l2063
  1436  000AD6                     u1260:
  1437  000AD6                     
  1438                           ; BSR set to: 0
  1439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1440  000AD6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1441  000ADA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1442  000ADE  2ADE               	incf	postinc2,f,c
  1443  000AE0  0E00               	movlw	0
  1444  000AE2  22DD               	addwfc	postdec2,f,c
  1445  000AE4                     
  1446                           ; BSR set to: 0
  1447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1448  000AE4  0E00               	movlw	0
  1449  000AE6  6E09               	movwf	(fputc@c+1)^0,c
  1450  000AE8  0E25               	movlw	37
  1451  000AEA  6E08               	movwf	fputc@c^0,c
  1452  000AEC  C043  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  1453  000AF0  C044  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1454  000AF4  EC88  F009         	call	_fputc	;wreg free
  1455  000AF8                     l2059:
  1456                           
  1457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1458  000AF8  0E00               	movlw	0
  1459  000AFA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1460  000AFC  0E01               	movlw	1
  1461  000AFE  6E43               	movwf	?_vfpfcnvrt^0,c
  1462  000B00  EFAA  F005         	goto	l325
  1463  000B04                     l2063:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1467  000B04  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1468  000B08  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1469  000B0C  2ADE               	incf	postinc2,f,c
  1470  000B0E  0E00               	movlw	0
  1471  000B10  22DD               	addwfc	postdec2,f,c
  1472  000B12                     
  1473                           ; BSR set to: 0
  1474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1475  000B12  0E00               	movlw	0
  1476  000B14  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1477  000B16  0E00               	movlw	0
  1478  000B18  6E43               	movwf	?_vfpfcnvrt^0,c
  1479  000B1A  EFAA  F005         	goto	l325
  1480  000B1E                     l2069:
  1481                           
  1482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1483  000B1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1484  000B22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1485  000B26  CFDE FFF6          	movff	postinc2,tblptrl
  1486  000B2A  CFDD FFF7          	movff	postdec2,tblptrh
  1487  000B2E                     	if	0	;tblptru may be non-zero
  1488  000B2E                     	endif
  1489  000B2E                     	if	0	;tblptru may be non-zero
  1490  000B2E                     	endif
  1491  000B2E  0008               	tblrd		*
  1492  000B30  50F5               	movf	tablat,w,c
  1493  000B32  6E08               	movwf	fputc@c^0,c
  1494  000B34  6A09               	clrf	(fputc@c+1)^0,c
  1495  000B36  C043  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  1496  000B3A  C044  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1497  000B3E  EC88  F009         	call	_fputc	;wreg free
  1498  000B42                     
  1499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1500  000B42  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1501  000B46  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1502  000B4A  2ADE               	incf	postinc2,f,c
  1503  000B4C  0E00               	movlw	0
  1504  000B4E  22DD               	addwfc	postdec2,f,c
  1505  000B50  EF7C  F005         	goto	l2059
  1506  000B54                     l325:
  1507  000B54  0012               	return		;funcret
  1508  000B56                     __end_of_vfpfcnvrt:
  1509                           	opt callstack 0
  1510                           
  1511 ;; *************** function _utoa *****************
  1512 ;; Defined at:
  1513 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  1516 ;;		 -> sprintf@f(6), 
  1517 ;;  d               8   36[COMRAM] unsigned long long 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  n               8   56[COMRAM] unsigned long long 
  1520 ;;  i               2   64[COMRAM] int 
  1521 ;;  w               2   54[COMRAM] int 
  1522 ;;  p               2   52[COMRAM] int 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2   34[COMRAM] int 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1532 ;;      Params:        10       0       0       0       0       0       0       0       0
  1533 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1534 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1535 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1536 ;;Total ram usage:       32 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:   12
  1539 ;; This function calls:
  1540 ;;		___lodiv
  1541 ;;		___lomod
  1542 ;;		_pad
  1543 ;; This function is called by:
  1544 ;;		_vfpfcnvrt
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text4
  1549  000B56                     __ptext4:
  1550                           	opt callstack 0
  1551  000B56                     _utoa:
  1552                           	opt callstack 15
  1553  000B56                     
  1554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1555  000B56  BE54               	btfsc	(_prec+1)^0,7,c
  1556  000B58  EFB0  F005         	goto	u1031
  1557  000B5C  EFB2  F005         	goto	u1030
  1558  000B60                     u1031:
  1559  000B60  EFB3  F005         	goto	l1901
  1560  000B64                     u1030:
  1561  000B64                     
  1562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1563  000B64  9255               	bcf	_flags^0,1,c
  1564  000B66                     l1901:
  1565                           
  1566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1567  000B66  BE54               	btfsc	(_prec+1)^0,7,c
  1568  000B68  EFC0  F005         	goto	u1040
  1569  000B6C  5054               	movf	(_prec+1)^0,w,c
  1570  000B6E  E106               	bnz	u1041
  1571  000B70  0453               	decf	_prec^0,w,c
  1572  000B72  B0D8               	btfsc	status,0,c
  1573  000B74  EFBE  F005         	goto	u1041
  1574  000B78  EFC0  F005         	goto	u1040
  1575  000B7C                     u1041:
  1576  000B7C  EFC6  F005         	goto	l288
  1577  000B80                     u1040:
  1578  000B80  0E00               	movlw	0
  1579  000B82  6E36               	movwf	(utoa@p+1)^0,c
  1580  000B84  0E01               	movlw	1
  1581  000B86  6E35               	movwf	utoa@p^0,c
  1582  000B88  EFCA  F005         	goto	l290
  1583  000B8C                     l288:
  1584  000B8C  C053  F035         	movff	_prec,utoa@p
  1585  000B90  C054  F036         	movff	_prec+1,utoa@p+1
  1586  000B94                     l290:
  1587                           
  1588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1589  000B94  C051  F037         	movff	_width,utoa@w
  1590  000B98  C052  F038         	movff	_width+1,utoa@w+1
  1591                           
  1592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1593  000B9C  C025  F039         	movff	utoa@d,utoa@n
  1594  000BA0  C026  F03A         	movff	utoa@d+1,utoa@n+1
  1595  000BA4  C027  F03B         	movff	utoa@d+2,utoa@n+2
  1596  000BA8  C028  F03C         	movff	utoa@d+3,utoa@n+3
  1597  000BAC  C029  F03D         	movff	utoa@d+4,utoa@n+4
  1598  000BB0  C02A  F03E         	movff	utoa@d+5,utoa@n+5
  1599  000BB4  C02B  F03F         	movff	utoa@d+6,utoa@n+6
  1600  000BB8  C02C  F040         	movff	utoa@d+7,utoa@n+7
  1601  000BBC                     
  1602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1603  000BBC  0E00               	movlw	0
  1604  000BBE  6E42               	movwf	(utoa@i+1)^0,c
  1605  000BC0  0E1F               	movlw	31
  1606  000BC2  6E41               	movwf	utoa@i^0,c
  1607  000BC4                     
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1609  000BC4  0E00               	movlw	0
  1610  000BC6  0100               	movlb	0	; () banked
  1611  000BC8  6F85               	movwf	(_dbuf+31)& (0+255),b
  1612                           
  1613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1614  000BCA  EF5D  F006         	goto	l1919
  1615  000BCE                     l1909:
  1616                           
  1617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1618  000BCE  0641               	decf	utoa@i^0,f,c
  1619  000BD0  A0D8               	btfss	status,0,c
  1620  000BD2  0642               	decf	(utoa@i+1)^0,f,c
  1621  000BD4                     
  1622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1623  000BD4  0E66               	movlw	low _dbuf
  1624  000BD6  2441               	addwf	utoa@i^0,w,c
  1625  000BD8  6ED9               	movwf	fsr2l,c
  1626  000BDA  0E00               	movlw	high _dbuf
  1627  000BDC  2042               	addwfc	(utoa@i+1)^0,w,c
  1628  000BDE  6EDA               	movwf	fsr2h,c
  1629  000BE0  C039  F008         	movff	utoa@n,___lomod@dividend
  1630  000BE4  C03A  F009         	movff	utoa@n+1,___lomod@dividend+1
  1631  000BE8  C03B  F00A         	movff	utoa@n+2,___lomod@dividend+2
  1632  000BEC  C03C  F00B         	movff	utoa@n+3,___lomod@dividend+3
  1633  000BF0  C03D  F00C         	movff	utoa@n+4,___lomod@dividend+4
  1634  000BF4  C03E  F00D         	movff	utoa@n+5,___lomod@dividend+5
  1635  000BF8  C03F  F00E         	movff	utoa@n+6,___lomod@dividend+6
  1636  000BFC  C040  F00F         	movff	utoa@n+7,___lomod@dividend+7
  1637  000C00  0E0A               	movlw	10
  1638  000C02  6E10               	movwf	___lomod@divisor^0,c
  1639  000C04  0E00               	movlw	0
  1640  000C06  6E11               	movwf	(___lomod@divisor+1)^0,c
  1641  000C08  0E00               	movlw	0
  1642  000C0A  6E12               	movwf	(___lomod@divisor+2)^0,c
  1643  000C0C  0E00               	movlw	0
  1644  000C0E  6E13               	movwf	(___lomod@divisor+3)^0,c
  1645  000C10  0E00               	movlw	0
  1646  000C12  6E14               	movwf	(___lomod@divisor+4)^0,c
  1647  000C14  0E00               	movlw	0
  1648  000C16  6E15               	movwf	(___lomod@divisor+5)^0,c
  1649  000C18  0E00               	movlw	0
  1650  000C1A  6E16               	movwf	(___lomod@divisor+6)^0,c
  1651  000C1C  0E00               	movlw	0
  1652  000C1E  6E17               	movwf	(___lomod@divisor+7)^0,c
  1653  000C20  EC20  F009         	call	___lomod	;wreg free
  1654  000C24  C008  F02D         	movff	?___lomod,??_utoa
  1655  000C28  C009  F02E         	movff	?___lomod+1,??_utoa+1
  1656  000C2C  C00A  F02F         	movff	?___lomod+2,??_utoa+2
  1657  000C30  C00B  F030         	movff	?___lomod+3,??_utoa+3
  1658  000C34  C00C  F031         	movff	?___lomod+4,??_utoa+4
  1659  000C38  C00D  F032         	movff	?___lomod+5,??_utoa+5
  1660  000C3C  C00E  F033         	movff	?___lomod+6,??_utoa+6
  1661  000C40  C00F  F034         	movff	?___lomod+7,??_utoa+7
  1662  000C44  502D               	movf	??_utoa^0,w,c
  1663  000C46  0F30               	addlw	48
  1664  000C48  6EDF               	movwf	indf2,c
  1665  000C4A                     
  1666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1667  000C4A  0635               	decf	utoa@p^0,f,c
  1668  000C4C  A0D8               	btfss	status,0,c
  1669  000C4E  0636               	decf	(utoa@p+1)^0,f,c
  1670  000C50                     
  1671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1672  000C50  0637               	decf	utoa@w^0,f,c
  1673  000C52  A0D8               	btfss	status,0,c
  1674  000C54  0638               	decf	(utoa@w+1)^0,f,c
  1675  000C56                     
  1676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1677  000C56  C039  F008         	movff	utoa@n,___lodiv@dividend
  1678  000C5A  C03A  F009         	movff	utoa@n+1,___lodiv@dividend+1
  1679  000C5E  C03B  F00A         	movff	utoa@n+2,___lodiv@dividend+2
  1680  000C62  C03C  F00B         	movff	utoa@n+3,___lodiv@dividend+3
  1681  000C66  C03D  F00C         	movff	utoa@n+4,___lodiv@dividend+4
  1682  000C6A  C03E  F00D         	movff	utoa@n+5,___lodiv@dividend+5
  1683  000C6E  C03F  F00E         	movff	utoa@n+6,___lodiv@dividend+6
  1684  000C72  C040  F00F         	movff	utoa@n+7,___lodiv@dividend+7
  1685  000C76  0E0A               	movlw	10
  1686  000C78  6E10               	movwf	___lodiv@divisor^0,c
  1687  000C7A  0E00               	movlw	0
  1688  000C7C  6E11               	movwf	(___lodiv@divisor+1)^0,c
  1689  000C7E  0E00               	movlw	0
  1690  000C80  6E12               	movwf	(___lodiv@divisor+2)^0,c
  1691  000C82  0E00               	movlw	0
  1692  000C84  6E13               	movwf	(___lodiv@divisor+3)^0,c
  1693  000C86  0E00               	movlw	0
  1694  000C88  6E14               	movwf	(___lodiv@divisor+4)^0,c
  1695  000C8A  0E00               	movlw	0
  1696  000C8C  6E15               	movwf	(___lodiv@divisor+5)^0,c
  1697  000C8E  0E00               	movlw	0
  1698  000C90  6E16               	movwf	(___lodiv@divisor+6)^0,c
  1699  000C92  0E00               	movlw	0
  1700  000C94  6E17               	movwf	(___lodiv@divisor+7)^0,c
  1701  000C96  ECA8  F008         	call	___lodiv	;wreg free
  1702  000C9A  C008  F039         	movff	?___lodiv,utoa@n
  1703  000C9E  C009  F03A         	movff	?___lodiv+1,utoa@n+1
  1704  000CA2  C00A  F03B         	movff	?___lodiv+2,utoa@n+2
  1705  000CA6  C00B  F03C         	movff	?___lodiv+3,utoa@n+3
  1706  000CAA  C00C  F03D         	movff	?___lodiv+4,utoa@n+4
  1707  000CAE  C00D  F03E         	movff	?___lodiv+5,utoa@n+5
  1708  000CB2  C00E  F03F         	movff	?___lodiv+6,utoa@n+6
  1709  000CB6  C00F  F040         	movff	?___lodiv+7,utoa@n+7
  1710  000CBA                     l1919:
  1711                           
  1712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1713  000CBA  5041               	movf	utoa@i^0,w,c
  1714  000CBC  1042               	iorwf	(utoa@i+1)^0,w,c
  1715  000CBE  B4D8               	btfsc	status,2,c
  1716  000CC0  EF64  F006         	goto	u1051
  1717  000CC4  EF66  F006         	goto	u1050
  1718  000CC8                     u1051:
  1719  000CC8  EF96  F006         	goto	l1929
  1720  000CCC                     u1050:
  1721  000CCC  5039               	movf	utoa@n^0,w,c
  1722  000CCE  103A               	iorwf	(utoa@n+1)^0,w,c
  1723  000CD0  103B               	iorwf	(utoa@n+2)^0,w,c
  1724  000CD2  103C               	iorwf	(utoa@n+3)^0,w,c
  1725  000CD4  103D               	iorwf	(utoa@n+4)^0,w,c
  1726  000CD6  103E               	iorwf	(utoa@n+5)^0,w,c
  1727  000CD8  103F               	iorwf	(utoa@n+6)^0,w,c
  1728  000CDA  1040               	iorwf	(utoa@n+7)^0,w,c
  1729  000CDC  A4D8               	btfss	status,2,c
  1730  000CDE  EF73  F006         	goto	u1061
  1731  000CE2  EF75  F006         	goto	u1060
  1732  000CE6                     u1061:
  1733  000CE6  EFE7  F005         	goto	l1909
  1734  000CEA                     u1060:
  1735  000CEA  BE36               	btfsc	(utoa@p+1)^0,7,c
  1736  000CEC  EF82  F006         	goto	u1070
  1737  000CF0  5036               	movf	(utoa@p+1)^0,w,c
  1738  000CF2  E106               	bnz	u1071
  1739  000CF4  0435               	decf	utoa@p^0,w,c
  1740  000CF6  B0D8               	btfsc	status,0,c
  1741  000CF8  EF80  F006         	goto	u1071
  1742  000CFC  EF82  F006         	goto	u1070
  1743  000D00                     u1071:
  1744  000D00  EFE7  F005         	goto	l1909
  1745  000D04                     u1070:
  1746  000D04  BE38               	btfsc	(utoa@w+1)^0,7,c
  1747  000D06  EF8D  F006         	goto	u1081
  1748  000D0A  5038               	movf	(utoa@w+1)^0,w,c
  1749  000D0C  E108               	bnz	u1080
  1750  000D0E  0437               	decf	utoa@w^0,w,c
  1751  000D10  A0D8               	btfss	status,0,c
  1752  000D12  EF8D  F006         	goto	u1081
  1753  000D16  EF8F  F006         	goto	u1080
  1754  000D1A                     u1081:
  1755  000D1A  EF96  F006         	goto	l1929
  1756  000D1E                     u1080:
  1757  000D1E  B255               	btfsc	_flags^0,1,c
  1758  000D20  EF94  F006         	goto	u1091
  1759  000D24  EF96  F006         	goto	u1090
  1760  000D28                     u1091:
  1761  000D28  EFE7  F005         	goto	l1909
  1762  000D2C                     u1090:
  1763  000D2C                     l1929:
  1764                           
  1765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1766  000D2C  C023  F018         	movff	utoa@fp,pad@fp
  1767  000D30  C024  F019         	movff	utoa@fp+1,pad@fp+1
  1768  000D34  0E66               	movlw	low _dbuf
  1769  000D36  2441               	addwf	utoa@i^0,w,c
  1770  000D38  6E1A               	movwf	pad@buf^0,c
  1771  000D3A  0E00               	movlw	high _dbuf
  1772  000D3C  2042               	addwfc	(utoa@i+1)^0,w,c
  1773  000D3E  6E1B               	movwf	(pad@buf+1)^0,c
  1774  000D40  C037  F01C         	movff	utoa@w,pad@p
  1775  000D44  C038  F01D         	movff	utoa@w+1,pad@p+1
  1776  000D48  ECED  F009         	call	_pad	;wreg free
  1777  000D4C  C018  F023         	movff	?_pad,?_utoa
  1778  000D50  C019  F024         	movff	?_pad+1,?_utoa+1
  1779  000D54  0012               	return		;funcret
  1780  000D56                     __end_of_utoa:
  1781                           	opt callstack 0
  1782                           
  1783 ;; *************** function _pad *****************
  1784 ;; Defined at:
  1785 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  1788 ;;		 -> sprintf@f(6), 
  1789 ;;  buf             2   25[COMRAM] PTR unsigned char 
  1790 ;;		 -> dbuf(32), 
  1791 ;;  p               2   27[COMRAM] int 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  w               2   32[COMRAM] int 
  1794 ;;  i               2   30[COMRAM] int 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2   23[COMRAM] int 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1804 ;;      Params:         6       0       0       0       0       0       0       0       0
  1805 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1806 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1807 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1808 ;;Total ram usage:       11 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:   11
  1811 ;; This function calls:
  1812 ;;		_fputc
  1813 ;;		_fputs
  1814 ;;		_strlen
  1815 ;; This function is called by:
  1816 ;;		_utoa
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text5
  1821  0013DA                     __ptext5:
  1822                           	opt callstack 0
  1823  0013DA                     _pad:
  1824                           	opt callstack 15
  1825  0013DA                     
  1826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1827  0013DA  A055               	btfss	_flags^0,0,c
  1828  0013DC  EFF2  F009         	goto	u841
  1829  0013E0  EFF4  F009         	goto	u840
  1830  0013E4                     u841:
  1831  0013E4  EFFE  F009         	goto	l1803
  1832  0013E8                     u840:
  1833  0013E8                     
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1835  0013E8  C01A  F011         	movff	pad@buf,fputs@s
  1836  0013EC  C01B  F012         	movff	pad@buf+1,fputs@s+1
  1837  0013F0  C018  F013         	movff	pad@fp,fputs@fp
  1838  0013F4  C019  F014         	movff	pad@fp+1,fputs@fp+1
  1839  0013F8  EC8B  F00B         	call	_fputs	;wreg free
  1840  0013FC                     l1803:
  1841                           
  1842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1843  0013FC  BE1D               	btfsc	(pad@p+1)^0,7,c
  1844  0013FE  EF03  F00A         	goto	u851
  1845  001402  EF05  F00A         	goto	u850
  1846  001406                     u851:
  1847  001406  EF0B  F00A         	goto	l1807
  1848  00140A                     u850:
  1849  00140A  C01C  F021         	movff	pad@p,pad@w
  1850  00140E  C01D  F022         	movff	pad@p+1,pad@w+1
  1851  001412  EF0F  F00A         	goto	l278
  1852  001416                     l1807:
  1853  001416  0E00               	movlw	0
  1854  001418  6E22               	movwf	(pad@w+1)^0,c
  1855  00141A  0E00               	movlw	0
  1856  00141C  6E21               	movwf	pad@w^0,c
  1857  00141E                     l278:
  1858                           
  1859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1860  00141E  0E00               	movlw	0
  1861  001420  6E20               	movwf	(pad@i+1)^0,c
  1862  001422  0E00               	movlw	0
  1863  001424  6E1F               	movwf	pad@i^0,c
  1864                           
  1865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1866  001426  EF21  F00A         	goto	l1813
  1867  00142A                     l1809:
  1868                           
  1869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1870  00142A  0E00               	movlw	0
  1871  00142C  6E09               	movwf	(fputc@c+1)^0,c
  1872  00142E  0E20               	movlw	32
  1873  001430  6E08               	movwf	fputc@c^0,c
  1874  001432  C018  F00A         	movff	pad@fp,fputc@fp
  1875  001436  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  1876  00143A  EC88  F009         	call	_fputc	;wreg free
  1877  00143E                     
  1878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1879  00143E  4A1F               	infsnz	pad@i^0,f,c
  1880  001440  2A20               	incf	(pad@i+1)^0,f,c
  1881  001442                     l1813:
  1882                           
  1883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1884  001442  5021               	movf	pad@w^0,w,c
  1885  001444  5C1F               	subwf	pad@i^0,w,c
  1886  001446  5020               	movf	(pad@i+1)^0,w,c
  1887  001448  0A80               	xorlw	128
  1888  00144A  6E1E               	movwf	??_pad^0,c
  1889  00144C  5022               	movf	(pad@w+1)^0,w,c
  1890  00144E  0A80               	xorlw	128
  1891  001450  581E               	subwfb	??_pad^0,w,c
  1892  001452  A0D8               	btfss	status,0,c
  1893  001454  EF2E  F00A         	goto	u861
  1894  001458  EF30  F00A         	goto	u860
  1895  00145C                     u861:
  1896  00145C  EF15  F00A         	goto	l1809
  1897  001460                     u860:
  1898  001460                     
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1900  001460  B055               	btfsc	_flags^0,0,c
  1901  001462  EF35  F00A         	goto	u871
  1902  001466  EF37  F00A         	goto	u870
  1903  00146A                     u871:
  1904  00146A  EF41  F00A         	goto	l1817
  1905  00146E                     u870:
  1906  00146E                     
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1908  00146E  C01A  F011         	movff	pad@buf,fputs@s
  1909  001472  C01B  F012         	movff	pad@buf+1,fputs@s+1
  1910  001476  C018  F013         	movff	pad@fp,fputs@fp
  1911  00147A  C019  F014         	movff	pad@fp+1,fputs@fp+1
  1912  00147E  EC8B  F00B         	call	_fputs	;wreg free
  1913  001482                     l1817:
  1914                           
  1915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1916  001482  C01A  F008         	movff	pad@buf,strlen@s
  1917  001486  C01B  F009         	movff	pad@buf+1,strlen@s+1
  1918  00148A  ECE6  F00B         	call	_strlen	;wreg free
  1919  00148E  5021               	movf	pad@w^0,w,c
  1920  001490  2408               	addwf	?_strlen^0,w,c
  1921  001492  6E18               	movwf	?_pad^0,c
  1922  001494  5022               	movf	(pad@w+1)^0,w,c
  1923  001496  2009               	addwfc	(?_strlen+1)^0,w,c
  1924  001498  6E19               	movwf	(?_pad+1)^0,c
  1925  00149A  0012               	return		;funcret
  1926  00149C                     __end_of_pad:
  1927                           	opt callstack 0
  1928                           
  1929 ;; *************** function _strlen *****************
  1930 ;; Defined at:
  1931 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  s               2    7[COMRAM] PTR const unsigned char 
  1934 ;;		 -> dbuf(32), 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  a               2    9[COMRAM] PTR const unsigned char 
  1937 ;;		 -> dbuf(32), 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  2    7[COMRAM] unsigned int 
  1940 ;; Registers used:
  1941 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1947 ;;      Params:         2       0       0       0       0       0       0       0       0
  1948 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1950 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:        4 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    8
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_pad
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text6
  1962  0017CC                     __ptext6:
  1963                           	opt callstack 0
  1964  0017CC                     _strlen:
  1965                           	opt callstack 17
  1966  0017CC  C008  F00A         	movff	strlen@s,strlen@a
  1967  0017D0  C009  F00B         	movff	strlen@s+1,strlen@a+1
  1968  0017D4  EFEE  F00B         	goto	l1793
  1969  0017D8                     l1791:
  1970  0017D8  4A08               	infsnz	strlen@s^0,f,c
  1971  0017DA  2A09               	incf	(strlen@s+1)^0,f,c
  1972  0017DC                     l1793:
  1973  0017DC  C008  FFD9         	movff	strlen@s,fsr2l
  1974  0017E0  C009  FFDA         	movff	strlen@s+1,fsr2h
  1975  0017E4  50DF               	movf	indf2,w,c
  1976  0017E6  A4D8               	btfss	status,2,c
  1977  0017E8  EFF8  F00B         	goto	u831
  1978  0017EC  EFFA  F00B         	goto	u830
  1979  0017F0                     u831:
  1980  0017F0  EFEC  F00B         	goto	l1791
  1981  0017F4                     u830:
  1982  0017F4  500A               	movf	strlen@a^0,w,c
  1983  0017F6  5C08               	subwf	strlen@s^0,w,c
  1984  0017F8  6E08               	movwf	?_strlen^0,c
  1985  0017FA  500B               	movf	(strlen@a+1)^0,w,c
  1986  0017FC  5809               	subwfb	(strlen@s+1)^0,w,c
  1987  0017FE  6E09               	movwf	(?_strlen+1)^0,c
  1988  001800  0012               	return		;funcret
  1989  001802                     __end_of_strlen:
  1990                           	opt callstack 0
  1991                           
  1992 ;; *************** function _fputs *****************
  1993 ;; Defined at:
  1994 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  s               2   16[COMRAM] PTR const unsigned char 
  1997 ;;		 -> dbuf(32), 
  1998 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1999 ;;		 -> sprintf@f(6), 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  i               2   21[COMRAM] int 
  2002 ;;  c               1   20[COMRAM] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  2   16[COMRAM] int 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2012 ;;      Params:         4       0       0       0       0       0       0       0       0
  2013 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2015 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2016 ;;Total ram usage:        7 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:   10
  2019 ;; This function calls:
  2020 ;;		_fputc
  2021 ;; This function is called by:
  2022 ;;		_pad
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text7
  2027  001716                     __ptext7:
  2028                           	opt callstack 0
  2029  001716                     _fputs:
  2030                           	opt callstack 15
  2031  001716  0E00               	movlw	0
  2032  001718  6E17               	movwf	(fputs@i+1)^0,c
  2033  00171A  0E00               	movlw	0
  2034  00171C  6E16               	movwf	fputs@i^0,c
  2035  00171E  EF9C  F00B         	goto	l1787
  2036  001722                     l1783:
  2037  001722  C015  F008         	movff	fputs@c,fputc@c
  2038  001726  6A09               	clrf	(fputc@c+1)^0,c
  2039  001728  C013  F00A         	movff	fputs@fp,fputc@fp
  2040  00172C  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  2041  001730  EC88  F009         	call	_fputc	;wreg free
  2042  001734  4A16               	infsnz	fputs@i^0,f,c
  2043  001736  2A17               	incf	(fputs@i+1)^0,f,c
  2044  001738                     l1787:
  2045  001738  5016               	movf	fputs@i^0,w,c
  2046  00173A  2411               	addwf	fputs@s^0,w,c
  2047  00173C  6ED9               	movwf	fsr2l,c
  2048  00173E  5017               	movf	(fputs@i+1)^0,w,c
  2049  001740  2012               	addwfc	(fputs@s+1)^0,w,c
  2050  001742  6EDA               	movwf	fsr2h,c
  2051  001744  50DF               	movf	indf2,w,c
  2052  001746  6E15               	movwf	fputs@c^0,c
  2053  001748  5015               	movf	fputs@c^0,w,c
  2054  00174A  A4D8               	btfss	status,2,c
  2055  00174C  EFAA  F00B         	goto	u821
  2056  001750  EFAC  F00B         	goto	u820
  2057  001754                     u821:
  2058  001754  EF91  F00B         	goto	l1783
  2059  001758                     u820:
  2060  001758  0012               	return		;funcret
  2061  00175A                     __end_of_fputs:
  2062                           	opt callstack 0
  2063                           
  2064 ;; *************** function _fputc *****************
  2065 ;; Defined at:
  2066 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  c               2    7[COMRAM] int 
  2069 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  2070 ;;		 -> sprintf@f(6), 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  2    7[COMRAM] int 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2082 ;;      Params:         4       0       0       0       0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2084 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2085 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2086 ;;Total ram usage:        9 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    9
  2089 ;; This function calls:
  2090 ;;		_putch
  2091 ;; This function is called by:
  2092 ;;		_pad
  2093 ;;		_vfpfcnvrt
  2094 ;;		_fputs
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text8
  2099  001310                     __ptext8:
  2100                           	opt callstack 0
  2101  001310                     _fputc:
  2102                           	opt callstack 15
  2103  001310  500A               	movf	fputc@fp^0,w,c
  2104  001312  100B               	iorwf	(fputc@fp+1)^0,w,c
  2105  001314  B4D8               	btfsc	status,2,c
  2106  001316  EF8F  F009         	goto	u781
  2107  00131A  EF91  F009         	goto	u780
  2108  00131E                     u781:
  2109  00131E  EF9A  F009         	goto	l1771
  2110  001322                     u780:
  2111  001322  500A               	movf	fputc@fp^0,w,c
  2112  001324  100B               	iorwf	(fputc@fp+1)^0,w,c
  2113  001326  A4D8               	btfss	status,2,c
  2114  001328  EF98  F009         	goto	u791
  2115  00132C  EF9A  F009         	goto	u790
  2116  001330                     u791:
  2117  001330  EF9F  F009         	goto	l1773
  2118  001334                     u790:
  2119  001334                     l1771:
  2120  001334  5008               	movf	fputc@c^0,w,c
  2121  001336  ECA6  F00C         	call	_putch
  2122  00133A  EFEC  F009         	goto	l1063
  2123  00133E                     l1773:
  2124  00133E  EE20 F004          	lfsr	2,4
  2125  001342  500A               	movf	fputc@fp^0,w,c
  2126  001344  26D9               	addwf	fsr2l,f,c
  2127  001346  500B               	movf	(fputc@fp+1)^0,w,c
  2128  001348  22DA               	addwfc	fsr2h,f,c
  2129  00134A  50DE               	movf	postinc2,w,c
  2130  00134C  10DE               	iorwf	postinc2,w,c
  2131  00134E  B4D8               	btfsc	status,2,c
  2132  001350  EFAC  F009         	goto	u801
  2133  001354  EFAE  F009         	goto	u800
  2134  001358                     u801:
  2135  001358  EFC9  F009         	goto	l1777
  2136  00135C                     u800:
  2137  00135C  EE20 F004          	lfsr	2,4
  2138  001360  500A               	movf	fputc@fp^0,w,c
  2139  001362  26D9               	addwf	fsr2l,f,c
  2140  001364  500B               	movf	(fputc@fp+1)^0,w,c
  2141  001366  22DA               	addwfc	fsr2h,f,c
  2142  001368  EE10 F002          	lfsr	1,2
  2143  00136C  500A               	movf	fputc@fp^0,w,c
  2144  00136E  26E1               	addwf	fsr1l,f,c
  2145  001370  500B               	movf	(fputc@fp+1)^0,w,c
  2146  001372  22E2               	addwfc	fsr1h,f,c
  2147  001374  50DE               	movf	postinc2,w,c
  2148  001376  5CE6               	subwf	postinc1,w,c
  2149  001378  50E6               	movf	postinc1,w,c
  2150  00137A  0A80               	xorlw	128
  2151  00137C  6E10               	movwf	(??_fputc+4)^0,c
  2152  00137E  50DE               	movf	postinc2,w,c
  2153  001380  0A80               	xorlw	128
  2154  001382  5810               	subwfb	(??_fputc+4)^0,w,c
  2155  001384  B0D8               	btfsc	status,0,c
  2156  001386  EFC7  F009         	goto	u811
  2157  00138A  EFC9  F009         	goto	u810
  2158  00138E                     u811:
  2159  00138E  EFEC  F009         	goto	l1063
  2160  001392                     u810:
  2161  001392                     l1777:
  2162  001392  EE20 F002          	lfsr	2,2
  2163  001396  500A               	movf	fputc@fp^0,w,c
  2164  001398  26D9               	addwf	fsr2l,f,c
  2165  00139A  500B               	movf	(fputc@fp+1)^0,w,c
  2166  00139C  22DA               	addwfc	fsr2h,f,c
  2167  00139E  CFDE F00C          	movff	postinc2,??_fputc
  2168  0013A2  CFDD F00D          	movff	postdec2,??_fputc+1
  2169  0013A6  C00A  FFD9         	movff	fputc@fp,fsr2l
  2170  0013AA  C00B  FFDA         	movff	fputc@fp+1,fsr2h
  2171  0013AE  CFDE F00E          	movff	postinc2,??_fputc+2
  2172  0013B2  CFDD F00F          	movff	postdec2,??_fputc+3
  2173  0013B6  500C               	movf	??_fputc^0,w,c
  2174  0013B8  240E               	addwf	(??_fputc+2)^0,w,c
  2175  0013BA  6ED9               	movwf	fsr2l,c
  2176  0013BC  500D               	movf	(??_fputc+1)^0,w,c
  2177  0013BE  200F               	addwfc	(??_fputc+3)^0,w,c
  2178  0013C0  6EDA               	movwf	fsr2h,c
  2179  0013C2  C008  FFDF         	movff	fputc@c,indf2
  2180  0013C6  EE20 F002          	lfsr	2,2
  2181  0013CA  500A               	movf	fputc@fp^0,w,c
  2182  0013CC  26D9               	addwf	fsr2l,f,c
  2183  0013CE  500B               	movf	(fputc@fp+1)^0,w,c
  2184  0013D0  22DA               	addwfc	fsr2h,f,c
  2185  0013D2  2ADE               	incf	postinc2,f,c
  2186  0013D4  0E00               	movlw	0
  2187  0013D6  22DD               	addwfc	postdec2,f,c
  2188  0013D8                     l1063:
  2189  0013D8  0012               	return		;funcret
  2190  0013DA                     __end_of_fputc:
  2191                           	opt callstack 0
  2192                           
  2193 ;; *************** function _putch *****************
  2194 ;; Defined at:
  2195 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  c               1    wreg     unsigned char 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  c               1    0[COMRAM] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2212 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    8
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_fputc
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text9
  2224  00194C                     __ptext9:
  2225                           	opt callstack 0
  2226  00194C                     _putch:
  2227                           	opt callstack 15
  2228  00194C  0012               	return		;funcret
  2229  00194E                     __end_of_putch:
  2230                           	opt callstack 0
  2231                           
  2232 ;; *************** function ___lomod *****************
  2233 ;; Defined at:
  2234 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  dividend        8    7[COMRAM] unsigned long long 
  2237 ;;  divisor         8   15[COMRAM] unsigned long long 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  counter         1   23[COMRAM] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  8    7[COMRAM] unsigned long long 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2249 ;;      Params:        16       0       0       0       0       0       0       0       0
  2250 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2252 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2253 ;;Total ram usage:       17 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    8
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_utoa
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text10
  2264  001240                     __ptext10:
  2265                           	opt callstack 0
  2266  001240                     ___lomod:
  2267                           	opt callstack 18
  2268  001240  5010               	movf	___lomod@divisor^0,w,c
  2269  001242  1011               	iorwf	(___lomod@divisor+1)^0,w,c
  2270  001244  1012               	iorwf	(___lomod@divisor+2)^0,w,c
  2271  001246  1013               	iorwf	(___lomod@divisor+3)^0,w,c
  2272  001248  1014               	iorwf	(___lomod@divisor+4)^0,w,c
  2273  00124A  1015               	iorwf	(___lomod@divisor+5)^0,w,c
  2274  00124C  1016               	iorwf	(___lomod@divisor+6)^0,w,c
  2275  00124E  1017               	iorwf	(___lomod@divisor+7)^0,w,c
  2276  001250  B4D8               	btfsc	status,2,c
  2277  001252  EF2D  F009         	goto	u941
  2278  001256  EF2F  F009         	goto	u940
  2279  00125A                     u941:
  2280  00125A  EF77  F009         	goto	l783
  2281  00125E                     u940:
  2282  00125E  0E01               	movlw	1
  2283  001260  6E18               	movwf	___lomod@counter^0,c
  2284  001262  EF3D  F009         	goto	l1859
  2285  001266                     l1857:
  2286  001266  90D8               	bcf	status,0,c
  2287  001268  3610               	rlcf	___lomod@divisor^0,f,c
  2288  00126A  3611               	rlcf	(___lomod@divisor+1)^0,f,c
  2289  00126C  3612               	rlcf	(___lomod@divisor+2)^0,f,c
  2290  00126E  3613               	rlcf	(___lomod@divisor+3)^0,f,c
  2291  001270  3614               	rlcf	(___lomod@divisor+4)^0,f,c
  2292  001272  3615               	rlcf	(___lomod@divisor+5)^0,f,c
  2293  001274  3616               	rlcf	(___lomod@divisor+6)^0,f,c
  2294  001276  3617               	rlcf	(___lomod@divisor+7)^0,f,c
  2295  001278  2A18               	incf	___lomod@counter^0,f,c
  2296  00127A                     l1859:
  2297  00127A  AE17               	btfss	(___lomod@divisor+7)^0,7,c
  2298  00127C  EF42  F009         	goto	u951
  2299  001280  EF44  F009         	goto	u950
  2300  001284                     u951:
  2301  001284  EF33  F009         	goto	l1857
  2302  001288                     u950:
  2303  001288                     l1861:
  2304  001288  5010               	movf	___lomod@divisor^0,w,c
  2305  00128A  5C08               	subwf	___lomod@dividend^0,w,c
  2306  00128C  5011               	movf	(___lomod@divisor+1)^0,w,c
  2307  00128E  5809               	subwfb	(___lomod@dividend+1)^0,w,c
  2308  001290  5012               	movf	(___lomod@divisor+2)^0,w,c
  2309  001292  580A               	subwfb	(___lomod@dividend+2)^0,w,c
  2310  001294  5013               	movf	(___lomod@divisor+3)^0,w,c
  2311  001296  580B               	subwfb	(___lomod@dividend+3)^0,w,c
  2312  001298  5014               	movf	(___lomod@divisor+4)^0,w,c
  2313  00129A  580C               	subwfb	(___lomod@dividend+4)^0,w,c
  2314  00129C  5015               	movf	(___lomod@divisor+5)^0,w,c
  2315  00129E  580D               	subwfb	(___lomod@dividend+5)^0,w,c
  2316  0012A0  5016               	movf	(___lomod@divisor+6)^0,w,c
  2317  0012A2  580E               	subwfb	(___lomod@dividend+6)^0,w,c
  2318  0012A4  5017               	movf	(___lomod@divisor+7)^0,w,c
  2319  0012A6  580F               	subwfb	(___lomod@dividend+7)^0,w,c
  2320  0012A8  A0D8               	btfss	status,0,c
  2321  0012AA  EF59  F009         	goto	u961
  2322  0012AE  EF5B  F009         	goto	u960
  2323  0012B2                     u961:
  2324  0012B2  EF6B  F009         	goto	l1865
  2325  0012B6                     u960:
  2326  0012B6  5010               	movf	___lomod@divisor^0,w,c
  2327  0012B8  5E08               	subwf	___lomod@dividend^0,f,c
  2328  0012BA  5011               	movf	(___lomod@divisor+1)^0,w,c
  2329  0012BC  5A09               	subwfb	(___lomod@dividend+1)^0,f,c
  2330  0012BE  5012               	movf	(___lomod@divisor+2)^0,w,c
  2331  0012C0  5A0A               	subwfb	(___lomod@dividend+2)^0,f,c
  2332  0012C2  5013               	movf	(___lomod@divisor+3)^0,w,c
  2333  0012C4  5A0B               	subwfb	(___lomod@dividend+3)^0,f,c
  2334  0012C6  5014               	movf	(___lomod@divisor+4)^0,w,c
  2335  0012C8  5A0C               	subwfb	(___lomod@dividend+4)^0,f,c
  2336  0012CA  5015               	movf	(___lomod@divisor+5)^0,w,c
  2337  0012CC  5A0D               	subwfb	(___lomod@dividend+5)^0,f,c
  2338  0012CE  5016               	movf	(___lomod@divisor+6)^0,w,c
  2339  0012D0  5A0E               	subwfb	(___lomod@dividend+6)^0,f,c
  2340  0012D2  5017               	movf	(___lomod@divisor+7)^0,w,c
  2341  0012D4  5A0F               	subwfb	(___lomod@dividend+7)^0,f,c
  2342  0012D6                     l1865:
  2343  0012D6  90D8               	bcf	status,0,c
  2344  0012D8  3217               	rrcf	(___lomod@divisor+7)^0,f,c
  2345  0012DA  3216               	rrcf	(___lomod@divisor+6)^0,f,c
  2346  0012DC  3215               	rrcf	(___lomod@divisor+5)^0,f,c
  2347  0012DE  3214               	rrcf	(___lomod@divisor+4)^0,f,c
  2348  0012E0  3213               	rrcf	(___lomod@divisor+3)^0,f,c
  2349  0012E2  3212               	rrcf	(___lomod@divisor+2)^0,f,c
  2350  0012E4  3211               	rrcf	(___lomod@divisor+1)^0,f,c
  2351  0012E6  3210               	rrcf	___lomod@divisor^0,f,c
  2352  0012E8  2E18               	decfsz	___lomod@counter^0,f,c
  2353  0012EA  EF44  F009         	goto	l1861
  2354  0012EE                     l783:
  2355  0012EE  C008  F008         	movff	___lomod@dividend,?___lomod
  2356  0012F2  C009  F009         	movff	___lomod@dividend+1,?___lomod+1
  2357  0012F6  C00A  F00A         	movff	___lomod@dividend+2,?___lomod+2
  2358  0012FA  C00B  F00B         	movff	___lomod@dividend+3,?___lomod+3
  2359  0012FE  C00C  F00C         	movff	___lomod@dividend+4,?___lomod+4
  2360  001302  C00D  F00D         	movff	___lomod@dividend+5,?___lomod+5
  2361  001306  C00E  F00E         	movff	___lomod@dividend+6,?___lomod+6
  2362  00130A  C00F  F00F         	movff	___lomod@dividend+7,?___lomod+7
  2363  00130E  0012               	return		;funcret
  2364  001310                     __end_of___lomod:
  2365                           	opt callstack 0
  2366                           
  2367 ;; *************** function ___lodiv *****************
  2368 ;; Defined at:
  2369 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  dividend        8    7[COMRAM] unsigned long long 
  2372 ;;  divisor         8   15[COMRAM] unsigned long long 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  quotient        8   23[COMRAM] unsigned long long 
  2375 ;;  counter         1   31[COMRAM] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  8    7[COMRAM] unsigned long long 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2385 ;;      Params:        16       0       0       0       0       0       0       0       0
  2386 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2388 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2389 ;;Total ram usage:       25 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    8
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_utoa
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text11
  2400  001150                     __ptext11:
  2401                           	opt callstack 0
  2402  001150                     ___lodiv:
  2403                           	opt callstack 18
  2404  001150  EE20  F018         	lfsr	2,___lodiv@quotient
  2405  001154  0E07               	movlw	7
  2406  001156                     u901:
  2407  001156  6ADE               	clrf	postinc2,c
  2408  001158  06E8               	decf	wreg,f,c
  2409  00115A  E2FD               	bc	u901
  2410  00115C  5010               	movf	___lodiv@divisor^0,w,c
  2411  00115E  1011               	iorwf	(___lodiv@divisor+1)^0,w,c
  2412  001160  1012               	iorwf	(___lodiv@divisor+2)^0,w,c
  2413  001162  1013               	iorwf	(___lodiv@divisor+3)^0,w,c
  2414  001164  1014               	iorwf	(___lodiv@divisor+4)^0,w,c
  2415  001166  1015               	iorwf	(___lodiv@divisor+5)^0,w,c
  2416  001168  1016               	iorwf	(___lodiv@divisor+6)^0,w,c
  2417  00116A  1017               	iorwf	(___lodiv@divisor+7)^0,w,c
  2418  00116C  B4D8               	btfsc	status,2,c
  2419  00116E  EFBB  F008         	goto	u911
  2420  001172  EFBD  F008         	goto	u910
  2421  001176                     u911:
  2422  001176  EF0F  F009         	goto	l773
  2423  00117A                     u910:
  2424  00117A  0E01               	movlw	1
  2425  00117C  6E20               	movwf	___lodiv@counter^0,c
  2426  00117E  EFCB  F008         	goto	l1839
  2427  001182                     l1837:
  2428  001182  90D8               	bcf	status,0,c
  2429  001184  3610               	rlcf	___lodiv@divisor^0,f,c
  2430  001186  3611               	rlcf	(___lodiv@divisor+1)^0,f,c
  2431  001188  3612               	rlcf	(___lodiv@divisor+2)^0,f,c
  2432  00118A  3613               	rlcf	(___lodiv@divisor+3)^0,f,c
  2433  00118C  3614               	rlcf	(___lodiv@divisor+4)^0,f,c
  2434  00118E  3615               	rlcf	(___lodiv@divisor+5)^0,f,c
  2435  001190  3616               	rlcf	(___lodiv@divisor+6)^0,f,c
  2436  001192  3617               	rlcf	(___lodiv@divisor+7)^0,f,c
  2437  001194  2A20               	incf	___lodiv@counter^0,f,c
  2438  001196                     l1839:
  2439  001196  AE17               	btfss	(___lodiv@divisor+7)^0,7,c
  2440  001198  EFD0  F008         	goto	u921
  2441  00119C  EFD2  F008         	goto	u920
  2442  0011A0                     u921:
  2443  0011A0  EFC1  F008         	goto	l1837
  2444  0011A4                     u920:
  2445  0011A4                     l1841:
  2446  0011A4  90D8               	bcf	status,0,c
  2447  0011A6  3618               	rlcf	___lodiv@quotient^0,f,c
  2448  0011A8  3619               	rlcf	(___lodiv@quotient+1)^0,f,c
  2449  0011AA  361A               	rlcf	(___lodiv@quotient+2)^0,f,c
  2450  0011AC  361B               	rlcf	(___lodiv@quotient+3)^0,f,c
  2451  0011AE  361C               	rlcf	(___lodiv@quotient+4)^0,f,c
  2452  0011B0  361D               	rlcf	(___lodiv@quotient+5)^0,f,c
  2453  0011B2  361E               	rlcf	(___lodiv@quotient+6)^0,f,c
  2454  0011B4  361F               	rlcf	(___lodiv@quotient+7)^0,f,c
  2455  0011B6  5010               	movf	___lodiv@divisor^0,w,c
  2456  0011B8  5C08               	subwf	___lodiv@dividend^0,w,c
  2457  0011BA  5011               	movf	(___lodiv@divisor+1)^0,w,c
  2458  0011BC  5809               	subwfb	(___lodiv@dividend+1)^0,w,c
  2459  0011BE  5012               	movf	(___lodiv@divisor+2)^0,w,c
  2460  0011C0  580A               	subwfb	(___lodiv@dividend+2)^0,w,c
  2461  0011C2  5013               	movf	(___lodiv@divisor+3)^0,w,c
  2462  0011C4  580B               	subwfb	(___lodiv@dividend+3)^0,w,c
  2463  0011C6  5014               	movf	(___lodiv@divisor+4)^0,w,c
  2464  0011C8  580C               	subwfb	(___lodiv@dividend+4)^0,w,c
  2465  0011CA  5015               	movf	(___lodiv@divisor+5)^0,w,c
  2466  0011CC  580D               	subwfb	(___lodiv@dividend+5)^0,w,c
  2467  0011CE  5016               	movf	(___lodiv@divisor+6)^0,w,c
  2468  0011D0  580E               	subwfb	(___lodiv@dividend+6)^0,w,c
  2469  0011D2  5017               	movf	(___lodiv@divisor+7)^0,w,c
  2470  0011D4  580F               	subwfb	(___lodiv@dividend+7)^0,w,c
  2471  0011D6  A0D8               	btfss	status,0,c
  2472  0011D8  EFF0  F008         	goto	u931
  2473  0011DC  EFF2  F008         	goto	u930
  2474  0011E0                     u931:
  2475  0011E0  EF03  F009         	goto	l1849
  2476  0011E4                     u930:
  2477  0011E4  5010               	movf	___lodiv@divisor^0,w,c
  2478  0011E6  5E08               	subwf	___lodiv@dividend^0,f,c
  2479  0011E8  5011               	movf	(___lodiv@divisor+1)^0,w,c
  2480  0011EA  5A09               	subwfb	(___lodiv@dividend+1)^0,f,c
  2481  0011EC  5012               	movf	(___lodiv@divisor+2)^0,w,c
  2482  0011EE  5A0A               	subwfb	(___lodiv@dividend+2)^0,f,c
  2483  0011F0  5013               	movf	(___lodiv@divisor+3)^0,w,c
  2484  0011F2  5A0B               	subwfb	(___lodiv@dividend+3)^0,f,c
  2485  0011F4  5014               	movf	(___lodiv@divisor+4)^0,w,c
  2486  0011F6  5A0C               	subwfb	(___lodiv@dividend+4)^0,f,c
  2487  0011F8  5015               	movf	(___lodiv@divisor+5)^0,w,c
  2488  0011FA  5A0D               	subwfb	(___lodiv@dividend+5)^0,f,c
  2489  0011FC  5016               	movf	(___lodiv@divisor+6)^0,w,c
  2490  0011FE  5A0E               	subwfb	(___lodiv@dividend+6)^0,f,c
  2491  001200  5017               	movf	(___lodiv@divisor+7)^0,w,c
  2492  001202  5A0F               	subwfb	(___lodiv@dividend+7)^0,f,c
  2493  001204  8018               	bsf	___lodiv@quotient^0,0,c
  2494  001206                     l1849:
  2495  001206  90D8               	bcf	status,0,c
  2496  001208  3217               	rrcf	(___lodiv@divisor+7)^0,f,c
  2497  00120A  3216               	rrcf	(___lodiv@divisor+6)^0,f,c
  2498  00120C  3215               	rrcf	(___lodiv@divisor+5)^0,f,c
  2499  00120E  3214               	rrcf	(___lodiv@divisor+4)^0,f,c
  2500  001210  3213               	rrcf	(___lodiv@divisor+3)^0,f,c
  2501  001212  3212               	rrcf	(___lodiv@divisor+2)^0,f,c
  2502  001214  3211               	rrcf	(___lodiv@divisor+1)^0,f,c
  2503  001216  3210               	rrcf	___lodiv@divisor^0,f,c
  2504  001218  2E20               	decfsz	___lodiv@counter^0,f,c
  2505  00121A  EFD2  F008         	goto	l1841
  2506  00121E                     l773:
  2507  00121E  C018  F008         	movff	___lodiv@quotient,?___lodiv
  2508  001222  C019  F009         	movff	___lodiv@quotient+1,?___lodiv+1
  2509  001226  C01A  F00A         	movff	___lodiv@quotient+2,?___lodiv+2
  2510  00122A  C01B  F00B         	movff	___lodiv@quotient+3,?___lodiv+3
  2511  00122E  C01C  F00C         	movff	___lodiv@quotient+4,?___lodiv+4
  2512  001232  C01D  F00D         	movff	___lodiv@quotient+5,?___lodiv+5
  2513  001236  C01E  F00E         	movff	___lodiv@quotient+6,?___lodiv+6
  2514  00123A  C01F  F00F         	movff	___lodiv@quotient+7,?___lodiv+7
  2515  00123E  0012               	return		;funcret
  2516  001240                     __end_of___lodiv:
  2517                           	opt callstack 0
  2518                           
  2519 ;; *************** function _atoi *****************
  2520 ;; Defined at:
  2521 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  s               2   14[COMRAM] PTR const unsigned char 
  2524 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  n               2   27[COMRAM] int 
  2527 ;;  neg             2   20[COMRAM] int 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  2   14[COMRAM] int 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2537 ;;      Params:         2       0       0       0       0       0       0       0       0
  2538 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2539 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2540 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2541 ;;Total ram usage:       15 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    9
  2544 ;; This function calls:
  2545 ;;		___wmul
  2546 ;;		_isdigit
  2547 ;;		_isspace
  2548 ;; This function is called by:
  2549 ;;		_vfpfcnvrt
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text12
  2554  000D56                     __ptext12:
  2555                           	opt callstack 0
  2556  000D56                     _atoi:
  2557                           	opt callstack 18
  2558  000D56  0E00               	movlw	0
  2559  000D58  6E1D               	movwf	(atoi@n+1)^0,c
  2560  000D5A  0E00               	movlw	0
  2561  000D5C  6E1C               	movwf	atoi@n^0,c
  2562  000D5E  0E00               	movlw	0
  2563  000D60  6E16               	movwf	(atoi@neg+1)^0,c
  2564  000D62  0E00               	movlw	0
  2565  000D64  6E15               	movwf	atoi@neg^0,c
  2566  000D66  EFB7  F006         	goto	l1937
  2567  000D6A                     l1935:
  2568  000D6A  4A0F               	infsnz	atoi@s^0,f,c
  2569  000D6C  2A10               	incf	(atoi@s+1)^0,f,c
  2570  000D6E                     l1937:
  2571  000D6E  0E01               	movlw	1
  2572  000D70  6E1B               	movwf	_atoi$1229^0,c
  2573  000D72  C00F  FFF6         	movff	atoi@s,tblptrl
  2574  000D76  C010  FFF7         	movff	atoi@s+1,tblptrh
  2575  000D7A                     	if	0	;tblptru may be non-zero
  2576  000D7A                     	endif
  2577  000D7A                     	if	0	;tblptru may be non-zero
  2578  000D7A                     	endif
  2579  000D7A  0008               	tblrd		*
  2580  000D7C  50F5               	movf	tablat,w,c
  2581  000D7E  0A20               	xorlw	32
  2582  000D80  B4D8               	btfsc	status,2,c
  2583  000D82  EFC5  F006         	goto	u1101
  2584  000D86  EFC7  F006         	goto	u1100
  2585  000D8A                     u1101:
  2586  000D8A  EFE4  F006         	goto	l1945
  2587  000D8E                     u1100:
  2588  000D8E  0EF7               	movlw	247
  2589  000D90  6E11               	movwf	??_atoi^0,c
  2590  000D92  0EFF               	movlw	255
  2591  000D94  6E12               	movwf	(??_atoi+1)^0,c
  2592  000D96  C00F  FFF6         	movff	atoi@s,tblptrl
  2593  000D9A  C010  FFF7         	movff	atoi@s+1,tblptrh
  2594  000D9E                     	if	0	;tblptru may be non-zero
  2595  000D9E                     	endif
  2596  000D9E                     	if	0	;tblptru may be non-zero
  2597  000D9E                     	endif
  2598  000D9E  0008               	tblrd		*
  2599  000DA0  50F5               	movf	tablat,w,c
  2600  000DA2  6E13               	movwf	(??_atoi+2)^0,c
  2601  000DA4  6A14               	clrf	(??_atoi+3)^0,c
  2602  000DA6  5011               	movf	??_atoi^0,w,c
  2603  000DA8  2613               	addwf	(??_atoi+2)^0,f,c
  2604  000DAA  5012               	movf	(??_atoi+1)^0,w,c
  2605  000DAC  2214               	addwfc	(??_atoi+3)^0,f,c
  2606  000DAE  5014               	movf	(??_atoi+3)^0,w,c
  2607  000DB0  E109               	bnz	u1110
  2608  000DB2  0E05               	movlw	5
  2609  000DB4  5C13               	subwf	(??_atoi+2)^0,w,c
  2610  000DB6  A0D8               	btfss	status,0,c
  2611  000DB8  EFE0  F006         	goto	u1111
  2612  000DBC  EFE2  F006         	goto	u1110
  2613  000DC0                     u1111:
  2614  000DC0  EFE4  F006         	goto	l1945
  2615  000DC4                     u1110:
  2616  000DC4  0E00               	movlw	0
  2617  000DC6  6E1B               	movwf	_atoi$1229^0,c
  2618  000DC8                     l1945:
  2619  000DC8  C01B  F017         	movff	_atoi$1229,_atoi$1228
  2620  000DCC  6A18               	clrf	(_atoi$1228+1)^0,c
  2621  000DCE  5017               	movf	_atoi$1228^0,w,c
  2622  000DD0  1018               	iorwf	(_atoi$1228+1)^0,w,c
  2623  000DD2  A4D8               	btfss	status,2,c
  2624  000DD4  EFEE  F006         	goto	u1121
  2625  000DD8  EFF0  F006         	goto	u1120
  2626  000DDC                     u1121:
  2627  000DDC  EFB5  F006         	goto	l1935
  2628  000DE0                     u1120:
  2629  000DE0  EFFA  F006         	goto	l1955
  2630  000DE4                     l1951:
  2631  000DE4  0E00               	movlw	0
  2632  000DE6  6E16               	movwf	(atoi@neg+1)^0,c
  2633  000DE8  0E01               	movlw	1
  2634  000DEA  6E15               	movwf	atoi@neg^0,c
  2635  000DEC                     l1953:
  2636  000DEC  4A0F               	infsnz	atoi@s^0,f,c
  2637  000DEE  2A10               	incf	(atoi@s+1)^0,f,c
  2638  000DF0  EF2F  F007         	goto	l1961
  2639  000DF4                     l1955:
  2640  000DF4  C00F  FFF6         	movff	atoi@s,tblptrl
  2641  000DF8  C010  FFF7         	movff	atoi@s+1,tblptrh
  2642  000DFC                     	if	0	;tblptru may be non-zero
  2643  000DFC                     	endif
  2644  000DFC                     	if	0	;tblptru may be non-zero
  2645  000DFC                     	endif
  2646  000DFC  0008               	tblrd		*
  2647  000DFE  50F5               	movf	tablat,w,c
  2648  000E00  6E11               	movwf	??_atoi^0,c
  2649  000E02  6A12               	clrf	(??_atoi+1)^0,c
  2650                           
  2651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2652                           ; Switch size 1, requested type "simple"
  2653                           ; Number of cases is 1, Range of values is 0 to 0
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte            4     3 (average)
  2657                           ;	Chosen strategy is simple_byte
  2658  000E04  5012               	movf	(??_atoi+1)^0,w,c
  2659  000E06  0A00               	xorlw	0	; case 0
  2660  000E08  B4D8               	btfsc	status,2,c
  2661  000E0A  EF09  F007         	goto	l2631
  2662  000E0E  EF2F  F007         	goto	l1961
  2663  000E12                     l2631:
  2664                           
  2665                           ; Switch size 1, requested type "simple"
  2666                           ; Number of cases is 2, Range of values is 43 to 45
  2667                           ; switch strategies available:
  2668                           ; Name         Instructions Cycles
  2669                           ; simple_byte            7     4 (average)
  2670                           ;	Chosen strategy is simple_byte
  2671  000E12  5011               	movf	??_atoi^0,w,c
  2672  000E14  0A2B               	xorlw	43	; case 43
  2673  000E16  B4D8               	btfsc	status,2,c
  2674  000E18  EFF6  F006         	goto	l1953
  2675  000E1C  0A06               	xorlw	6	; case 45
  2676  000E1E  B4D8               	btfsc	status,2,c
  2677  000E20  EFF2  F006         	goto	l1951
  2678  000E24  EF2F  F007         	goto	l1961
  2679  000E28                     l1957:
  2680  000E28  C01C  F008         	movff	atoi@n,___wmul@multiplier
  2681  000E2C  C01D  F009         	movff	atoi@n+1,___wmul@multiplier+1
  2682  000E30  0E00               	movlw	0
  2683  000E32  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  2684  000E34  0E0A               	movlw	10
  2685  000E36  6E0A               	movwf	___wmul@multiplicand^0,c
  2686  000E38  EC44  F00C         	call	___wmul	;wreg free
  2687  000E3C  C00F  FFF6         	movff	atoi@s,tblptrl
  2688  000E40  C010  FFF7         	movff	atoi@s+1,tblptrh
  2689  000E44                     	if	0	;tblptru may be non-zero
  2690  000E44                     	endif
  2691  000E44                     	if	0	;tblptru may be non-zero
  2692  000E44                     	endif
  2693  000E44  0008               	tblrd		*
  2694  000E46  50F5               	movf	tablat,w,c
  2695  000E48  5E08               	subwf	?___wmul^0,f,c
  2696  000E4A  0E00               	movlw	0
  2697  000E4C  5A09               	subwfb	(?___wmul+1)^0,f,c
  2698  000E4E  0E30               	movlw	48
  2699  000E50  2408               	addwf	?___wmul^0,w,c
  2700  000E52  6E1C               	movwf	atoi@n^0,c
  2701  000E54  0E00               	movlw	0
  2702  000E56  2009               	addwfc	(?___wmul+1)^0,w,c
  2703  000E58  6E1D               	movwf	(atoi@n+1)^0,c
  2704  000E5A  EFF6  F006         	goto	l1953
  2705  000E5E                     l1961:
  2706  000E5E  0ED0               	movlw	208
  2707  000E60  6E11               	movwf	??_atoi^0,c
  2708  000E62  0EFF               	movlw	255
  2709  000E64  6E12               	movwf	(??_atoi+1)^0,c
  2710  000E66  C00F  FFF6         	movff	atoi@s,tblptrl
  2711  000E6A  C010  FFF7         	movff	atoi@s+1,tblptrh
  2712  000E6E                     	if	0	;tblptru may be non-zero
  2713  000E6E                     	endif
  2714  000E6E                     	if	0	;tblptru may be non-zero
  2715  000E6E                     	endif
  2716  000E6E  0008               	tblrd		*
  2717  000E70  50F5               	movf	tablat,w,c
  2718  000E72  6E13               	movwf	(??_atoi+2)^0,c
  2719  000E74  6A14               	clrf	(??_atoi+3)^0,c
  2720  000E76  5011               	movf	??_atoi^0,w,c
  2721  000E78  2613               	addwf	(??_atoi+2)^0,f,c
  2722  000E7A  5012               	movf	(??_atoi+1)^0,w,c
  2723  000E7C  2214               	addwfc	(??_atoi+3)^0,f,c
  2724  000E7E  5014               	movf	(??_atoi+3)^0,w,c
  2725  000E80  E10A               	bnz	u1130
  2726  000E82  0E0A               	movlw	10
  2727  000E84  5C13               	subwf	(??_atoi+2)^0,w,c
  2728  000E86  A0D8               	btfss	status,0,c
  2729  000E88  EF48  F007         	goto	u1131
  2730  000E8C  EF4B  F007         	goto	u1130
  2731  000E90                     u1131:
  2732  000E90  0E01               	movlw	1
  2733  000E92  EF4C  F007         	goto	u1140
  2734  000E96                     u1130:
  2735  000E96  0E00               	movlw	0
  2736  000E98                     u1140:
  2737  000E98  6E19               	movwf	_atoi$1230^0,c
  2738  000E9A  6A1A               	clrf	(_atoi$1230+1)^0,c
  2739  000E9C  5019               	movf	_atoi$1230^0,w,c
  2740  000E9E  101A               	iorwf	(_atoi$1230+1)^0,w,c
  2741  000EA0  A4D8               	btfss	status,2,c
  2742  000EA2  EF55  F007         	goto	u1151
  2743  000EA6  EF57  F007         	goto	u1150
  2744  000EAA                     u1151:
  2745  000EAA  EF14  F007         	goto	l1957
  2746  000EAE                     u1150:
  2747  000EAE  5015               	movf	atoi@neg^0,w,c
  2748  000EB0  1016               	iorwf	(atoi@neg+1)^0,w,c
  2749  000EB2  A4D8               	btfss	status,2,c
  2750  000EB4  EF5E  F007         	goto	u1161
  2751  000EB8  EF60  F007         	goto	u1160
  2752  000EBC                     u1161:
  2753  000EBC  EF6E  F007         	goto	l1034
  2754  000EC0                     u1160:
  2755  000EC0  C01C  F011         	movff	atoi@n,??_atoi
  2756  000EC4  C01D  F012         	movff	atoi@n+1,??_atoi+1
  2757  000EC8  1E11               	comf	??_atoi^0,f,c
  2758  000ECA  1E12               	comf	(??_atoi+1)^0,f,c
  2759  000ECC  4A11               	infsnz	??_atoi^0,f,c
  2760  000ECE  2A12               	incf	(??_atoi+1)^0,f,c
  2761  000ED0  C011  F00F         	movff	??_atoi,?_atoi
  2762  000ED4  C012  F010         	movff	??_atoi+1,?_atoi+1
  2763  000ED8  EF72  F007         	goto	l1037
  2764  000EDC                     l1034:
  2765  000EDC  C01C  F00F         	movff	atoi@n,?_atoi
  2766  000EE0  C01D  F010         	movff	atoi@n+1,?_atoi+1
  2767  000EE4                     l1037:
  2768  000EE4  0012               	return		;funcret
  2769  000EE6                     __end_of_atoi:
  2770                           	opt callstack 0
  2771                           
  2772 ;; *************** function _isspace *****************
  2773 ;; Defined at:
  2774 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  c               2    7[COMRAM] int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  2    7[COMRAM] int 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2788 ;;      Params:         2       0       0       0       0       0       0       0       0
  2789 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2790 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2791 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2792 ;;Total ram usage:        7 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    8
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_atoi
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text13
  2803  00167A                     __ptext13:
  2804                           	opt callstack 0
  2805  00167A                     _isspace:
  2806                           	opt callstack 18
  2807  00167A  0E01               	movlw	1
  2808  00167C  6E0E               	movwf	_isspace$1246^0,c
  2809  00167E  0E20               	movlw	32
  2810  001680  1808               	xorwf	isspace@c^0,w,c
  2811  001682  1009               	iorwf	(isspace@c+1)^0,w,c
  2812  001684  B4D8               	btfsc	status,2,c
  2813  001686  EF47  F00B         	goto	u971
  2814  00168A  EF49  F00B         	goto	u970
  2815  00168E                     u971:
  2816  00168E  EF62  F00B         	goto	l1877
  2817  001692                     u970:
  2818  001692  0EF7               	movlw	247
  2819  001694  6E0A               	movwf	??_isspace^0,c
  2820  001696  0EFF               	movlw	255
  2821  001698  6E0B               	movwf	(??_isspace+1)^0,c
  2822  00169A  C008  F00C         	movff	isspace@c,??_isspace+2
  2823  00169E  C009  F00D         	movff	isspace@c+1,??_isspace+3
  2824  0016A2  500A               	movf	??_isspace^0,w,c
  2825  0016A4  260C               	addwf	(??_isspace+2)^0,f,c
  2826  0016A6  500B               	movf	(??_isspace+1)^0,w,c
  2827  0016A8  220D               	addwfc	(??_isspace+3)^0,f,c
  2828  0016AA  500D               	movf	(??_isspace+3)^0,w,c
  2829  0016AC  E109               	bnz	u980
  2830  0016AE  0E05               	movlw	5
  2831  0016B0  5C0C               	subwf	(??_isspace+2)^0,w,c
  2832  0016B2  A0D8               	btfss	status,0,c
  2833  0016B4  EF5E  F00B         	goto	u981
  2834  0016B8  EF60  F00B         	goto	u980
  2835  0016BC                     u981:
  2836  0016BC  EF62  F00B         	goto	l1877
  2837  0016C0                     u980:
  2838  0016C0  0E00               	movlw	0
  2839  0016C2  6E0E               	movwf	_isspace$1246^0,c
  2840  0016C4                     l1877:
  2841  0016C4  C00E  F008         	movff	_isspace$1246,?_isspace
  2842  0016C8  6A09               	clrf	(?_isspace+1)^0,c
  2843  0016CA  0012               	return		;funcret
  2844  0016CC                     __end_of_isspace:
  2845                           	opt callstack 0
  2846                           
  2847 ;; *************** function _isdigit *****************
  2848 ;; Defined at:
  2849 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  c               2    7[COMRAM] int 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  2    7[COMRAM] int 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         2       0       0       0       0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2866 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2867 ;;Total ram usage:        6 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    8
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_vfpfcnvrt
  2874 ;;		_atoi
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text14
  2879  001794                     __ptext14:
  2880                           	opt callstack 0
  2881  001794                     _isdigit:
  2882                           	opt callstack 19
  2883  001794  0ED0               	movlw	208
  2884  001796  6E0A               	movwf	??_isdigit^0,c
  2885  001798  0EFF               	movlw	255
  2886  00179A  6E0B               	movwf	(??_isdigit+1)^0,c
  2887  00179C  C008  F00C         	movff	isdigit@c,??_isdigit+2
  2888  0017A0  C009  F00D         	movff	isdigit@c+1,??_isdigit+3
  2889  0017A4  500A               	movf	??_isdigit^0,w,c
  2890  0017A6  260C               	addwf	(??_isdigit+2)^0,f,c
  2891  0017A8  500B               	movf	(??_isdigit+1)^0,w,c
  2892  0017AA  220D               	addwfc	(??_isdigit+3)^0,f,c
  2893  0017AC  500D               	movf	(??_isdigit+3)^0,w,c
  2894  0017AE  E10A               	bnz	u880
  2895  0017B0  0E0A               	movlw	10
  2896  0017B2  5C0C               	subwf	(??_isdigit+2)^0,w,c
  2897  0017B4  A0D8               	btfss	status,0,c
  2898  0017B6  EFDF  F00B         	goto	u881
  2899  0017BA  EFE2  F00B         	goto	u880
  2900  0017BE                     u881:
  2901  0017BE  0E01               	movlw	1
  2902  0017C0  EFE3  F00B         	goto	u890
  2903  0017C4                     u880:
  2904  0017C4  0E00               	movlw	0
  2905  0017C6                     u890:
  2906  0017C6  6E08               	movwf	?_isdigit^0,c
  2907  0017C8  6A09               	clrf	(?_isdigit+1)^0,c
  2908  0017CA  0012               	return		;funcret
  2909  0017CC                     __end_of_isdigit:
  2910                           	opt callstack 0
  2911                           
  2912 ;; *************** function ___wmul *****************
  2913 ;; Defined at:
  2914 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  multiplier      2    7[COMRAM] unsigned int 
  2917 ;;  multiplicand    2    9[COMRAM] unsigned int 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  product         2   11[COMRAM] unsigned int 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  2    7[COMRAM] unsigned int 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0, prodl, prodh
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2929 ;;      Params:         4       0       0       0       0       0       0       0       0
  2930 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2932 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2933 ;;Total ram usage:        6 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    8
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_atoi
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text15
  2944  001888                     __ptext15:
  2945                           	opt callstack 0
  2946  001888                     ___wmul:
  2947                           	opt callstack 18
  2948  001888  5008               	movf	___wmul@multiplier^0,w,c
  2949  00188A  020A               	mulwf	___wmul@multiplicand^0,c
  2950  00188C  CFF3 F00C          	movff	prodl,___wmul@product
  2951  001890  CFF4 F00D          	movff	prodh,___wmul@product+1
  2952  001894  5008               	movf	___wmul@multiplier^0,w,c
  2953  001896  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  2954  001898  50F3               	movf	243,w,c
  2955  00189A  260D               	addwf	(___wmul@product+1)^0,f,c
  2956  00189C  5009               	movf	(___wmul@multiplier+1)^0,w,c
  2957  00189E  020A               	mulwf	___wmul@multiplicand^0,c
  2958  0018A0  50F3               	movf	243,w,c
  2959  0018A2  260D               	addwf	(___wmul@product+1)^0,f,c
  2960  0018A4  C00C  F008         	movff	___wmul@product,?___wmul
  2961  0018A8  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  2962  0018AC  0012               	return		;funcret
  2963  0018AE                     __end_of___wmul:
  2964                           	opt callstack 0
  2965                           
  2966 ;; *************** function _setCursor *****************
  2967 ;; Defined at:
  2968 ;;		line 56 in file "LCD.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  x               1    wreg     unsigned char 
  2971 ;;  y               1    9[COMRAM] unsigned char 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  x               1   15[COMRAM] unsigned char 
  2974 ;;  n               1   14[COMRAM] unsigned char 
  2975 ;;  m               1   13[COMRAM] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2985 ;;      Params:         1       0       0       0       0       0       0       0       0
  2986 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2987 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2988 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2989 ;;Total ram usage:        7 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:   10
  2992 ;; This function calls:
  2993 ;;		_comando
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text16
  3000  001036                     __ptext16:
  3001                           	opt callstack 0
  3002  001036                     _setCursor:
  3003                           	opt callstack 20
  3004                           
  3005                           ;incstack = 0
  3006                           ;setCursor@x stored from wreg
  3007  001036  6E10               	movwf	setCursor@x^0,c
  3008  001038                     
  3009                           ;LCD.c: 57:     char m;;LCD.c: 58:     char n;;LCD.c: 59:     if(y==1){
  3010  001038  040A               	decf	setCursor@y^0,w,c
  3011  00103A  A4D8               	btfss	status,2,c
  3012  00103C  EF22  F008         	goto	u1331
  3013  001040  EF24  F008         	goto	u1330
  3014  001044                     u1331:
  3015  001044  EF3E  F008         	goto	l219
  3016  001048                     u1330:
  3017  001048                     
  3018                           ;LCD.c: 60:         m=0x80 + x;
  3019  001048  5010               	movf	setCursor@x^0,w,c
  3020  00104A  0F80               	addlw	128
  3021  00104C  6E0E               	movwf	setCursor@m^0,c
  3022                           
  3023                           ;LCD.c: 61:         n=(0x80 + x) >> 4;
  3024  00104E  5010               	movf	setCursor@x^0,w,c
  3025  001050  6E0B               	movwf	??_setCursor^0,c
  3026  001052  6A0C               	clrf	(??_setCursor+1)^0,c
  3027  001054  0E80               	movlw	128
  3028  001056  260B               	addwf	??_setCursor^0,f,c
  3029  001058  0E00               	movlw	0
  3030  00105A  220C               	addwfc	(??_setCursor+1)^0,f,c
  3031  00105C  0E04               	movlw	4
  3032  00105E  6E0D               	movwf	(??_setCursor+2)^0,c
  3033  001060                     u1345:
  3034  001060  340C               	rlcf	(??_setCursor+1)^0,w,c
  3035  001062  320C               	rrcf	(??_setCursor+1)^0,f,c
  3036  001064  320B               	rrcf	??_setCursor^0,f,c
  3037  001066  2E0D               	decfsz	(??_setCursor+2)^0,f,c
  3038  001068  EF30  F008         	goto	u1345
  3039  00106C  500B               	movf	??_setCursor^0,w,c
  3040  00106E  6E0F               	movwf	setCursor@n^0,c
  3041  001070                     
  3042                           ;LCD.c: 62:         comando(n);
  3043  001070  500F               	movf	setCursor@n^0,w,c
  3044  001072  EC66  F00C         	call	_comando
  3045  001076                     
  3046                           ;LCD.c: 63:         comando(m);
  3047  001076  500E               	movf	setCursor@m^0,w,c
  3048  001078  EC66  F00C         	call	_comando
  3049  00107C                     l219:
  3050                           
  3051                           ;LCD.c: 65:     if(y==2){
  3052  00107C  0E02               	movlw	2
  3053  00107E  180A               	xorwf	setCursor@y^0,w,c
  3054  001080  A4D8               	btfss	status,2,c
  3055  001082  EF45  F008         	goto	u1351
  3056  001086  EF47  F008         	goto	u1350
  3057  00108A                     u1351:
  3058  00108A  EF61  F008         	goto	l220
  3059  00108E                     u1350:
  3060  00108E                     
  3061                           ;LCD.c: 66:         m=0xC0 + x;
  3062  00108E  5010               	movf	setCursor@x^0,w,c
  3063  001090  0FC0               	addlw	192
  3064  001092  6E0E               	movwf	setCursor@m^0,c
  3065                           
  3066                           ;LCD.c: 67:         n=(0xC0 + x) >> 4;
  3067  001094  5010               	movf	setCursor@x^0,w,c
  3068  001096  6E0B               	movwf	??_setCursor^0,c
  3069  001098  6A0C               	clrf	(??_setCursor+1)^0,c
  3070  00109A  0EC0               	movlw	192
  3071  00109C  260B               	addwf	??_setCursor^0,f,c
  3072  00109E  0E00               	movlw	0
  3073  0010A0  220C               	addwfc	(??_setCursor+1)^0,f,c
  3074  0010A2  0E04               	movlw	4
  3075  0010A4  6E0D               	movwf	(??_setCursor+2)^0,c
  3076  0010A6                     u1365:
  3077  0010A6  340C               	rlcf	(??_setCursor+1)^0,w,c
  3078  0010A8  320C               	rrcf	(??_setCursor+1)^0,f,c
  3079  0010AA  320B               	rrcf	??_setCursor^0,f,c
  3080  0010AC  2E0D               	decfsz	(??_setCursor+2)^0,f,c
  3081  0010AE  EF53  F008         	goto	u1365
  3082  0010B2  500B               	movf	??_setCursor^0,w,c
  3083  0010B4  6E0F               	movwf	setCursor@n^0,c
  3084  0010B6                     
  3085                           ;LCD.c: 68:         comando(n);
  3086  0010B6  500F               	movf	setCursor@n^0,w,c
  3087  0010B8  EC66  F00C         	call	_comando
  3088  0010BC                     
  3089                           ;LCD.c: 69:         comando(m);
  3090  0010BC  500E               	movf	setCursor@m^0,w,c
  3091  0010BE  EC66  F00C         	call	_comando
  3092  0010C2                     l220:
  3093                           
  3094                           ;LCD.c: 71:     if(y==3){
  3095  0010C2  0E03               	movlw	3
  3096  0010C4  180A               	xorwf	setCursor@y^0,w,c
  3097  0010C6  A4D8               	btfss	status,2,c
  3098  0010C8  EF68  F008         	goto	u1371
  3099  0010CC  EF6A  F008         	goto	u1370
  3100  0010D0                     u1371:
  3101  0010D0  EF84  F008         	goto	l221
  3102  0010D4                     u1370:
  3103  0010D4                     
  3104                           ;LCD.c: 72:         m=0x80 +20+ x;
  3105  0010D4  5010               	movf	setCursor@x^0,w,c
  3106  0010D6  0F94               	addlw	148
  3107  0010D8  6E0E               	movwf	setCursor@m^0,c
  3108                           
  3109                           ;LCD.c: 73:         n=(0x80+20 + x) >> 4;
  3110  0010DA  5010               	movf	setCursor@x^0,w,c
  3111  0010DC  6E0B               	movwf	??_setCursor^0,c
  3112  0010DE  6A0C               	clrf	(??_setCursor+1)^0,c
  3113  0010E0  0E94               	movlw	148
  3114  0010E2  260B               	addwf	??_setCursor^0,f,c
  3115  0010E4  0E00               	movlw	0
  3116  0010E6  220C               	addwfc	(??_setCursor+1)^0,f,c
  3117  0010E8  0E04               	movlw	4
  3118  0010EA  6E0D               	movwf	(??_setCursor+2)^0,c
  3119  0010EC                     u1385:
  3120  0010EC  340C               	rlcf	(??_setCursor+1)^0,w,c
  3121  0010EE  320C               	rrcf	(??_setCursor+1)^0,f,c
  3122  0010F0  320B               	rrcf	??_setCursor^0,f,c
  3123  0010F2  2E0D               	decfsz	(??_setCursor+2)^0,f,c
  3124  0010F4  EF76  F008         	goto	u1385
  3125  0010F8  500B               	movf	??_setCursor^0,w,c
  3126  0010FA  6E0F               	movwf	setCursor@n^0,c
  3127  0010FC                     
  3128                           ;LCD.c: 74:         comando(n);
  3129  0010FC  500F               	movf	setCursor@n^0,w,c
  3130  0010FE  EC66  F00C         	call	_comando
  3131  001102                     
  3132                           ;LCD.c: 75:         comando(m);
  3133  001102  500E               	movf	setCursor@m^0,w,c
  3134  001104  EC66  F00C         	call	_comando
  3135  001108                     l221:
  3136                           
  3137                           ;LCD.c: 77:     if(y==4){
  3138  001108  0E04               	movlw	4
  3139  00110A  180A               	xorwf	setCursor@y^0,w,c
  3140  00110C  A4D8               	btfss	status,2,c
  3141  00110E  EF8B  F008         	goto	u1391
  3142  001112  EF8D  F008         	goto	u1390
  3143  001116                     u1391:
  3144  001116  EFA7  F008         	goto	l223
  3145  00111A                     u1390:
  3146  00111A                     
  3147                           ;LCD.c: 78:         m=0xC0 +20+ x;
  3148  00111A  5010               	movf	setCursor@x^0,w,c
  3149  00111C  0FD4               	addlw	212
  3150  00111E  6E0E               	movwf	setCursor@m^0,c
  3151                           
  3152                           ;LCD.c: 79:         n=(0xC0 + 20+ x) >> 4;
  3153  001120  5010               	movf	setCursor@x^0,w,c
  3154  001122  6E0B               	movwf	??_setCursor^0,c
  3155  001124  6A0C               	clrf	(??_setCursor+1)^0,c
  3156  001126  0ED4               	movlw	212
  3157  001128  260B               	addwf	??_setCursor^0,f,c
  3158  00112A  0E00               	movlw	0
  3159  00112C  220C               	addwfc	(??_setCursor+1)^0,f,c
  3160  00112E  0E04               	movlw	4
  3161  001130  6E0D               	movwf	(??_setCursor+2)^0,c
  3162  001132                     u1405:
  3163  001132  340C               	rlcf	(??_setCursor+1)^0,w,c
  3164  001134  320C               	rrcf	(??_setCursor+1)^0,f,c
  3165  001136  320B               	rrcf	??_setCursor^0,f,c
  3166  001138  2E0D               	decfsz	(??_setCursor+2)^0,f,c
  3167  00113A  EF99  F008         	goto	u1405
  3168  00113E  500B               	movf	??_setCursor^0,w,c
  3169  001140  6E0F               	movwf	setCursor@n^0,c
  3170  001142                     
  3171                           ;LCD.c: 80:         comando(n);
  3172  001142  500F               	movf	setCursor@n^0,w,c
  3173  001144  EC66  F00C         	call	_comando
  3174  001148                     
  3175                           ;LCD.c: 81:         comando(m);
  3176  001148  500E               	movf	setCursor@m^0,w,c
  3177  00114A  EC66  F00C         	call	_comando
  3178  00114E                     l223:
  3179  00114E  0012               	return		;funcret
  3180  001150                     __end_of_setCursor:
  3181                           	opt callstack 0
  3182                           
  3183 ;; *************** function _print *****************
  3184 ;; Defined at:
  3185 ;;		line 95 in file "LCD.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  a               2   12[COMRAM] PTR unsigned char 
  3188 ;;		 -> horas(3), minut(3), segun(3), STR_1(5), 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  k               2   16[COMRAM] int 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3200 ;;      Params:         2       0       0       0       0       0       0       0       0
  3201 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3202 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3203 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3204 ;;Total ram usage:        6 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:   11
  3207 ;; This function calls:
  3208 ;;		_caracter
  3209 ;; This function is called by:
  3210 ;;		_main
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text17
  3215  00149C                     __ptext17:
  3216                           	opt callstack 0
  3217  00149C                     _print:
  3218                           	opt callstack 19
  3219  00149C                     
  3220                           ;LCD.c: 96:     for (int k=0;a[k]!='\0';k++){
  3221  00149C  0E00               	movlw	0
  3222  00149E  6E12               	movwf	(print@k+1)^0,c
  3223  0014A0  0E00               	movlw	0
  3224  0014A2  6E11               	movwf	print@k^0,c
  3225  0014A4  EF6E  F00A         	goto	l2189
  3226  0014A8                     l2185:
  3227                           
  3228                           ;LCD.c: 97:         caracter(a[k]);
  3229  0014A8  5011               	movf	print@k^0,w,c
  3230  0014AA  240D               	addwf	print@a^0,w,c
  3231  0014AC  6E0F               	movwf	??_print^0,c
  3232  0014AE  5012               	movf	(print@k+1)^0,w,c
  3233  0014B0  200E               	addwfc	(print@a+1)^0,w,c
  3234  0014B2  6E10               	movwf	(??_print+1)^0,c
  3235  0014B4  C00F  FFF6         	movff	??_print,tblptrl
  3236  0014B8  C010  FFF7         	movff	??_print+1,tblptrh
  3237  0014BC  6AF8               	clrf	tblptru,c
  3238  0014BE  0E07               	movlw	(high __ramtop+-1)
  3239  0014C0  64F7               	cpfsgt	tblptrh,c
  3240  0014C2  D003               	bra	u1417
  3241  0014C4  0008               	tblrd		*
  3242  0014C6  50F5               	movf	tablat,w,c
  3243  0014C8  D005               	bra	u1410
  3244  0014CA                     u1417:
  3245  0014CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  3246  0014CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  3247  0014D2  50E7               	movf	indf1,w,c
  3248  0014D4                     u1410:
  3249  0014D4  EC57  F00C         	call	_caracter
  3250  0014D8                     
  3251                           ;LCD.c: 98:     }
  3252  0014D8  4A11               	infsnz	print@k^0,f,c
  3253  0014DA  2A12               	incf	(print@k+1)^0,f,c
  3254  0014DC                     l2189:
  3255  0014DC  5011               	movf	print@k^0,w,c
  3256  0014DE  240D               	addwf	print@a^0,w,c
  3257  0014E0  6E0F               	movwf	??_print^0,c
  3258  0014E2  5012               	movf	(print@k+1)^0,w,c
  3259  0014E4  200E               	addwfc	(print@a+1)^0,w,c
  3260  0014E6  6E10               	movwf	(??_print+1)^0,c
  3261  0014E8  C00F  FFF6         	movff	??_print,tblptrl
  3262  0014EC  C010  FFF7         	movff	??_print+1,tblptrh
  3263  0014F0  6AF8               	clrf	tblptru,c
  3264  0014F2  0E07               	movlw	(high __ramtop+-1)
  3265  0014F4  64F7               	cpfsgt	tblptrh,c
  3266  0014F6  D003               	bra	u1427
  3267  0014F8  0008               	tblrd		*
  3268  0014FA  50F5               	movf	tablat,w,c
  3269  0014FC  D005               	bra	u1420
  3270  0014FE                     u1427:
  3271  0014FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  3272  001502  CFF7 FFE2          	movff	tblptrh,fsr1h
  3273  001506  50E7               	movf	indf1,w,c
  3274  001508                     u1420:
  3275  001508  0900               	iorlw	0
  3276  00150A  A4D8               	btfss	status,2,c
  3277  00150C  EF8A  F00A         	goto	u1431
  3278  001510  EF8C  F00A         	goto	u1430
  3279  001514                     u1431:
  3280  001514  EF54  F00A         	goto	l2185
  3281  001518                     u1430:
  3282  001518  0012               	return		;funcret
  3283  00151A                     __end_of_print:
  3284                           	opt callstack 0
  3285                           
  3286 ;; *************** function _caracter *****************
  3287 ;; Defined at:
  3288 ;;		line 85 in file "LCD.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  a               1    wreg     unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  a               1   11[COMRAM] unsigned char 
  3293 ;;  n               1   10[COMRAM] unsigned char 
  3294 ;;  m               1    9[COMRAM] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0
  3305 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3307 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3308 ;;Total ram usage:        3 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:   10
  3311 ;; This function calls:
  3312 ;;		_comando
  3313 ;; This function is called by:
  3314 ;;		_print
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text18
  3319  0018AE                     __ptext18:
  3320                           	opt callstack 0
  3321  0018AE                     _caracter:
  3322                           	opt callstack 19
  3323                           
  3324                           ;incstack = 0
  3325                           ;caracter@a stored from wreg
  3326  0018AE  6E0C               	movwf	caracter@a^0,c
  3327  0018B0                     
  3328                           ;LCD.c: 86:     char m,n;;LCD.c: 87:     m=a>>4;
  3329  0018B0  380C               	swapf	caracter@a^0,w,c
  3330  0018B2  0B0F               	andlw	15
  3331  0018B4  6E0A               	movwf	caracter@m^0,c
  3332  0018B6                     
  3333                           ;LCD.c: 88:     n=a;
  3334  0018B6  C00C  F00B         	movff	caracter@a,caracter@n
  3335  0018BA                     
  3336                           ;LCD.c: 89:     PORTEbits.RE0=1;
  3337  0018BA  8084               	bsf	132,0,c	;volatile
  3338  0018BC                     
  3339                           ;LCD.c: 90:     comando(m);
  3340  0018BC  500A               	movf	caracter@m^0,w,c
  3341  0018BE  EC66  F00C         	call	_comando
  3342  0018C2                     
  3343                           ;LCD.c: 91:     comando(n);
  3344  0018C2  500B               	movf	caracter@n^0,w,c
  3345  0018C4  EC66  F00C         	call	_comando
  3346  0018C8                     
  3347                           ;LCD.c: 92:     PORTEbits.RE0=0;
  3348  0018C8  9084               	bcf	132,0,c	;volatile
  3349  0018CA  0012               	return		;funcret
  3350  0018CC                     __end_of_caracter:
  3351                           	opt callstack 0
  3352                           
  3353 ;; *************** function _begin *****************
  3354 ;; Defined at:
  3355 ;;		line 41 in file "LCD.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3372 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:   10
  3376 ;; This function calls:
  3377 ;;		_comando
  3378 ;; This function is called by:
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text19
  3384  0016CC                     __ptext19:
  3385                           	opt callstack 0
  3386  0016CC                     _begin:
  3387                           	opt callstack 20
  3388  0016CC                     
  3389                           ;LCD.c: 42:     comando(0x03);
  3390  0016CC  0E03               	movlw	3
  3391  0016CE  EC66  F00C         	call	_comando
  3392                           
  3393                           ;LCD.c: 43:     comando(0x03);
  3394  0016D2  0E03               	movlw	3
  3395  0016D4  EC66  F00C         	call	_comando
  3396                           
  3397                           ;LCD.c: 44:     comando(0x03);
  3398  0016D8  0E03               	movlw	3
  3399  0016DA  EC66  F00C         	call	_comando
  3400                           
  3401                           ;LCD.c: 45:     comando(0x02);
  3402  0016DE  0E02               	movlw	2
  3403  0016E0  EC66  F00C         	call	_comando
  3404                           
  3405                           ;LCD.c: 46:     comando(0x02);
  3406  0016E4  0E02               	movlw	2
  3407  0016E6  EC66  F00C         	call	_comando
  3408                           
  3409                           ;LCD.c: 47:     comando(0x08);
  3410  0016EA  0E08               	movlw	8
  3411  0016EC  EC66  F00C         	call	_comando
  3412                           
  3413                           ;LCD.c: 48:     comando(0x00);
  3414  0016F0  0E00               	movlw	0
  3415  0016F2  EC66  F00C         	call	_comando
  3416                           
  3417                           ;LCD.c: 49:     comando(0x08);
  3418  0016F6  0E08               	movlw	8
  3419  0016F8  EC66  F00C         	call	_comando
  3420                           
  3421                           ;LCD.c: 50:     comando(0x00);
  3422  0016FC  0E00               	movlw	0
  3423  0016FE  EC66  F00C         	call	_comando
  3424                           
  3425                           ;LCD.c: 51:     comando(0x01);
  3426  001702  0E01               	movlw	1
  3427  001704  EC66  F00C         	call	_comando
  3428                           
  3429                           ;LCD.c: 52:     comando(0x00);
  3430  001708  0E00               	movlw	0
  3431  00170A  EC66  F00C         	call	_comando
  3432                           
  3433                           ;LCD.c: 53:     comando(0x0D);
  3434  00170E  0E0D               	movlw	13
  3435  001710  EC66  F00C         	call	_comando
  3436  001714  0012               	return		;funcret
  3437  001716                     __end_of_begin:
  3438                           	opt callstack 0
  3439                           
  3440 ;; *************** function _comando *****************
  3441 ;; Defined at:
  3442 ;;		line 32 in file "LCD.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  a               1    wreg     unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  a               1    8[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0
  3457 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3459 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3460 ;;Total ram usage:        1 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    9
  3463 ;; This function calls:
  3464 ;;		_busdata
  3465 ;; This function is called by:
  3466 ;;		_begin
  3467 ;;		_setCursor
  3468 ;;		_caracter
  3469 ;;		_create
  3470 ;;		_writecaracter
  3471 ;;		_clear
  3472 ;;		_home
  3473 ;;		_ocultarcursor
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text20
  3478  0018CC                     __ptext20:
  3479                           	opt callstack 0
  3480  0018CC                     _comando:
  3481                           	opt callstack 20
  3482                           
  3483                           ;incstack = 0
  3484                           ;comando@a stored from wreg
  3485  0018CC  6E09               	movwf	comando@a^0,c
  3486  0018CE                     
  3487                           ;LCD.c: 33:     PORTEbits.RE2=0;
  3488  0018CE  9484               	bcf	132,2,c	;volatile
  3489                           
  3490                           ;LCD.c: 34:     PORTEbits.RE2=1;
  3491  0018D0  8484               	bsf	132,2,c	;volatile
  3492  0018D2                     
  3493                           ;LCD.c: 36:     busdata(a);
  3494  0018D2  5009               	movf	comando@a^0,w,c
  3495  0018D4  ECBC  F00A         	call	_busdata
  3496  0018D8                     
  3497                           ;LCD.c: 37:     _delay((unsigned long)((1)*(2000000/4000.0)));
  3498  0018D8  0EA6               	movlw	166
  3499  0018DA                     u1607:
  3500  0018DA  2EE8               	decfsz	wreg,f,c
  3501  0018DC  D7FE               	bra	u1607
  3502  0018DE  D000               	nop2	
  3503  0018E0                     
  3504                           ;LCD.c: 38:     PORTEbits.RE2=0;
  3505  0018E0  9484               	bcf	132,2,c	;volatile
  3506  0018E2  0012               	return		;funcret
  3507  0018E4                     __end_of_comando:
  3508                           	opt callstack 0
  3509                           
  3510 ;; *************** function _busdata *****************
  3511 ;; Defined at:
  3512 ;;		line 4 in file "LCD.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  a               1    wreg     unsigned char 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  a               1    7[COMRAM] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3526 ;;      Params:         0       0       0       0       0       0       0       0       0
  3527 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3529 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3530 ;;Total ram usage:        1 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    8
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_comando
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text21
  3541  001578                     __ptext21:
  3542                           	opt callstack 0
  3543  001578                     _busdata:
  3544                           	opt callstack 20
  3545                           
  3546                           ;incstack = 0
  3547                           ;busdata@a stored from wreg
  3548  001578  6E08               	movwf	busdata@a^0,c
  3549  00157A                     
  3550                           ;LCD.c: 5:     if (a & 0x01){
  3551  00157A  A008               	btfss	busdata@a^0,0,c
  3552  00157C  EFC2  F00A         	goto	u991
  3553  001580  EFC4  F00A         	goto	u990
  3554  001584                     u991:
  3555  001584  EFC7  F00A         	goto	l202
  3556  001588                     u990:
  3557  001588                     
  3558                           ;LCD.c: 6:         PORTDbits.RD4=1;
  3559  001588  8883               	bsf	131,4,c	;volatile
  3560                           
  3561                           ;LCD.c: 7:     }
  3562  00158A  EFC8  F00A         	goto	l1885
  3563  00158E                     l202:
  3564                           
  3565                           ;LCD.c: 9:         PORTDbits.RD4=0;
  3566  00158E  9883               	bcf	131,4,c	;volatile
  3567  001590                     l1885:
  3568                           
  3569                           ;LCD.c: 11:     if (a & 0x02){
  3570  001590  A208               	btfss	busdata@a^0,1,c
  3571  001592  EFCD  F00A         	goto	u1001
  3572  001596  EFCF  F00A         	goto	u1000
  3573  00159A                     u1001:
  3574  00159A  EFD2  F00A         	goto	l204
  3575  00159E                     u1000:
  3576  00159E                     
  3577                           ;LCD.c: 12:         PORTDbits.RD5=1;
  3578  00159E  8A83               	bsf	131,5,c	;volatile
  3579                           
  3580                           ;LCD.c: 13:     }
  3581  0015A0  EFD3  F00A         	goto	l1889
  3582  0015A4                     l204:
  3583                           
  3584                           ;LCD.c: 15:         PORTDbits.RD5=0;
  3585  0015A4  9A83               	bcf	131,5,c	;volatile
  3586  0015A6                     l1889:
  3587                           
  3588                           ;LCD.c: 17:     if (a & 0x04){
  3589  0015A6  A408               	btfss	busdata@a^0,2,c
  3590  0015A8  EFD8  F00A         	goto	u1011
  3591  0015AC  EFDA  F00A         	goto	u1010
  3592  0015B0                     u1011:
  3593  0015B0  EFDD  F00A         	goto	l206
  3594  0015B4                     u1010:
  3595  0015B4                     
  3596                           ;LCD.c: 18:         PORTDbits.RD6=1;
  3597  0015B4  8C83               	bsf	131,6,c	;volatile
  3598                           
  3599                           ;LCD.c: 19:     }
  3600  0015B6  EFDE  F00A         	goto	l1893
  3601  0015BA                     l206:
  3602                           
  3603                           ;LCD.c: 21:         PORTDbits.RD6=0;
  3604  0015BA  9C83               	bcf	131,6,c	;volatile
  3605  0015BC                     l1893:
  3606                           
  3607                           ;LCD.c: 23:     if (a & 0x08){
  3608  0015BC  A608               	btfss	busdata@a^0,3,c
  3609  0015BE  EFE3  F00A         	goto	u1021
  3610  0015C2  EFE5  F00A         	goto	u1020
  3611  0015C6                     u1021:
  3612  0015C6  EFE8  F00A         	goto	l208
  3613  0015CA                     u1020:
  3614  0015CA                     
  3615                           ;LCD.c: 24:         PORTDbits.RD7=1;
  3616  0015CA  8E83               	bsf	131,7,c	;volatile
  3617                           
  3618                           ;LCD.c: 25:     }
  3619  0015CC  EFE9  F00A         	goto	l210
  3620  0015D0                     l208:
  3621                           
  3622                           ;LCD.c: 27:         PORTDbits.RD7=0;
  3623  0015D0  9E83               	bcf	131,7,c	;volatile
  3624  0015D2                     l210:
  3625  0015D2  0012               	return		;funcret
  3626  0015D4                     __end_of_busdata:
  3627                           	opt callstack 0
  3628                           
  3629 ;; *************** function _SYSTEM_Initialize *****************
  3630 ;; Defined at:
  3631 ;;		line 6 in file "mcc_generated_files/mcc.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:   10
  3652 ;; This function calls:
  3653 ;;		_EXT_INT_Initialize
  3654 ;;		_INTERRUPT_Initialize
  3655 ;;		_OSCILLATOR_Initialize
  3656 ;;		_PIN_MANAGER_Initialize
  3657 ;; This function is called by:
  3658 ;;		_main
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text22
  3663  00190E                     __ptext22:
  3664                           	opt callstack 0
  3665  00190E                     _SYSTEM_Initialize:
  3666                           	opt callstack 20
  3667  00190E                     
  3668                           ;mcc_generated_files/mcc.c: 9:     INTERRUPT_Initialize();
  3669  00190E  ECA3  F00C         	call	_INTERRUPT_Initialize	;wreg free
  3670  001912                     
  3671                           ;mcc_generated_files/mcc.c: 10:     PIN_MANAGER_Initialize();
  3672  001912  ECEA  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  3673  001916                     
  3674                           ;mcc_generated_files/mcc.c: 11:     OSCILLATOR_Initialize();
  3675  001916  EC95  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  3676  00191A                     
  3677                           ;mcc_generated_files/mcc.c: 12:     EXT_INT_Initialize();
  3678  00191A  EC7D  F00C         	call	_EXT_INT_Initialize	;wreg free
  3679  00191E  0012               	return		;funcret
  3680  001920                     __end_of_SYSTEM_Initialize:
  3681                           	opt callstack 0
  3682                           
  3683 ;; *************** function _PIN_MANAGER_Initialize *****************
  3684 ;; Defined at:
  3685 ;;		line 10 in file "mcc_generated_files/pin_manager.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    9
  3706 ;; This function calls:
  3707 ;;		_IOCB4_SetInterruptHandler
  3708 ;; This function is called by:
  3709 ;;		_SYSTEM_Initialize
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text23
  3714  0015D4                     __ptext23:
  3715                           	opt callstack 0
  3716  0015D4                     _PIN_MANAGER_Initialize:
  3717                           	opt callstack 20
  3718  0015D4                     
  3719                           ;mcc_generated_files/pin_manager.c: 15:     LATE = 0x00;
  3720  0015D4  0E00               	movlw	0
  3721  0015D6  6E8D               	movwf	141,c	;volatile
  3722                           
  3723                           ;mcc_generated_files/pin_manager.c: 16:     LATD = 0x00;
  3724  0015D8  0E00               	movlw	0
  3725  0015DA  6E8C               	movwf	140,c	;volatile
  3726                           
  3727                           ;mcc_generated_files/pin_manager.c: 17:     LATA = 0x00;
  3728  0015DC  0E00               	movlw	0
  3729  0015DE  6E89               	movwf	137,c	;volatile
  3730                           
  3731                           ;mcc_generated_files/pin_manager.c: 18:     LATB = 0x00;
  3732  0015E0  0E00               	movlw	0
  3733  0015E2  6E8A               	movwf	138,c	;volatile
  3734                           
  3735                           ;mcc_generated_files/pin_manager.c: 19:     LATC = 0x00;
  3736  0015E4  0E00               	movlw	0
  3737  0015E6  6E8B               	movwf	139,c	;volatile
  3738                           
  3739                           ;mcc_generated_files/pin_manager.c: 24:     TRISE = 0x02;
  3740  0015E8  0E02               	movlw	2
  3741  0015EA  6E96               	movwf	150,c	;volatile
  3742                           
  3743                           ;mcc_generated_files/pin_manager.c: 25:     TRISA = 0x00;
  3744  0015EC  0E00               	movlw	0
  3745  0015EE  6E92               	movwf	146,c	;volatile
  3746  0015F0                     
  3747                           ;mcc_generated_files/pin_manager.c: 26:     TRISB = 0xFF;
  3748  0015F0  6893               	setf	147,c	;volatile
  3749                           
  3750                           ;mcc_generated_files/pin_manager.c: 27:     TRISC = 0xC7;
  3751  0015F2  0EC7               	movlw	199
  3752  0015F4  6E94               	movwf	148,c	;volatile
  3753                           
  3754                           ;mcc_generated_files/pin_manager.c: 28:     TRISD = 0x00;
  3755  0015F6  0E00               	movlw	0
  3756  0015F8  6E95               	movwf	149,c	;volatile
  3757                           
  3758                           ;mcc_generated_files/pin_manager.c: 33:     ANSELD = 0x00;
  3759  0015FA  0E00               	movlw	0
  3760  0015FC  010F               	movlb	15	; () banked
  3761  0015FE  6F5E               	movwf	94,b	;volatile
  3762                           
  3763                           ;mcc_generated_files/pin_manager.c: 34:     ANSELC = 0xC4;
  3764  001600  0EC4               	movlw	196
  3765  001602  6F5D               	movwf	93,b	;volatile
  3766                           
  3767                           ;mcc_generated_files/pin_manager.c: 35:     ANSELB = 0x2E;
  3768  001604  0E2E               	movlw	46
  3769  001606  6F5C               	movwf	92,b	;volatile
  3770                           
  3771                           ;mcc_generated_files/pin_manager.c: 36:     ANSELE = 0x00;
  3772  001608  0E00               	movlw	0
  3773  00160A  6F5F               	movwf	95,b	;volatile
  3774                           
  3775                           ;mcc_generated_files/pin_manager.c: 37:     ANSELA = 0x00;
  3776  00160C  0E00               	movlw	0
  3777  00160E  6F5B               	movwf	91,b	;volatile
  3778                           
  3779                           ;mcc_generated_files/pin_manager.c: 42:     WPUB = 0x00;
  3780  001610  0E00               	movlw	0
  3781  001612  6E85               	movwf	133,c	;volatile
  3782  001614                     
  3783                           ; BSR set to: 15
  3784                           ;mcc_generated_files/pin_manager.c: 43:     INTCON2bits.nRBPU = 1;
  3785  001614  8EF1               	bsf	241,7,c	;volatile
  3786  001616                     
  3787                           ; BSR set to: 15
  3788                           ;mcc_generated_files/pin_manager.c: 51:     IOCBbits.IOCB4 = 1;
  3789  001616  8886               	bsf	134,4,c	;volatile
  3790  001618                     
  3791                           ; BSR set to: 15
  3792                           ;mcc_generated_files/pin_manager.c: 56:     IOCB4_SetInterruptHandler(IOCB4_DefaultInter
      +                          ruptHandler);
  3793  001618  0E4E               	movlw	low _IOCB4_DefaultInterruptHandler
  3794  00161A  6E08               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3795  00161C  0E19               	movlw	high _IOCB4_DefaultInterruptHandler
  3796  00161E  6E09               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3797  001620  EC90  F00C         	call	_IOCB4_SetInterruptHandler	;wreg free
  3798  001624                     
  3799                           ;mcc_generated_files/pin_manager.c: 59:     INTCONbits.IOCIE = 1;
  3800  001624  86F2               	bsf	242,3,c	;volatile
  3801  001626  0012               	return		;funcret
  3802  001628                     __end_of_PIN_MANAGER_Initialize:
  3803                           	opt callstack 0
  3804                           
  3805 ;; *************** function _IOCB4_SetInterruptHandler *****************
  3806 ;; Defined at:
  3807 ;;		line 91 in file "mcc_generated_files/pin_manager.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  InterruptHan    2    7[COMRAM] PTR FTN()void 
  3810 ;;		 -> IOCB4_DefaultInterruptHandler(1), 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3822 ;;      Params:         2       0       0       0       0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3825 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3826 ;;Total ram usage:        2 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    8
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_PIN_MANAGER_Initialize
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text24
  3837  001920                     __ptext24:
  3838                           	opt callstack 0
  3839  001920                     _IOCB4_SetInterruptHandler:
  3840                           	opt callstack 20
  3841  001920                     
  3842                           ;mcc_generated_files/pin_manager.c: 92:     IOCB4_InterruptHandler = InterruptHandler;
  3843  001920  C008  F0B5         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  3844  001924  C009  F0B6         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  3845  001928  0012               	return		;funcret
  3846  00192A                     __end_of_IOCB4_SetInterruptHandler:
  3847                           	opt callstack 0
  3848                           
  3849 ;; *************** function _OSCILLATOR_Initialize *****************
  3850 ;; Defined at:
  3851 ;;		line 15 in file "mcc_generated_files/mcc.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3868 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3869 ;;Total ram usage:        0 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    8
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_SYSTEM_Initialize
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text25
  3880  00192A                     __ptext25:
  3881                           	opt callstack 0
  3882  00192A                     _OSCILLATOR_Initialize:
  3883                           	opt callstack 21
  3884  00192A                     
  3885                           ;mcc_generated_files/mcc.c: 18:     OSCCON = 0x40;
  3886  00192A  0E40               	movlw	64
  3887  00192C  6ED3               	movwf	211,c	;volatile
  3888                           
  3889                           ;mcc_generated_files/mcc.c: 20:     OSCCON2 = 0x00;
  3890  00192E  0E00               	movlw	0
  3891  001930  6ED2               	movwf	210,c	;volatile
  3892  001932  0012               	return		;funcret
  3893  001934                     __end_of_OSCILLATOR_Initialize:
  3894                           	opt callstack 0
  3895                           
  3896 ;; *************** function _INTERRUPT_Initialize *****************
  3897 ;; Defined at:
  3898 ;;		line 5 in file "mcc_generated_files/interrupt_manager.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		None
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    8
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_SYSTEM_Initialize
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text26
  3927  001946                     __ptext26:
  3928                           	opt callstack 0
  3929  001946                     _INTERRUPT_Initialize:
  3930                           	opt callstack 21
  3931  001946                     
  3932                           ;mcc_generated_files/interrupt_manager.c: 8:     RCONbits.IPEN = 1;
  3933  001946  8ED0               	bsf	208,7,c	;volatile
  3934                           
  3935                           ;mcc_generated_files/interrupt_manager.c: 16:     INTCON2bits.IOCIP = 0;
  3936  001948  90F1               	bcf	241,0,c	;volatile
  3937  00194A  0012               	return		;funcret
  3938  00194C                     __end_of_INTERRUPT_Initialize:
  3939                           	opt callstack 0
  3940                           
  3941 ;; *************** function _EXT_INT_Initialize *****************
  3942 ;; Defined at:
  3943 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    9
  3964 ;; This function calls:
  3965 ;;		_INT0_SetInterruptHandler
  3966 ;; This function is called by:
  3967 ;;		_SYSTEM_Initialize
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text27
  3972  0018FA                     __ptext27:
  3973                           	opt callstack 0
  3974  0018FA                     _EXT_INT_Initialize:
  3975                           	opt callstack 20
  3976  0018FA                     
  3977                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
  3978  0018FA  92F2               	bcf	242,1,c	;volatile
  3979                           
  3980                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
  3981  0018FC  9CF1               	bcf	241,6,c	;volatile
  3982  0018FE                     
  3983                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  3984  0018FE  0E50               	movlw	low _INT0_DefaultInterruptHandler
  3985  001900  6E08               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3986  001902  0E19               	movlw	high _INT0_DefaultInterruptHandler
  3987  001904  6E09               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3988  001906  EC9A  F00C         	call	_INT0_SetInterruptHandler	;wreg free
  3989  00190A                     
  3990                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
  3991  00190A  88F2               	bsf	242,4,c	;volatile
  3992  00190C  0012               	return		;funcret
  3993  00190E                     __end_of_EXT_INT_Initialize:
  3994                           	opt callstack 0
  3995                           
  3996 ;; *************** function _INT0_SetInterruptHandler *****************
  3997 ;; Defined at:
  3998 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  InterruptHan    2    7[COMRAM] PTR FTN()void 
  4001 ;;		 -> INT0_DefaultInterruptHandler(1), 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4013 ;;      Params:         2       0       0       0       0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4016 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4017 ;;Total ram usage:        2 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    8
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_EXT_INT_Initialize
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text28
  4028  001934                     __ptext28:
  4029                           	opt callstack 0
  4030  001934                     _INT0_SetInterruptHandler:
  4031                           	opt callstack 20
  4032  001934                     
  4033                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
  4034  001934  C008  F0B3         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  4035  001938  C009  F0B4         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  4036  00193C  0012               	return		;funcret
  4037  00193E                     __end_of_INT0_SetInterruptHandler:
  4038                           	opt callstack 0
  4039                           
  4040 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  4041 ;; Defined at:
  4042 ;;		line 36 in file "mcc_generated_files/interrupt_manager.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         0       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4059 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:        5 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    7
  4063 ;; This function calls:
  4064 ;;		_PIN_MANAGER_IOC
  4065 ;; This function is called by:
  4066 ;;		Interrupt level 1
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	intcodelo
  4071  000018                     __pintcodelo:
  4072                           	opt callstack 0
  4073  000018                     _INTERRUPT_InterruptManagerLow:
  4074                           	opt callstack 15
  4075                           
  4076                           ;incstack = 0
  4077  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4078  00001A  CFD8 F003          	movff	status,??_INTERRUPT_InterruptManagerLow
  4079  00001E  CFE8 F004          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  4080  000022  CFE0 F005          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  4081  000026  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  4082  00002A  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  4083  00002E                     
  4084                           ;mcc_generated_files/interrupt_manager.c: 39:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  4085  00002E  A6F2               	btfss	242,3,c	;volatile
  4086  000030  EF1C  F000         	goto	i1u146_21
  4087  000034  EF1E  F000         	goto	i1u146_20
  4088  000038                     i1u146_21:
  4089  000038  EF39  F000         	goto	i1l126
  4090  00003C                     i1u146_20:
  4091  00003C  A0F2               	btfss	242,0,c	;volatile
  4092  00003E  EF23  F000         	goto	i1u147_21
  4093  000042  EF25  F000         	goto	i1u147_20
  4094  000046                     i1u147_21:
  4095  000046  EF39  F000         	goto	i1l126
  4096  00004A                     i1u147_20:
  4097  00004A                     
  4098                           ;mcc_generated_files/interrupt_manager.c: 40:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 41:         if (PORTBbits.RB4==1){
  4099  00004A  A881               	btfss	129,4,c	;volatile
  4100  00004C  EF2A  F000         	goto	i1u148_21
  4101  000050  EF2C  F000         	goto	i1u148_20
  4102  000054                     i1u148_21:
  4103  000054  EF37  F000         	goto	i1l2221
  4104  000058                     i1u148_20:
  4105  000058                     i1l122:
  4106  000058  B881               	btfsc	129,4,c	;volatile
  4107  00005A  EF31  F000         	goto	i1u149_21
  4108  00005E  EF33  F000         	goto	i1u149_20
  4109  000062                     i1u149_21:
  4110  000062  EF2C  F000         	goto	i1l122
  4111  000066                     i1u149_20:
  4112  000066                     
  4113                           ;mcc_generated_files/interrupt_manager.c: 43:             cont2--;
  4114  000066  0100               	movlb	0	; () banked
  4115  000068  0760               	decf	_cont2& (0+255),f,b
  4116  00006A  A0D8               	btfss	status,0,c
  4117  00006C  0761               	decf	(_cont2+1)& (0+255),f,b
  4118  00006E                     i1l2221:
  4119                           
  4120                           ;mcc_generated_files/interrupt_manager.c: 46:         PIN_MANAGER_IOC();
  4121  00006E  EC72  F00C         	call	_PIN_MANAGER_IOC	;wreg free
  4122  000072                     i1l126:
  4123  000072  C007  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  4124  000076  C006  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  4125  00007A  C005  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  4126  00007E  C004  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  4127  000082  C003  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  4128  000086  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4129  000088  0010               	retfie	
  4130  00008A                     __end_of_INTERRUPT_InterruptManagerLow:
  4131                           	opt callstack 0
  4132                           
  4133 ;; *************** function _PIN_MANAGER_IOC *****************
  4134 ;; Defined at:
  4135 ;;		line 63 in file "mcc_generated_files/pin_manager.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    6
  4156 ;; This function calls:
  4157 ;;		_IOCB4_ISR
  4158 ;; This function is called by:
  4159 ;;		_INTERRUPT_InterruptManagerLow
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text30
  4164  0018E4                     __ptext30:
  4165                           	opt callstack 0
  4166  0018E4                     _PIN_MANAGER_IOC:
  4167                           	opt callstack 15
  4168  0018E4                     
  4169                           ;mcc_generated_files/pin_manager.c: 66:     if(IOCBbits.IOCB4 == 1)
  4170  0018E4  A886               	btfss	134,4,c	;volatile
  4171  0018E6  EF77  F00C         	goto	i1u132_21
  4172  0018EA  EF79  F00C         	goto	i1u132_20
  4173  0018EE                     i1u132_21:
  4174  0018EE  EF7B  F00C         	goto	i1l2141
  4175  0018F2                     i1u132_20:
  4176  0018F2                     
  4177                           ;mcc_generated_files/pin_manager.c: 67:     {;mcc_generated_files/pin_manager.c: 68:    
      +                               IOCB4_ISR();
  4178  0018F2  EC01  F00C         	call	_IOCB4_ISR	;wreg free
  4179  0018F6                     i1l2141:
  4180                           
  4181                           ;mcc_generated_files/pin_manager.c: 71:     INTCONbits.IOCIF = 0;
  4182  0018F6  90F2               	bcf	242,0,c	;volatile
  4183  0018F8  0012               	return		;funcret
  4184  0018FA                     __end_of_PIN_MANAGER_IOC:
  4185                           	opt callstack 0
  4186                           
  4187 ;; *************** function _IOCB4_ISR *****************
  4188 ;; Defined at:
  4189 ;;		line 77 in file "mcc_generated_files/pin_manager.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4207 ;;Total ram usage:        0 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    5
  4210 ;; This function calls:
  4211 ;;		Absolute function
  4212 ;;		_IOCB4_DefaultInterruptHandler
  4213 ;; This function is called by:
  4214 ;;		_PIN_MANAGER_IOC
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text31
  4219  001802                     __ptext31:
  4220                           	opt callstack 0
  4221  001802                     _IOCB4_ISR:
  4222                           	opt callstack 15
  4223  001802                     
  4224                           ;mcc_generated_files/pin_manager.c: 82:     if(IOCB4_InterruptHandler)
  4225  001802  0100               	movlb	0	; () banked
  4226  001804  51B5               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  4227  001806  11B6               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  4228  001808  B4D8               	btfsc	status,2,c
  4229  00180A  EF09  F00C         	goto	i1u127_21
  4230  00180E  EF0B  F00C         	goto	i1u127_20
  4231  001812                     i1u127_21:
  4232  001812  EF18  F00C         	goto	i1l57
  4233  001816                     i1u127_20:
  4234  001816                     
  4235                           ; BSR set to: 0
  4236                           ;mcc_generated_files/pin_manager.c: 83:     {;mcc_generated_files/pin_manager.c: 84:    
      +                               IOCB4_InterruptHandler();
  4237  001816  D802               	call	i1u128_28
  4238  001818  EF18  F00C         	goto	i1u128_29
  4239  00181C                     i1u128_28:
  4240  00181C  0005               	push	
  4241  00181E  6EFA               	movwf	pclath,c
  4242  001820  51B5               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  4243  001822  6EFD               	movwf	tosl,c
  4244  001824  51B6               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  4245  001826  6EFE               	movwf	tosh,c
  4246  001828  50F8               	movf	tblptru,w,c
  4247  00182A  6EFF               	movwf	tosu,c
  4248  00182C  50FA               	movf	pclath,w,c
  4249  00182E  0012               	return		;indir
  4250  001830                     i1u128_29:
  4251  001830                     i1l57:
  4252  001830  0012               	return		;funcret
  4253  001832                     __end_of_IOCB4_ISR:
  4254                           	opt callstack 0
  4255                           
  4256 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
  4257 ;; Defined at:
  4258 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		None
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    4
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_PIN_MANAGER_Initialize
  4283 ;;		_IOCB4_ISR
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text32
  4288  00194E                     __ptext32:
  4289                           	opt callstack 0
  4290  00194E                     _IOCB4_DefaultInterruptHandler:
  4291                           	opt callstack 15
  4292  00194E  0012               	return		;funcret
  4293  001950                     __end_of_IOCB4_DefaultInterruptHandler:
  4294                           	opt callstack 0
  4295                           
  4296 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  4297 ;; Defined at:
  4298 ;;		line 20 in file "mcc_generated_files/interrupt_manager.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4314 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4315 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4316 ;;Total ram usage:        2 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    3
  4319 ;; This function calls:
  4320 ;;		_INT0_ISR
  4321 ;; This function is called by:
  4322 ;;		Interrupt level 2
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	intcode
  4327  000008                     __pintcode:
  4328                           	opt callstack 0
  4329  000008                     _INTERRUPT_InterruptManagerHigh:
  4330                           	opt callstack 15
  4331                           
  4332                           ;incstack = 0
  4333  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4334  00000A  EFAD  F00B         	goto	int_func
  4335                           
  4336                           	psect	intcode_body
  4337  00175A                     __pintcode_body:
  4338                           	opt callstack 15
  4339  00175A                     int_func:
  4340                           	opt callstack 15
  4341  00175A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  4342  00175E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  4343  001762                     
  4344                           ;mcc_generated_files/interrupt_manager.c: 23:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
  4345  001762  A8F2               	btfss	242,4,c	;volatile
  4346  001764  EFB6  F00B         	goto	i2u144_41
  4347  001768  EFB8  F00B         	goto	i2u144_40
  4348  00176C                     i2u144_41:
  4349  00176C  EFC4  F00B         	goto	i2l115
  4350  001770                     i2u144_40:
  4351  001770  A2F2               	btfss	242,1,c	;volatile
  4352  001772  EFBD  F00B         	goto	i2u145_41
  4353  001776  EFBF  F00B         	goto	i2u145_40
  4354  00177A                     i2u145_41:
  4355  00177A  EFC4  F00B         	goto	i2l115
  4356  00177E                     i2u145_40:
  4357  00177E                     
  4358                           ;mcc_generated_files/interrupt_manager.c: 24:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 25:         cont2++;
  4359  00177E  0100               	movlb	0	; () banked
  4360  001780  4B60               	infsnz	_cont2& (0+255),f,b
  4361  001782  2B61               	incf	(_cont2+1)& (0+255),f,b
  4362  001784                     
  4363                           ; BSR set to: 0
  4364                           ;mcc_generated_files/interrupt_manager.c: 27:         INT0_ISR();
  4365  001784  EC9F  F00C         	call	_INT0_ISR	;wreg free
  4366  001788                     i2l115:
  4367  001788  C002  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  4368  00178C  C001  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  4369  001790  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4370  001792  0011               	retfie		f
  4371  001794                     __end_of_INTERRUPT_InterruptManagerHigh:
  4372                           	opt callstack 0
  4373                           
  4374 ;; *************** function _INT0_ISR *****************
  4375 ;; Defined at:
  4376 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4393 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4394 ;;Total ram usage:        0 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    2
  4397 ;; This function calls:
  4398 ;;		_INT0_CallBack
  4399 ;; This function is called by:
  4400 ;;		_INTERRUPT_InterruptManagerHigh
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text34
  4405  00193E                     __ptext34:
  4406                           	opt callstack 0
  4407  00193E                     _INT0_ISR:
  4408                           	opt callstack 15
  4409  00193E                     
  4410                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
  4411  00193E  92F2               	bcf	242,1,c	;volatile
  4412  001940                     
  4413                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
  4414  001940  EC19  F00C         	call	_INT0_CallBack	;wreg free
  4415  001944  0012               	return		;funcret
  4416  001946                     __end_of_INT0_ISR:
  4417                           	opt callstack 0
  4418                           
  4419 ;; *************** function _INT0_CallBack *****************
  4420 ;; Defined at:
  4421 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4438 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4439 ;;Total ram usage:        0 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    1
  4442 ;; This function calls:
  4443 ;;		Absolute function
  4444 ;;		_INT0_DefaultInterruptHandler
  4445 ;; This function is called by:
  4446 ;;		_INT0_ISR
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text35
  4451  001832                     __ptext35:
  4452                           	opt callstack 0
  4453  001832                     _INT0_CallBack:
  4454                           	opt callstack 15
  4455  001832                     
  4456                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
  4457  001832  0100               	movlb	0	; () banked
  4458  001834  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
  4459  001836  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
  4460  001838  B4D8               	btfsc	status,2,c
  4461  00183A  EF21  F00C         	goto	i2u129_41
  4462  00183E  EF23  F00C         	goto	i2u129_40
  4463  001842                     i2u129_41:
  4464  001842  EF30  F00C         	goto	i2l78
  4465  001846                     i2u129_40:
  4466  001846                     
  4467                           ; BSR set to: 0
  4468                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
  4469  001846  D802               	call	i2u130_48
  4470  001848  EF30  F00C         	goto	i2u130_49
  4471  00184C                     i2u130_48:
  4472  00184C  0005               	push	
  4473  00184E  6EFA               	movwf	pclath,c
  4474  001850  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
  4475  001852  6EFD               	movwf	tosl,c
  4476  001854  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
  4477  001856  6EFE               	movwf	tosh,c
  4478  001858  50F8               	movf	tblptru,w,c
  4479  00185A  6EFF               	movwf	tosu,c
  4480  00185C  50FA               	movf	pclath,w,c
  4481  00185E  0012               	return		;indir
  4482  001860                     i2u130_49:
  4483  001860                     i2l78:
  4484  001860  0012               	return		;funcret
  4485  001862                     __end_of_INT0_CallBack:
  4486                           	opt callstack 0
  4487                           
  4488 ;; *************** function _INT0_DefaultInterruptHandler *****************
  4489 ;; Defined at:
  4490 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		None
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_EXT_INT_Initialize
  4514 ;;		_INT0_CallBack
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text36
  4519  001950                     __ptext36:
  4520                           	opt callstack 0
  4521  001950                     _INT0_DefaultInterruptHandler:
  4522                           	opt callstack 15
  4523  001950  0012               	return		;funcret
  4524  001952                     __end_of_INT0_DefaultInterruptHandler:
  4525                           	opt callstack 0
  4526                           
  4527                           	psect	text37
  4528  000000                     __ptext37:
  4529                           	opt callstack 0
  4530  000000                     
  4531                           	psect	rparam
  4532  0000                     
  4533                           	psect	temp
  4534  000057                     btemp:
  4535                           	opt callstack 0
  4536  000057                     	ds	1
  4537  0000                     int$flags	set	btemp
  4538  0000                     wtemp8	set	btemp+1
  4539  0000                     ttemp5	set	btemp+1
  4540  0000                     ttemp6	set	btemp+4
  4541  0000                     ttemp7	set	btemp+8
  4542                           tosu	equ	0xFFF
  4543                           tosh	equ	0xFFE
  4544                           tosl	equ	0xFFD
  4545                           stkptr	equ	0xFFC
  4546                           pclatu	equ	0xFFB
  4547                           pclath	equ	0xFFA
  4548                           pcl	equ	0xFF9
  4549                           tblptru	equ	0xFF8
  4550                           tblptrh	equ	0xFF7
  4551                           tblptrl	equ	0xFF6
  4552                           tablat	equ	0xFF5
  4553                           prodh	equ	0xFF4
  4554                           prodl	equ	0xFF3
  4555                           indf0	equ	0xFEF
  4556                           postinc0	equ	0xFEE
  4557                           postdec0	equ	0xFED
  4558                           preinc0	equ	0xFEC
  4559                           plusw0	equ	0xFEB
  4560                           fsr0h	equ	0xFEA
  4561                           fsr0l	equ	0xFE9
  4562                           wreg	equ	0xFE8
  4563                           indf1	equ	0xFE7
  4564                           postinc1	equ	0xFE6
  4565                           postdec1	equ	0xFE5
  4566                           preinc1	equ	0xFE4
  4567                           plusw1	equ	0xFE3
  4568                           fsr1h	equ	0xFE2
  4569                           fsr1l	equ	0xFE1
  4570                           bsr	equ	0xFE0
  4571                           indf2	equ	0xFDF
  4572                           postinc2	equ	0xFDE
  4573                           postdec2	equ	0xFDD
  4574                           preinc2	equ	0xFDC
  4575                           plusw2	equ	0xFDB
  4576                           fsr2h	equ	0xFDA
  4577                           fsr2l	equ	0xFD9
  4578                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         55
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     36      87
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> horas(BANK0[3]), minut(BANK0[3]), segun(BANK0[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> horas(BANK0[3]), minut(BANK0[3]), segun(BANK0[3]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1250_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 3
		 -> horas(BANK0[3]), minut(BANK0[3]), segun(BANK0[3]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> horas(BANK0[3]), minut(BANK0[3]), segun(BANK0[3]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    print@a	PTR unsigned char  size(2) Largest target is 5
		 -> horas(BANK0[3]), minut(BANK0[3]), segun(BANK0[3]), STR_1(CODE[5]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _setCursor->_comando
    _print->_caracter
    _caracter->_comando
    _begin->_comando
    _comando->_busdata
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10040
                                             34 BANK0      2     2      0
                  _SYSTEM_Initialize
                              _begin
                              _print
                          _setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    8278
                                             18 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7426
                                             76 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    6899
                                             66 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             34 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              7 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              7 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                             14 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              7 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            7     6      1     862
                                              9 COMRAM     7     6      1
                            _comando
 ---------------------------------------------------------------------------------
 (1) _print                                                6     4      2     594
                                             12 COMRAM     6     4      2
                           _caracter
 ---------------------------------------------------------------------------------
 (2) _caracter                                             3     3      0     200
                                              9 COMRAM     3     3      0
                            _comando
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0     110
                            _comando
 ---------------------------------------------------------------------------------
 (2) _comando                                              1     1      0     110
                                              8 COMRAM     1     1      0
                            _busdata
 ---------------------------------------------------------------------------------
 (3) _busdata                                              1     1      0      88
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2      98
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        5     5      0       0
                                              2 COMRAM     5     5      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                      2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
   _begin
     _comando
       _busdata
   _print
     _caracter
       _comando
         _busdata
   _setCursor
     _comando
       _busdata
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _INTERRUPT_InterruptManagerLow (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      57       5       54.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AD       6        0.0%
DATA                 0      0      AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 23 02:14:09 2020

                                       l60 1928                                         l81 193C  
                                       l49 1626                                         l87 190C  
                                       bsr 000FE0                        ___wmul@multiplicand 000A  
       __size_of_IOCB4_SetInterruptHandler 000A                 ?_IOCB4_SetInterruptHandler 0008  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                              __CFG_LVP$ON 000000                                        l210 15D2  
                                      l202 158E                                        l108 194A  
                                      l204 15A4                                        l220 10C2  
                                      l213 18E2                                        l221 1108  
                                      l150 1932                                        l206 15BA  
                                      l223 114E                                        l208 15D0  
                                      l216 1714                                        l232 1518  
                                      l312 08FE                                        l226 18CA  
                                      l147 191E                                        l219 107C  
                                      l331 156E                                        l332 1576  
                                      l325 0B54                                        l335 18AC  
                                      l281 1460                                        l290 0B94  
                                      l283 149A                                        l278 141E  
                                      l288 0B8C                                        l298 0D54  
                                      l780 123E                                        l773 121E  
                                      l790 130E                                        l783 12EE  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                                      u800 135C                                        u801 1358  
                                      u810 1392                                        u811 138E  
                                      u820 1758                                        u901 1156  
                                      u821 1754                                        u910 117A  
                                      u830 17F4                                        u911 1176  
                                      u831 17F0                                        u920 11A4  
                                      u840 13E8                                        u921 11A0  
                                      u841 13E4                                        u930 11E4  
                                      u850 140A                                        u931 11E0  
                                      u851 1406                                        u940 125E  
                                      u780 1322                                        u860 1460  
                                      u941 125A                                        u781 131E  
                                      u861 145C                                        u950 1288  
                                      u790 1334                                        u870 146E  
                                      u951 1284                                        u791 1330  
                                      u871 146A                                        u880 17C4  
                                      u960 12B6                                        u881 17BE  
                                      u961 12B2                                        u890 17C6  
                                      u970 1692                                        u971 168E  
                                      u980 16C0                                        u981 16BC  
                                      u990 1588                                        u991 1584  
               ??_INT0_SetInterruptHandler 000A                                        _pad 13DA  
                                      tosl 000FFD                                        wreg 000FE8  
                            _INT0_CallBack 1832                         __size_of_IOCB4_ISR 0030  
                                     l1040 17CA                                       l2001 0874  
                                     l1034 0EDC                                       l1037 0EE4  
                                     l2021 0898                                       l2013 0886  
                                     l2005 087A                                       l2111 190A  
                                     l1063 13D8                                       l1071 1758  
                                     l2031 0968                                       l2023 08EC  
                                     l1048 16CA                                       l2113 1946  
                                     l2121 18BA                                       l1081 194C  
                                     l2033 0976                                       l2025 090C  
                                     l2017 088C                                       l2009 0880  
                                     l2107 18FA                                       l2115 192A  
                                     l2123 18BC                                       l2043 09FA  
                                     l2035 0984                                       l2027 090E  
                                     l2109 18FE                                       l2125 18C2  
                                     l2117 18B0                                       l2053 0AB2  
                                     l2037 09A4                                       l2045 0A0C  
                                     l2029 0932                                       l1078 1678  
                                     l2151 1916                                       l2127 18C8  
                                     l2119 18B6                                       l1087 1800  
                                     l2071 0B42                                       l2055 0AD6  
                                     l2063 0B04                                       l2047 0A30  
                                     l2039 09B2                                       l2153 191A  
                                     l2161 1070                                       l2065 0B12  
                                     l2057 0AE4                                       l2049 0A7A  
                                     l2091 1614                                       l2147 190E  
                                     l2155 16CC                                       l2171 10D4  
                                     l2163 1076                                       l2059 0AF8  
                                     l2093 1616                                       l2149 1912  
                                     l2181 1148                                       l2173 10FC  
                                     l2165 108E                                       l2157 1038  
                                     l2069 0B1E                                       l2501 0EE6  
                                     l2095 1618                                       l2087 15D4  
                                     l2183 149C                                       l2175 1102  
                                     l2167 10B6                                       l2159 1048  
                                     l2511 0EF4                                       l2503 0EEA  
                                     l2097 1624                                       l2089 15F0  
                                     l2185 14A8                                       l2177 111A  
                                     l2169 10BC                                       l1801 13E8  
                                     l2521 0F18                                       l2513 0EF8  
                                     l2505 0EEE                                       l2187 14D8  
                                     l2179 1142                                       l1811 143E  
                                     l1803 13FC                                       l2531 0F58  
                                     l2523 0F32                                       l2515 0EFE  
                                     l2507 0EF0                                       l2189 14DC  
                                     l1821 1794                                       l1813 1442  
                                     l1805 140A                                       l1901 0B66  
                                     l2541 0F94                                       l2533 0F6C  
                                     l2525 0F38                                       l2517 0F02  
                                     l2509 0EF2                                       l2631 0E12  
                                     l1831 1150                                       l1815 146E  
                                     l1807 1416                                       l1911 0BD4  
                                     l1903 0B80                                       l2551 1002  
                                     l2543 0FB0                                       l2535 0F74  
                                     l2527 0F4C                                       l2519 0F0C  
                                     l1825 1888                                       l1841 11A4  
                                     l1833 115C                                       l1817 1482  
                                     l1809 142A                                       l1921 0CCC  
                                     l1913 0C4A                                       l1905 0BBC  
                                     l2481 151A                                       l2553 100C  
                                     l2545 0FCE                                       l2537 0F78  
                                     l2529 0F54                                       l1827 18A4  
                                     l1851 1218                                       l1843 11B6  
                                     l1835 117A                                       l1771 1334  
                                     l1923 0CEA                                       l1915 0C50  
                                     l1907 0BC4                                       l2483 1522  
                                     l2491 163A                                       l2555 1018  
                                     l2547 0FEC                                       l2539 0F8C  
                                     l1941 0D8E                                       l1933 0D56  
                                     l1845 11E4                                       l1837 1182  
                                     l1861 1288                                       l1853 1240  
                                     l1773 133E                                       l1781 1716  
                                     l1925 0D04                                       l1917 0C56  
                                     l1909 0BCE                                       l2629 08BE  
                                     l2485 152E                                       l2493 1642  
                                     l2557 1022                                       l2549 0FF6  
                                     l1871 167E                                       l1951 0DE4  
                                     l1943 0DC4                                       l1935 0D6A  
                                     l1847 1204                                       l1839 1196  
                                     l1863 12B6                                       l1855 125E  
                                     l1775 135C                                       l1767 1310  
                                     l1783 1722                                       l1791 17D8  
                                     l1927 0D1E                                       l1919 0CBA  
                                     l2487 1552                                       l2495 164A  
                                     l1881 157A                                       l1873 1692  
                                     l1961 0E5E                                       l1953 0DEC  
                                     l1945 0DC8                                       l1937 0D6E  
                                     l1849 1206                                       l1865 12D6  
                                     l1857 1266                                       l1777 1392  
                                     l1769 1322                                       l1785 1734  
                                     l1793 17DC                                       l1929 0D2C  
                                     l2497 1666                                       l2489 1628  
                                     l1891 15B4                                       l1883 1588  
                                     l1875 16C0                                       l1955 0DF4  
                                     l1939 0D72                                       l1867 12E8  
                                     l1859 127A                                       l1787 1738  
                                     l1795 17F4                                       l1893 15BC  
                                     l1885 1590                                       l1981 18D2  
                                     l1877 16C4                                       l1869 167A  
                                     l1965 0E9C                                       l1957 0E28  
                                     l1949 0DCE                                       l1789 17CC  
                                     ?_pad 0018                                       l1975 1920  
                                     l1895 15CA                                       l1887 159E  
                                     l1983 18D8                                       l1967 0EAE  
                                     l1799 13DA                                       l1991 083E  
                                     l1977 1934                                       l1889 15A6  
                                     l1985 18E0                                       l1969 0EC0  
                                     l1897 0B56                                       l1993 084E  
                                     l1979 18CE                                       l1899 0B64  
                                     l1995 0852                                       l1987 080C  
                                     l1997 0860                                       l1989 0830  
                                     l1999 0862                                       STR_1 0801  
                                     STR_2 0806                                       STR_3 0806  
                                     STR_4 0806                                       u1000 159E  
                                     u1001 159A                                       u1010 15B4  
                                     u1011 15B0                                       u1020 15CA  
                                     u1100 0D8E                                       u1021 15C6  
                                     u1101 0D8A                                       u1110 0DC4  
                                     u1030 0B64                                       u1111 0DC0  
                                     u1031 0B60                                       u1120 0DE0  
                                     u1040 0B80                                       u1200 0932  
                                     u1121 0DDC                                       u1041 0B7C  
                                     u1201 092E                                       u1130 0E96  
                                     u1050 0CCC                                       u1210 0976  
                                     u1131 0E90                                       u1051 0CC8  
                                     u1211 0972                                       u1140 0E98  
                                     u1060 0CEA                                       u1220 09F2  
                                     u1061 0CE6                                       u1221 09EC  
                                     u1150 0EAE                                       u1070 0D04  
                                     u1230 09F4                                       u1151 0EAA  
                                     u1071 0D00                                       u1160 0EC0  
                                     u1080 0D1E                                       u1240 0A0C  
                                     u1161 0EBC                                       u1081 0D1A  
                                     u1241 0A08                                       u1410 14D4  
                                     u1330 1048                                       u1090 0D2C  
                                     u1250 0A30                                       u1170 0830  
                                     u1331 1044                                       u1091 0D28  
                                     u1251 0A2C                                       u1171 082C  
                                     u1420 1508                                       u1260 0AD6  
                                     u1180 08FE                                       u1405 1132  
                                     u1261 0AD2                                       u1181 08FA  
                                     _LATA 000F89                                       u1430 1518  
                                     u1350 108E                                       u1190 090C  
                                     _LATB 000F8A                                       u1431 1514  
                                     u1351 108A                                       u1191 0908  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     u1417 14CA                                       u1345 1060  
                                     _LATE 000F8D                                       u1370 10D4  
                                     u1427 14FE                                       u1371 10D0  
                                     u1365 10A6                                       u1390 111A  
                                     u1550 156E                                       u1607 18DA  
                                     u1391 1116                                       u1551 156A  
                                     u1560 0F4C                                       u1385 10EC  
                                     u1561 0F48                                       u1570 0F6C  
                                     u1571 0F68                                       u1580 0F8C  
                                     u1581 0F88                                       u1597 0F24  
                                     i1l53 18F8                                       i1l63 194E  
                                     i1l57 1830                                       i2l74 1944  
                                     i2l84 1950                                       i2l78 1860  
                                     _WPUB 000F85                                       _dbuf 0066  
                                     _atoi 0D56                                       _cont 0064  
                                     _main 0EE6                                       _prec 0053  
                                     _nout 004F                                       pad@i 001F  
                                     pad@p 001C                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 0021                                       fsr2l 000FD9  
                                     btemp 0057                                       _utoa 0B56  
                            __CFG_BORV$190 000000                                       prodh 000FF4  
                                     prodl 000FF3                                       start 008A  
                            __CFG_IESO$OFF 000000                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                                      ??_pad 001E  
                         __end_of_INT0_ISR 1946             __size_of_OSCILLATOR_Initialize 000A  
            __end_of_OSCILLATOR_Initialize 1934                                      ?_atoi 000F  
                                    ?_main 0001          __end_of_IOCB4_SetInterruptHandler 192A  
                                    ?_utoa 0023                            __end_of___lodiv 1240  
                          __end_of___lomod 1310                             __CFG_DEBUG$OFF 000000  
                                    i1l122 0058                                      i1l126 0072  
                                    i2l115 1788                               vfpfcnvrt@fmt 0045  
                             vfpfcnvrt@llu 008F                                      _TRISA 000F92  
                                    _TRISB 000F93                             ?_INT0_CallBack 0001  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_WRT0$OFF 000000  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                          __end_of_comando 18E4                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                                    _begin 16CC                             __CFG_EBTRB$OFF 000000  
                          __end_of_busdata 15D4                                      _cont1 0062  
                                    _cont2 0060                    __end_of_PIN_MANAGER_IOC 18FA  
                                    _flags 0055                                      _horas 0086  
                                    _fputc 1310                                      _fputs 1716  
                          __end_of_isdigit 17CC                                      _minut 0089  
                                    _segun 008C                                      _print 149C  
                                    atoi@n 001C                                      pad@fp 0018  
                                    atoi@s 000F                                      _width 0051  
                                    _putch 194C                            __end_of_isspace 16CC  
                                    pclath 000FFA                                      tablat 000FF5  
                                    ttemp5 0058                                      ttemp6 005B  
                                    ttemp7 005F                                      utoa@d 0025  
                                    utoa@i 0041                                      utoa@n 0039  
                                    utoa@p 0035                                      utoa@w 0037  
                                    status 000FD8                             __CFG_T3CMX$RC0 000000  
                                    wtemp8 0058                            __end_of_sprintf 167A  
                         ___lodiv@dividend 0008                             __CFG_ICPRT$OFF 000000  
           ?_INTERRUPT_InterruptManagerLow 0001                             __CFG_PBADEN$ON 000000  
          ??_IOCB4_DefaultInterruptHandler 0003                            __initialization 1862  
                             __end_of_atoi 0EE6                               __end_of_main 1036  
                             __end_of_utoa 0D56                          __end_of_IOCB4_ISR 1832  
                           __CFG_PCLKEN$ON 000000                                     ??_atoi 0011  
                                   ??_main 00B1                                     ??_utoa 002D  
                            __activetblptr 000002                           ___lodiv@quotient 0018  
                           __CFG_SDOMX$RB3 000000                            __CFG_CCP2MX$RC1 000000  
                                   ?_begin 0001                                     ?_fputc 0008  
                                   ?_fputs 0011                                     ?_print 000D  
                                   _ANSELA 000F5B                                     ?_putch 0001  
                                   _ANSELB 000F5C                                     _ANSELC 000F5D  
                                   _ANSELD 000F5E                                     _ANSELE 000F5F  
                                   i1l2101 1816                                     i1l2211 002E  
                                   i1l2141 18F6                                     i1l2221 006E  
                                   i1l2213 003C                                     i1l2215 004A  
                                   i1l2137 18E4                                     i1l2139 18F2  
                                   i1l2219 0066                                     i1l2099 1802  
                                   i2l2103 1832                                     i2l2105 1846  
                                   i2l2203 1762                                     i2l2205 1770  
                                   i2l2143 193E                                     i2l2207 177E  
                                   i2l2145 1940                                     i2l2209 1784  
                           __CFG_WDTEN$OFF 000000                                     _OSCCON 000FD3  
                            vfpfcnvrt@done 0097                           __end_of_caracter 18CC  
                           __CFG_XINST$OFF 000000                               vfprintf@cfmt 004D  
                                   ___wmul 1888                             __CFG_STVREN$ON 000000  
                                ??___lodiv 0018                                  ??___lomod 0018  
                                   clear_0 1868                                     clear_1 1874  
                                   pad@buf 001A                            ??_INT0_CallBack 0001  
                                ??_comando 0009                                     _strlen 17CC  
                                ??_busdata 0008                                     fputc@c 0008  
                                   fputs@c 0015                                     fputs@i 0016  
                                   fputs@s 0011                                  ??_isdigit 000A  
                             __mediumconst 0000                                  ??_isspace 000A  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                     print@a 000D  
                                   print@k 0011                                     putch@c 0001  
                         __end_of_vfprintf 1578                                     utoa@fp 0023  
 INT0_SetInterruptHandler@InterruptHandler 0008  IOCB4_SetInterruptHandler@InterruptHandler 0008  
                         ?_PIN_MANAGER_IOC 0001                                  ??_sprintf 004F  
            __size_of_INTERRUPT_Initialize 0006                       __CFG_LS48MHZ$SYS24X4 000000  
         ??_INTERRUPT_InterruptManagerHigh 0001            ?_INTERRUPT_InterruptManagerHigh 0001  
                        _SYSTEM_Initialize 190E                                 __accesstop 0060  
                  __end_of__initialization 187A                                  ?_INT0_ISR 0001  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                           __pcstackCOMRAM 0001                           __CFG_nPWRTEN$OFF 000000  
                      ??_SYSTEM_Initialize 000A                              __end_of_begin 1716  
                            __end_of_fputc 13DA                              __end_of_fputs 175A  
    __end_of_IOCB4_DefaultInterruptHandler 1950     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 194E                              __end_of_print 151A  
                            __end_of_putch 194E                ??_IOCB4_SetInterruptHandler 000A  
              __size_of_EXT_INT_Initialize 0014                                    ??_begin 000A  
                                  ??_fputc 000C                  __end_of_SYSTEM_Initialize 1920  
                                  ??_fputs 0015                                    ??_print 000F  
                                  ??_putch 0008                                 __pbssBANK0 0060  
                    _INT0_InterruptHandler 00B3                                 ??_INT0_ISR 0001  
                        __CFG_PLLSEL$PLL4X 000000                                    ?___wmul 0008  
                       __size_of_setCursor 011A                                    ?_strlen 0008  
                                ?_caracter 0001                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 034A                           ___lomod@dividend 0008  
                _IOCB4_SetInterruptHandler 1920          __size_of_INT0_SetInterruptHandler 000A  
                ?_INT0_SetInterruptHandler 0008                                    __Hparam 0000  
                                  __Lparam 0000                            __size_of___wmul 0026  
                                  ___lodiv 1150                                    ___lomod 1240  
                                ?_vfprintf 009B                               __psmallconst 0800  
                                  __pcinit 1862                                    __ramtop 0800  
                                  __ptext0 0EE6                                    __ptext1 1628  
                                  __ptext2 151A                                    __ptext3 080C  
                                  __ptext4 0B56                                    __ptext5 13DA  
                                  __ptext6 17CC                                    __ptext7 1716  
                                  __ptext8 1310                                    __ptext9 194C  
                                  _comando 18CC                                  _IOCB4_ISR 1802  
                          __size_of_strlen 0036                                    _busdata 1578  
                    _OSCILLATOR_Initialize 192A                               __size_of_pad 00C2  
                                  _isdigit 1794                                 ??_caracter 000A  
                 ??_PIN_MANAGER_Initialize 000A                                    _isspace 167A  
                                  atoi@neg 0015                 __size_of_SYSTEM_Initialize 0012  
                                  _sprintf 1628                             __pintcode_body 175A  
                     end_of_initialization 187A                          __end_of_setCursor 1150  
                                  fputc@fp 000A                              __Lmediumconst 0000  
                                  int_func 175A                                    fputs@fp 0013  
                        __end_of_vfpfcnvrt 0B56                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                                 ??_vfprintf 004D  
                                  strlen@a 000A                                    strlen@s 0008  
                                _PORTBbits 000F81                                  _PORTDbits 000F83  
                                _PORTEbits 000F84                                 ?_IOCB4_ISR 0001  
                        __size_of_INT0_ISR 0008               __end_of_INTERRUPT_Initialize 194C  
     __end_of_INT0_DefaultInterruptHandler 1952      __size_of_INT0_DefaultInterruptHandler 0002  
             _INT0_DefaultInterruptHandler 1950                                vfpfcnvrt@ap 0047  
                              vfpfcnvrt@fp 0043                             __end_of___wmul 18AE  
                   ?_OSCILLATOR_Initialize 0001                      __end_of_INT0_CallBack 1862  
                           __end_of_strlen 1802                        start_initialization 1862  
                          ___lodiv@divisor 0010                            ___lodiv@counter 0020  
          __size_of_PIN_MANAGER_Initialize 0054                                __end_of_pad 149C  
                          __CFG_nLPBOR$OFF 000000                   __size_of_PIN_MANAGER_IOC 0016  
                              vfprintf@fmt 009D                                   ??___wmul 000C  
               __end_of_EXT_INT_Initialize 190E            fp__INT0_DefaultInterruptHandler 0000  
            ?_INT0_DefaultInterruptHandler 0001                                   ??_strlen 000A  
                              ??_IOCB4_ISR 0003                                __pbssCOMRAM 004F  
         __end_of_INT0_SetInterruptHandler 193E                              __pcstackBANK0 008F  
                        __size_of_caracter 001E                                  _atoi$1230 0019  
                                _atoi$1228 0017                                  _atoi$1229 001B  
                                __pnvBANK0 00B3                     _PIN_MANAGER_Initialize 15D4  
                                __pintcode 0008                                   ?___lodiv 0008  
                                 ?___lomod 0008                                 setCursor@m 000E  
                               setCursor@n 000F                                 setCursor@x 0010  
                               setCursor@y 000A                                __pintcodelo 0018  
                        __size_of_vfprintf 005E                                   ?_comando 0001  
                          ___lomod@divisor 0010                                   ?_busdata 0001  
                              __smallconst 0800                            ___lomod@counter 0018  
                                 ?_isdigit 0008                                   ?_isspace 0008  
                                caracter@a 000C                                  caracter@m 000A  
                                caracter@n 000B                             __size_of_begin 004A  
                                 ?_sprintf 00A1                             __size_of_fputc 00CA  
                           __size_of_fputs 0044                             __size_of_print 007E  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 1946  
                                 _INT0_ISR 193E                             ___wmul@product 000C  
                                 _IOCBbits 000F86                                  _setCursor 1036  
                                 i1u132_20 18F2                                   i1u132_21 18EE  
                                 i1u127_20 1816                                   i1u127_21 1812  
                                 i1u128_28 181C                                   i1u128_29 1830  
                                 i1u146_20 003C                                   i1u146_21 0038  
                                 i1u147_20 004A                                   i1u147_21 0046  
                                 i1u148_20 0058                                   i1u148_21 0054  
                                 i1u149_20 0066                                   i1u149_21 0062  
                                 i2u130_48 184C                                   i2u130_49 1860  
                                 i2u144_40 1770                                   i2u144_41 176C  
                                 i2u129_40 1846                                   i2u145_40 177E  
                                 i2u129_41 1842                                   i2u145_41 177A  
                                 _RCONbits 000FD0                           __CFG_WDTPS$32768 000000  
                        ??_PIN_MANAGER_IOC 0003                                  _vfpfcnvrt 080C  
                        ___wmul@multiplier 0008                          __CFG_CFGPLLEN$OFF 000000  
           ??_INT0_DefaultInterruptHandler 0001                               _isspace$1246 000E  
                              _INTCON2bits 000FF1                      ?_INTERRUPT_Initialize 0001  
                 _INT0_SetInterruptHandler 1934                                 ?_setCursor 000A  
                                 __Hrparam 0000                                 vfprintf@ap 009F  
                                 __Lrparam 0000                                 vfprintf@fp 009B  
                       __CFG_BOREN$SBORDIS 000000                    ??_OSCILLATOR_Initialize 0008  
                         __size_of___lodiv 00F0                           __size_of___lomod 00D0  
                               ?_vfpfcnvrt 0043                     _IOCB4_InterruptHandler 00B5  
                         __size_of_comando 0018                                 sprintf@fmt 00A3  
                                 _caracter 18AE                           __size_of_busdata 005C  
          ??_INTERRUPT_InterruptManagerLow 0003                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_isspace 0052                                   __ptext10 1240  
                                 __ptext11 1150                                   __ptext20 18CC  
                                 __ptext12 0D56                                   __ptext21 1578  
                                 __ptext13 167A                                   __ptext30 18E4  
                                 __ptext22 190E                                   __ptext14 1794  
                                 __ptext31 1802                                   __ptext23 15D4  
                                 __ptext15 1888                                   __ptext32 194E  
                                 __ptext24 1920                                   __ptext16 1036  
                                 __ptext25 192A                                   __ptext17 149C  
                                 __ptext34 193E                                   __ptext26 1946  
                                 __ptext18 18AE                                   __ptext35 1832  
                                 __ptext27 18FA                                   __ptext19 16CC  
                                 __ptext36 1950                                   __ptext28 1934  
                                 __ptext37 0000                           __size_of_sprintf 0052  
                            __size_of_atoi 0190                              __size_of_main 0150  
                            __size_of_utoa 0200                                   int$flags 0057  
                                 comando@a 0009                                   _vfprintf 151A  
                                 busdata@a 0008                                 _INTCONbits 000FF2  
                                 isdigit@c 0008                     ??_INTERRUPT_Initialize 0008  
                       _EXT_INT_Initialize 18FA                                   intlevel1 0000  
                                 intlevel2 0000                                  sprintf@ap 00A9  
                                 isspace@c 0008                    ?_PIN_MANAGER_Initialize 0001  
                              ??_setCursor 000B                        ?_EXT_INT_Initialize 0001  
                   __size_of_INT0_CallBack 0030                       __CFG_CPUDIV$NOCLKDIV 000000  
                              ??_vfpfcnvrt 0049                              _vfpfcnvrt$773 0099  
   __end_of_INTERRUPT_InterruptManagerHigh 1794    __size_of_INTERRUPT_InterruptManagerHigh 178C  
           _INTERRUPT_InterruptManagerHigh 0008                       ??_EXT_INT_Initialize 000A  
                                 sprintf@f 00AB                                   sprintf@s 00A1  
    __end_of_INTERRUPT_InterruptManagerLow 008A     __size_of_INTERRUPT_InterruptManagerLow 0072  
            _INTERRUPT_InterruptManagerLow 0018                         __CFG_FOSC$INTOSCIO 000000  
           __end_of_PIN_MANAGER_Initialize 1628                            _PIN_MANAGER_IOC 18E4  
