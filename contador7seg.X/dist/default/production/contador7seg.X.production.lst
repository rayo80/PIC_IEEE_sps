

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Oct 06 04:16:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F45K50 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  007CEE                     __pidataCOMRAM:
    56                           	opt callstack 0
    57                           
    58                           ;initializer for _decenas
    59  007CEE  003F               	dw	63
    60  007CF0  0006               	dw	6
    61  007CF2  005B               	dw	91
    62  007CF4  004F               	dw	79
    63  007CF6  0066               	dw	102
    64  007CF8  006D               	dw	109
    65  007CFA  007D               	dw	125
    66  007CFC  0007               	dw	7
    67  007CFE  007F               	dw	127
    68  007D00  0067               	dw	103
    69                           
    70                           ;initializer for _unidades
    71  007D02  003F               	dw	63
    72  007D04  0006               	dw	6
    73  007D06  005B               	dw	91
    74  007D08  004F               	dw	79
    75  007D0A  0066               	dw	102
    76  007D0C  006D               	dw	109
    77  007D0E  007D               	dw	125
    78  007D10  0007               	dw	7
    79  007D12  007F               	dw	127
    80  007D14  0067               	dw	103
    81  0000                     _ANSELB	set	3932
    82  0000                     _PORTA	set	3968
    83  0000                     _PORTD	set	3971
    84  0000                     _OSCCON2	set	4050
    85  0000                     _OSCCON	set	4051
    86  0000                     _PORTBbits	set	3969
    87  0000                     _TRISBbits	set	3987
    88  0000                     _TRISA	set	3986
    89  0000                     _TRISD	set	3989
    90                           
    91                           ; #config settings
    92  0000                     
    93                           	psect	cinit
    94  007D16                     __pcinit:
    95                           	opt callstack 0
    96  007D16                     start_initialization:
    97                           	opt callstack 0
    98  007D16                     __initialization:
    99                           	opt callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (40 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103  007D16  0EEE               	movlw	low __pidataCOMRAM
   104  007D18  6EF6               	movwf	tblptrl,c
   105  007D1A  0E7C               	movlw	high __pidataCOMRAM
   106  007D1C  6EF7               	movwf	tblptrh,c
   107  007D1E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108  007D20  6EF8               	movwf	tblptru,c
   109  007D22  EE00  F001         	lfsr	0,__pdataCOMRAM
   110  007D26  EE10 F028          	lfsr	1,40
   111  007D2A                     copy_data0:
   112  007D2A  0009               	tblrd		*+
   113  007D2C  CFF5 FFEE          	movff	tablat,postinc0
   114  007D30  50E5               	movf	postdec1,w,c
   115  007D32  50E1               	movf	fsr1l,w,c
   116  007D34  E1FA               	bnz	copy_data0
   117                           
   118                           ; Clear objects allocated to COMRAM (2 bytes)
   119  007D36  6A38               	clrf	(__pbssCOMRAM+1)& (0+255),c
   120  007D38  6A37               	clrf	__pbssCOMRAM& (0+255),c
   121  007D3A                     end_of_initialization:
   122                           	opt callstack 0
   123  007D3A                     __end_of__initialization:
   124                           	opt callstack 0
   125  007D3A  0100               	movlb	0
   126  007D3C  EFA0  F03E         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMRAM
   129  000037                     __pbssCOMRAM:
   130                           	opt callstack 0
   131  000037                     _cuenta:
   132                           	opt callstack 0
   133  000037                     	ds	2
   134                           
   135                           	psect	dataCOMRAM
   136  000001                     __pdataCOMRAM:
   137                           	opt callstack 0
   138  000001                     _decenas:
   139                           	opt callstack 0
   140  000001                     	ds	20
   141  000015                     _unidades:
   142                           	opt callstack 0
   143  000015                     	ds	20
   144                           
   145                           	psect	cstackCOMRAM
   146  000029                     __pcstackCOMRAM:
   147                           	opt callstack 0
   148  000029                     ?___awdiv:
   149                           	opt callstack 0
   150  000029                     ?___awmod:
   151                           	opt callstack 0
   152  000029                     ___awdiv@dividend:
   153                           	opt callstack 0
   154  000029                     ___awmod@dividend:
   155                           	opt callstack 0
   156                           
   157                           ; 2 bytes @ 0x0
   158  000029                     	ds	2
   159  00002B                     ___awdiv@divisor:
   160                           	opt callstack 0
   161  00002B                     ___awmod@divisor:
   162                           	opt callstack 0
   163                           
   164                           ; 2 bytes @ 0x2
   165  00002B                     	ds	2
   166  00002D                     ___awdiv@counter:
   167                           	opt callstack 0
   168  00002D                     ___awmod@counter:
   169                           	opt callstack 0
   170                           
   171                           ; 1 bytes @ 0x4
   172  00002D                     	ds	1
   173  00002E                     ___awdiv@sign:
   174                           	opt callstack 0
   175  00002E                     ___awmod@sign:
   176                           	opt callstack 0
   177                           
   178                           ; 1 bytes @ 0x5
   179  00002E                     	ds	1
   180  00002F                     ___awdiv@quotient:
   181                           	opt callstack 0
   182                           
   183                           ; 2 bytes @ 0x6
   184  00002F                     	ds	2
   185  000031                     ??_incrementador:
   186  000031                     ??_decrementador:
   187                           
   188                           ; 1 bytes @ 0x8
   189  000031                     	ds	1
   190  000032                     
   191                           ; 2 bytes @ 0x9
   192  000032                     	ds	2
   193  000034                     
   194                           ; 3 bytes @ 0xB
   195  000034                     	ds	3
   196  000037                     
   197                           ; 1 bytes @ 0xE
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 25 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;  argc            2    9[COMRAM] int 
   206 ;;  argv            3   11[COMRAM] PTR PTR unsigned char 
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  2    9[COMRAM] int 
   211 ;; Registers used:
   212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   218 ;;      Params:         5       0       0       0       0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0       0       0
   220 ;;      Temps:          0       0       0       0       0       0       0       0       0
   221 ;;      Totals:         5       0       0       0       0       0       0       0       0
   222 ;;Total ram usage:        5 bytes
   223 ;; Hardware stack levels required when called:    2
   224 ;; This function calls:
   225 ;;		_decrementador
   226 ;;		_incrementador
   227 ;;		_oscilador
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text0
   234  007D40                     __ptext0:
   235                           	opt callstack 0
   236  007D40                     _main:
   237                           	opt callstack 29
   238  007D40                     
   239                           ;main.c: 26:     oscilador();
   240  007D40  EC72  F03E         	call	_oscilador	;wreg free
   241  007D44                     
   242                           ;main.c: 27:     TRISD=0b00000000;
   243  007D44  0E00               	movlw	0
   244  007D46  6E95               	movwf	149,c	;volatile
   245  007D48                     
   246                           ;main.c: 28:     TRISA=0;
   247  007D48  0E00               	movlw	0
   248  007D4A  6E92               	movwf	146,c	;volatile
   249  007D4C                     
   250                           ;main.c: 29:     ANSELB=0;
   251  007D4C  0E00               	movlw	0
   252  007D4E  010F               	movlb	15	; () banked
   253  007D50  6F5C               	movwf	92,b	;volatile
   254  007D52                     
   255                           ; BSR set to: 15
   256                           ;main.c: 30:     TRISBbits.RB0=1;
   257  007D52  8093               	bsf	147,0,c	;volatile
   258  007D54                     
   259                           ; BSR set to: 15
   260                           ;main.c: 31:     TRISBbits.RB0=1;
   261  007D54  8093               	bsf	147,0,c	;volatile
   262  007D56                     l967:
   263                           
   264                           ;main.c: 42:         if (PORTBbits.RB0==1){
   265  007D56  A081               	btfss	129,0,c	;volatile
   266  007D58  EFB0  F03E         	goto	u311
   267  007D5C  EFB2  F03E         	goto	u310
   268  007D60                     u311:
   269  007D60  EFB4  F03E         	goto	l971
   270  007D64                     u310:
   271  007D64                     
   272                           ;main.c: 43:             incrementador();
   273  007D64  ECC1  F03E         	call	_incrementador	;wreg free
   274  007D68                     l971:
   275                           
   276                           ;main.c: 45:         if (PORTBbits.RB1==1){
   277  007D68  A281               	btfss	129,1,c	;volatile
   278  007D6A  EFB9  F03E         	goto	u321
   279  007D6E  EFBB  F03E         	goto	u320
   280  007D72                     u321:
   281  007D72  EFAB  F03E         	goto	l967
   282  007D76                     u320:
   283  007D76                     
   284                           ;main.c: 46:             decrementador();
   285  007D76  EC03  F03F         	call	_decrementador	;wreg free
   286  007D7A  EFAB  F03E         	goto	l967
   287  007D7E  EF00  F000         	goto	start
   288  007D82                     __end_of_main:
   289                           	opt callstack 0
   290                           
   291 ;; *************** function _oscilador *****************
   292 ;; Defined at:
   293 ;;		line 51 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   307 ;;      Params:         0       0       0       0       0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		_main
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text1
   321  007CE4                     __ptext1:
   322                           	opt callstack 0
   323  007CE4                     _oscilador:
   324                           	opt callstack 30
   325  007CE4                     
   326                           ;main.c: 52:     OSCCON=0X40;
   327  007CE4  0E40               	movlw	64
   328  007CE6  6ED3               	movwf	211,c	;volatile
   329                           
   330                           ;main.c: 53:     OSCCON2=0X00;
   331  007CE8  0E00               	movlw	0
   332  007CEA  6ED2               	movwf	210,c	;volatile
   333  007CEC  0012               	return		;funcret
   334  007CEE                     __end_of_oscilador:
   335                           	opt callstack 0
   336                           
   337 ;; *************** function _incrementador *****************
   338 ;; Defined at:
   339 ;;		line 55 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   353 ;;      Params:         0       0       0       0       0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0       0       0
   355 ;;      Temps:          1       0       0       0       0       0       0       0       0
   356 ;;      Totals:         1       0       0       0       0       0       0       0       0
   357 ;;Total ram usage:        1 bytes
   358 ;; Hardware stack levels used:    1
   359 ;; Hardware stack levels required when called:    1
   360 ;; This function calls:
   361 ;;		___awdiv
   362 ;;		___awmod
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text2
   369  007D82                     __ptext2:
   370                           	opt callstack 0
   371  007D82                     _incrementador:
   372                           	opt callstack 29
   373  007D82                     
   374                           ;main.c: 56:     _delay((unsigned long)((30)*(2000000UL/4000.0)));
   375  007D82  0E14               	movlw	20
   376  007D84  6E31               	movwf	??_incrementador^0,c
   377  007D86  0E7A               	movlw	122
   378  007D88                     u337:
   379  007D88  2EE8               	decfsz	wreg,f,c
   380  007D8A  D7FE               	bra	u337
   381  007D8C  2E31               	decfsz	??_incrementador^0,f,c
   382  007D8E  D7FC               	bra	u337
   383  007D90                     l48:
   384  007D90  B081               	btfsc	129,0,c	;volatile
   385  007D92  EFCD  F03E         	goto	u291
   386  007D96  EFCF  F03E         	goto	u290
   387  007D9A                     u291:
   388  007D9A  EFC8  F03E         	goto	l48
   389  007D9E                     u290:
   390  007D9E                     
   391                           ;main.c: 58:     _delay((unsigned long)((30)*(2000000UL/4000.0)));
   392  007D9E  0E14               	movlw	20
   393  007DA0  6E31               	movwf	??_incrementador^0,c
   394  007DA2  0E7A               	movlw	122
   395  007DA4                     u347:
   396  007DA4  2EE8               	decfsz	wreg,f,c
   397  007DA6  D7FE               	bra	u347
   398  007DA8  2E31               	decfsz	??_incrementador^0,f,c
   399  007DAA  D7FC               	bra	u347
   400  007DAC                     
   401                           ;main.c: 59:     cuenta++;
   402  007DAC  4A37               	infsnz	_cuenta^0,f,c
   403  007DAE  2A38               	incf	(_cuenta+1)^0,f,c
   404  007DB0                     
   405                           ;main.c: 60:     PORTD=unidades[cuenta%10];
   406  007DB0  C037  F029         	movff	_cuenta,___awmod@dividend
   407  007DB4  C038  F02A         	movff	_cuenta+1,___awmod@dividend+1
   408  007DB8  0E00               	movlw	0
   409  007DBA  6E2C               	movwf	(___awmod@divisor+1)^0,c
   410  007DBC  0E0A               	movlw	10
   411  007DBE  6E2B               	movwf	___awmod@divisor^0,c
   412  007DC0  EC46  F03F         	call	___awmod	;wreg free
   413  007DC4  90D8               	bcf	status,0,c
   414  007DC6  3629               	rlcf	?___awmod^0,f,c
   415  007DC8  362A               	rlcf	(?___awmod+1)^0,f,c
   416  007DCA  0E15               	movlw	low _unidades
   417  007DCC  2429               	addwf	?___awmod^0,w,c
   418  007DCE  6ED9               	movwf	fsr2l,c
   419  007DD0  0E00               	movlw	high _unidades
   420  007DD2  202A               	addwfc	(?___awmod+1)^0,w,c
   421  007DD4  6EDA               	movwf	fsr2h,c
   422  007DD6  50DF               	movf	indf2,w,c
   423  007DD8  6E83               	movwf	131,c	;volatile
   424  007DDA                     
   425                           ;main.c: 61:     PORTA=decenas[cuenta/10];
   426  007DDA  C037  F029         	movff	_cuenta,___awdiv@dividend
   427  007DDE  C038  F02A         	movff	_cuenta+1,___awdiv@dividend+1
   428  007DE2  0E00               	movlw	0
   429  007DE4  6E2C               	movwf	(___awdiv@divisor+1)^0,c
   430  007DE6  0E0A               	movlw	10
   431  007DE8  6E2B               	movwf	___awdiv@divisor^0,c
   432  007DEA  EC9E  F03F         	call	___awdiv	;wreg free
   433  007DEE  90D8               	bcf	status,0,c
   434  007DF0  3629               	rlcf	?___awdiv^0,f,c
   435  007DF2  362A               	rlcf	(?___awdiv+1)^0,f,c
   436  007DF4  0E01               	movlw	low _decenas
   437  007DF6  2429               	addwf	?___awdiv^0,w,c
   438  007DF8  6ED9               	movwf	fsr2l,c
   439  007DFA  0E00               	movlw	high _decenas
   440  007DFC  202A               	addwfc	(?___awdiv+1)^0,w,c
   441  007DFE  6EDA               	movwf	fsr2h,c
   442  007E00  50DF               	movf	indf2,w,c
   443  007E02  6E80               	movwf	128,c	;volatile
   444  007E04  0012               	return		;funcret
   445  007E06                     __end_of_incrementador:
   446                           	opt callstack 0
   447                           
   448 ;; *************** function _decrementador *****************
   449 ;; Defined at:
   450 ;;		line 63 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   464 ;;      Params:         0       0       0       0       0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0       0       0
   466 ;;      Temps:          1       0       0       0       0       0       0       0       0
   467 ;;      Totals:         1       0       0       0       0       0       0       0       0
   468 ;;Total ram usage:        1 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; Hardware stack levels required when called:    1
   471 ;; This function calls:
   472 ;;		___awdiv
   473 ;;		___awmod
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text3
   480  007E06                     __ptext3:
   481                           	opt callstack 0
   482  007E06                     _decrementador:
   483                           	opt callstack 29
   484  007E06                     
   485                           ;main.c: 64:     _delay((unsigned long)((30)*(2000000UL/4000.0)));
   486  007E06  0E14               	movlw	20
   487  007E08  6E31               	movwf	??_decrementador^0,c
   488  007E0A  0E7A               	movlw	122
   489  007E0C                     u357:
   490  007E0C  2EE8               	decfsz	wreg,f,c
   491  007E0E  D7FE               	bra	u357
   492  007E10  2E31               	decfsz	??_decrementador^0,f,c
   493  007E12  D7FC               	bra	u357
   494  007E14                     l54:
   495  007E14  B281               	btfsc	129,1,c	;volatile
   496  007E16  EF0F  F03F         	goto	u301
   497  007E1A  EF11  F03F         	goto	u300
   498  007E1E                     u301:
   499  007E1E  EF0A  F03F         	goto	l54
   500  007E22                     u300:
   501  007E22                     
   502                           ;main.c: 66:     _delay((unsigned long)((30)*(2000000UL/4000.0)));
   503  007E22  0E14               	movlw	20
   504  007E24  6E31               	movwf	??_decrementador^0,c
   505  007E26  0E7A               	movlw	122
   506  007E28                     u367:
   507  007E28  2EE8               	decfsz	wreg,f,c
   508  007E2A  D7FE               	bra	u367
   509  007E2C  2E31               	decfsz	??_decrementador^0,f,c
   510  007E2E  D7FC               	bra	u367
   511  007E30                     
   512                           ;main.c: 67:     cuenta--;
   513  007E30  0637               	decf	_cuenta^0,f,c
   514  007E32  A0D8               	btfss	status,0,c
   515  007E34  0638               	decf	(_cuenta+1)^0,f,c
   516  007E36                     
   517                           ;main.c: 68:     PORTD=unidades[cuenta%10];
   518  007E36  C037  F029         	movff	_cuenta,___awmod@dividend
   519  007E3A  C038  F02A         	movff	_cuenta+1,___awmod@dividend+1
   520  007E3E  0E00               	movlw	0
   521  007E40  6E2C               	movwf	(___awmod@divisor+1)^0,c
   522  007E42  0E0A               	movlw	10
   523  007E44  6E2B               	movwf	___awmod@divisor^0,c
   524  007E46  EC46  F03F         	call	___awmod	;wreg free
   525  007E4A  90D8               	bcf	status,0,c
   526  007E4C  3629               	rlcf	?___awmod^0,f,c
   527  007E4E  362A               	rlcf	(?___awmod+1)^0,f,c
   528  007E50  0E15               	movlw	low _unidades
   529  007E52  2429               	addwf	?___awmod^0,w,c
   530  007E54  6ED9               	movwf	fsr2l,c
   531  007E56  0E00               	movlw	high _unidades
   532  007E58  202A               	addwfc	(?___awmod+1)^0,w,c
   533  007E5A  6EDA               	movwf	fsr2h,c
   534  007E5C  50DF               	movf	indf2,w,c
   535  007E5E  6E83               	movwf	131,c	;volatile
   536  007E60                     
   537                           ;main.c: 69:     PORTA=decenas[cuenta/10];
   538  007E60  C037  F029         	movff	_cuenta,___awdiv@dividend
   539  007E64  C038  F02A         	movff	_cuenta+1,___awdiv@dividend+1
   540  007E68  0E00               	movlw	0
   541  007E6A  6E2C               	movwf	(___awdiv@divisor+1)^0,c
   542  007E6C  0E0A               	movlw	10
   543  007E6E  6E2B               	movwf	___awdiv@divisor^0,c
   544  007E70  EC9E  F03F         	call	___awdiv	;wreg free
   545  007E74  90D8               	bcf	status,0,c
   546  007E76  3629               	rlcf	?___awdiv^0,f,c
   547  007E78  362A               	rlcf	(?___awdiv+1)^0,f,c
   548  007E7A  0E01               	movlw	low _decenas
   549  007E7C  2429               	addwf	?___awdiv^0,w,c
   550  007E7E  6ED9               	movwf	fsr2l,c
   551  007E80  0E00               	movlw	high _decenas
   552  007E82  202A               	addwfc	(?___awdiv+1)^0,w,c
   553  007E84  6EDA               	movwf	fsr2h,c
   554  007E86  50DF               	movf	indf2,w,c
   555  007E88  6E80               	movwf	128,c	;volatile
   556  007E8A  0012               	return		;funcret
   557  007E8C                     __end_of_decrementador:
   558                           	opt callstack 0
   559                           
   560 ;; *************** function ___awmod *****************
   561 ;; Defined at:
   562 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  dividend        2    0[COMRAM] int 
   565 ;;  divisor         2    2[COMRAM] int 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  sign            1    5[COMRAM] unsigned char 
   568 ;;  counter         1    4[COMRAM] unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  2    0[COMRAM] int 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   578 ;;      Params:         4       0       0       0       0       0       0       0       0
   579 ;;      Locals:         2       0       0       0       0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0
   581 ;;      Totals:         6       0       0       0       0       0       0       0       0
   582 ;;Total ram usage:        6 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_incrementador
   588 ;;		_decrementador
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text4
   593  007E8C                     __ptext4:
   594                           	opt callstack 0
   595  007E8C                     ___awmod:
   596                           	opt callstack 29
   597  007E8C  0E00               	movlw	0
   598  007E8E  6E2E               	movwf	___awmod@sign^0,c
   599  007E90  BE2A               	btfsc	(___awmod@dividend+1)^0,7,c
   600  007E92  EF4F  F03F         	goto	u230
   601  007E96  EF4D  F03F         	goto	u231
   602  007E9A                     u231:
   603  007E9A  EF55  F03F         	goto	l907
   604  007E9E                     u230:
   605  007E9E  6C29               	negf	___awmod@dividend^0,c
   606  007EA0  1E2A               	comf	(___awmod@dividend+1)^0,f,c
   607  007EA2  B0D8               	btfsc	status,0,c
   608  007EA4  2A2A               	incf	(___awmod@dividend+1)^0,f,c
   609  007EA6  0E01               	movlw	1
   610  007EA8  6E2E               	movwf	___awmod@sign^0,c
   611  007EAA                     l907:
   612  007EAA  BE2C               	btfsc	(___awmod@divisor+1)^0,7,c
   613  007EAC  EF5C  F03F         	goto	u240
   614  007EB0  EF5A  F03F         	goto	u241
   615  007EB4                     u241:
   616  007EB4  EF60  F03F         	goto	l911
   617  007EB8                     u240:
   618  007EB8  6C2B               	negf	___awmod@divisor^0,c
   619  007EBA  1E2C               	comf	(___awmod@divisor+1)^0,f,c
   620  007EBC  B0D8               	btfsc	status,0,c
   621  007EBE  2A2C               	incf	(___awmod@divisor+1)^0,f,c
   622  007EC0                     l911:
   623  007EC0  502B               	movf	___awmod@divisor^0,w,c
   624  007EC2  102C               	iorwf	(___awmod@divisor+1)^0,w,c
   625  007EC4  B4D8               	btfsc	status,2,c
   626  007EC6  EF67  F03F         	goto	u251
   627  007ECA  EF69  F03F         	goto	u250
   628  007ECE                     u251:
   629  007ECE  EF8D  F03F         	goto	l927
   630  007ED2                     u250:
   631  007ED2  0E01               	movlw	1
   632  007ED4  6E2D               	movwf	___awmod@counter^0,c
   633  007ED6  EF71  F03F         	goto	l917
   634  007EDA                     l915:
   635  007EDA  90D8               	bcf	status,0,c
   636  007EDC  362B               	rlcf	___awmod@divisor^0,f,c
   637  007EDE  362C               	rlcf	(___awmod@divisor+1)^0,f,c
   638  007EE0  2A2D               	incf	___awmod@counter^0,f,c
   639  007EE2                     l917:
   640  007EE2  AE2C               	btfss	(___awmod@divisor+1)^0,7,c
   641  007EE4  EF76  F03F         	goto	u261
   642  007EE8  EF78  F03F         	goto	u260
   643  007EEC                     u261:
   644  007EEC  EF6D  F03F         	goto	l915
   645  007EF0                     u260:
   646  007EF0                     l919:
   647  007EF0  502B               	movf	___awmod@divisor^0,w,c
   648  007EF2  5C29               	subwf	___awmod@dividend^0,w,c
   649  007EF4  502C               	movf	(___awmod@divisor+1)^0,w,c
   650  007EF6  582A               	subwfb	(___awmod@dividend+1)^0,w,c
   651  007EF8  A0D8               	btfss	status,0,c
   652  007EFA  EF81  F03F         	goto	u271
   653  007EFE  EF83  F03F         	goto	u270
   654  007F02                     u271:
   655  007F02  EF87  F03F         	goto	l923
   656  007F06                     u270:
   657  007F06  502B               	movf	___awmod@divisor^0,w,c
   658  007F08  5E29               	subwf	___awmod@dividend^0,f,c
   659  007F0A  502C               	movf	(___awmod@divisor+1)^0,w,c
   660  007F0C  5A2A               	subwfb	(___awmod@dividend+1)^0,f,c
   661  007F0E                     l923:
   662  007F0E  90D8               	bcf	status,0,c
   663  007F10  322C               	rrcf	(___awmod@divisor+1)^0,f,c
   664  007F12  322B               	rrcf	___awmod@divisor^0,f,c
   665  007F14  2E2D               	decfsz	___awmod@counter^0,f,c
   666  007F16  EF78  F03F         	goto	l919
   667  007F1A                     l927:
   668  007F1A  502E               	movf	___awmod@sign^0,w,c
   669  007F1C  B4D8               	btfsc	status,2,c
   670  007F1E  EF93  F03F         	goto	u281
   671  007F22  EF95  F03F         	goto	u280
   672  007F26                     u281:
   673  007F26  EF99  F03F         	goto	l931
   674  007F2A                     u280:
   675  007F2A  6C29               	negf	___awmod@dividend^0,c
   676  007F2C  1E2A               	comf	(___awmod@dividend+1)^0,f,c
   677  007F2E  B0D8               	btfsc	status,0,c
   678  007F30  2A2A               	incf	(___awmod@dividend+1)^0,f,c
   679  007F32                     l931:
   680  007F32  C029  F029         	movff	___awmod@dividend,?___awmod
   681  007F36  C02A  F02A         	movff	___awmod@dividend+1,?___awmod+1
   682  007F3A  0012               	return		;funcret
   683  007F3C                     __end_of___awmod:
   684                           	opt callstack 0
   685                           
   686 ;; *************** function ___awdiv *****************
   687 ;; Defined at:
   688 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  dividend        2    0[COMRAM] int 
   691 ;;  divisor         2    2[COMRAM] int 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  quotient        2    6[COMRAM] int 
   694 ;;  sign            1    5[COMRAM] unsigned char 
   695 ;;  counter         1    4[COMRAM] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  2    0[COMRAM] int 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         4       0       0       0       0       0       0       0       0
   706 ;;      Locals:         4       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:         8       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:        8 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_incrementador
   715 ;;		_decrementador
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text5
   720  007F3C                     __ptext5:
   721                           	opt callstack 0
   722  007F3C                     ___awdiv:
   723                           	opt callstack 29
   724  007F3C  0E00               	movlw	0
   725  007F3E  6E2E               	movwf	___awdiv@sign^0,c
   726  007F40  BE2C               	btfsc	(___awdiv@divisor+1)^0,7,c
   727  007F42  EFA7  F03F         	goto	u170
   728  007F46  EFA5  F03F         	goto	u171
   729  007F4A                     u171:
   730  007F4A  EFAD  F03F         	goto	l863
   731  007F4E                     u170:
   732  007F4E  6C2B               	negf	___awdiv@divisor^0,c
   733  007F50  1E2C               	comf	(___awdiv@divisor+1)^0,f,c
   734  007F52  B0D8               	btfsc	status,0,c
   735  007F54  2A2C               	incf	(___awdiv@divisor+1)^0,f,c
   736  007F56  0E01               	movlw	1
   737  007F58  6E2E               	movwf	___awdiv@sign^0,c
   738  007F5A                     l863:
   739  007F5A  BE2A               	btfsc	(___awdiv@dividend+1)^0,7,c
   740  007F5C  EFB4  F03F         	goto	u180
   741  007F60  EFB2  F03F         	goto	u181
   742  007F64                     u181:
   743  007F64  EFBA  F03F         	goto	l869
   744  007F68                     u180:
   745  007F68  6C29               	negf	___awdiv@dividend^0,c
   746  007F6A  1E2A               	comf	(___awdiv@dividend+1)^0,f,c
   747  007F6C  B0D8               	btfsc	status,0,c
   748  007F6E  2A2A               	incf	(___awdiv@dividend+1)^0,f,c
   749  007F70  0E01               	movlw	1
   750  007F72  1A2E               	xorwf	___awdiv@sign^0,f,c
   751  007F74                     l869:
   752  007F74  0E00               	movlw	0
   753  007F76  6E30               	movwf	(___awdiv@quotient+1)^0,c
   754  007F78  0E00               	movlw	0
   755  007F7A  6E2F               	movwf	___awdiv@quotient^0,c
   756  007F7C  502B               	movf	___awdiv@divisor^0,w,c
   757  007F7E  102C               	iorwf	(___awdiv@divisor+1)^0,w,c
   758  007F80  B4D8               	btfsc	status,2,c
   759  007F82  EFC5  F03F         	goto	u191
   760  007F86  EFC7  F03F         	goto	u190
   761  007F8A                     u191:
   762  007F8A  EFEF  F03F         	goto	l891
   763  007F8E                     u190:
   764  007F8E  0E01               	movlw	1
   765  007F90  6E2D               	movwf	___awdiv@counter^0,c
   766  007F92  EFCF  F03F         	goto	l877
   767  007F96                     l875:
   768  007F96  90D8               	bcf	status,0,c
   769  007F98  362B               	rlcf	___awdiv@divisor^0,f,c
   770  007F9A  362C               	rlcf	(___awdiv@divisor+1)^0,f,c
   771  007F9C  2A2D               	incf	___awdiv@counter^0,f,c
   772  007F9E                     l877:
   773  007F9E  AE2C               	btfss	(___awdiv@divisor+1)^0,7,c
   774  007FA0  EFD4  F03F         	goto	u201
   775  007FA4  EFD6  F03F         	goto	u200
   776  007FA8                     u201:
   777  007FA8  EFCB  F03F         	goto	l875
   778  007FAC                     u200:
   779  007FAC                     l879:
   780  007FAC  90D8               	bcf	status,0,c
   781  007FAE  362F               	rlcf	___awdiv@quotient^0,f,c
   782  007FB0  3630               	rlcf	(___awdiv@quotient+1)^0,f,c
   783  007FB2  502B               	movf	___awdiv@divisor^0,w,c
   784  007FB4  5C29               	subwf	___awdiv@dividend^0,w,c
   785  007FB6  502C               	movf	(___awdiv@divisor+1)^0,w,c
   786  007FB8  582A               	subwfb	(___awdiv@dividend+1)^0,w,c
   787  007FBA  A0D8               	btfss	status,0,c
   788  007FBC  EFE2  F03F         	goto	u211
   789  007FC0  EFE4  F03F         	goto	u210
   790  007FC4                     u211:
   791  007FC4  EFE9  F03F         	goto	l887
   792  007FC8                     u210:
   793  007FC8  502B               	movf	___awdiv@divisor^0,w,c
   794  007FCA  5E29               	subwf	___awdiv@dividend^0,f,c
   795  007FCC  502C               	movf	(___awdiv@divisor+1)^0,w,c
   796  007FCE  5A2A               	subwfb	(___awdiv@dividend+1)^0,f,c
   797  007FD0  802F               	bsf	___awdiv@quotient^0,0,c
   798  007FD2                     l887:
   799  007FD2  90D8               	bcf	status,0,c
   800  007FD4  322C               	rrcf	(___awdiv@divisor+1)^0,f,c
   801  007FD6  322B               	rrcf	___awdiv@divisor^0,f,c
   802  007FD8  2E2D               	decfsz	___awdiv@counter^0,f,c
   803  007FDA  EFD6  F03F         	goto	l879
   804  007FDE                     l891:
   805  007FDE  502E               	movf	___awdiv@sign^0,w,c
   806  007FE0  B4D8               	btfsc	status,2,c
   807  007FE2  EFF5  F03F         	goto	u221
   808  007FE6  EFF7  F03F         	goto	u220
   809  007FEA                     u221:
   810  007FEA  EFFB  F03F         	goto	l895
   811  007FEE                     u220:
   812  007FEE  6C2F               	negf	___awdiv@quotient^0,c
   813  007FF0  1E30               	comf	(___awdiv@quotient+1)^0,f,c
   814  007FF2  B0D8               	btfsc	status,0,c
   815  007FF4  2A30               	incf	(___awdiv@quotient+1)^0,f,c
   816  007FF6                     l895:
   817  007FF6  C02F  F029         	movff	___awdiv@quotient,?___awdiv
   818  007FFA  C030  F02A         	movff	___awdiv@quotient+1,?___awdiv+1
   819  007FFE  0012               	return		;funcret
   820  008000                     __end_of___awdiv:
   821                           	opt callstack 0
   822  0000                     
   823                           	psect	rparam
   824  0000                     tosu	equ	0xFFF
   825                           tosh	equ	0xFFE
   826                           tosl	equ	0xFFD
   827                           stkptr	equ	0xFFC
   828                           pclatu	equ	0xFFB
   829                           pclath	equ	0xFFA
   830                           pcl	equ	0xFF9
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           prodh	equ	0xFF4
   836                           prodl	equ	0xFF3
   837                           indf0	equ	0xFEF
   838                           postinc0	equ	0xFEE
   839                           postdec0	equ	0xFED
   840                           preinc0	equ	0xFEC
   841                           plusw0	equ	0xFEB
   842                           fsr0h	equ	0xFEA
   843                           fsr0l	equ	0xFE9
   844                           wreg	equ	0xFE8
   845                           indf1	equ	0xFE7
   846                           postinc1	equ	0xFE6
   847                           postdec1	equ	0xFE5
   848                           preinc1	equ	0xFE4
   849                           plusw1	equ	0xFE3
   850                           fsr1h	equ	0xFE2
   851                           fsr1l	equ	0xFE1
   852                           bsr	equ	0xFE0
   853                           indf2	equ	0xFDF
   854                           postinc2	equ	0xFDE
   855                           postdec2	equ	0xFDD
   856                           preinc2	equ	0xFDC
   857                           plusw2	equ	0xFDB
   858                           fsr2h	equ	0xFDA
   859                           fsr2l	equ	0xFD9
   860                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_decrementador
    _main->_incrementador
    _incrementador->___awdiv
    _decrementador->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    2408
                                              9 COMRAM     5     0      5
                      _decrementador
                      _incrementador
                          _oscilador
 ---------------------------------------------------------------------------------
 (1) _oscilador                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _incrementador                                        1     1      0    1204
                                              8 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _decrementador                                        1     1      0    1204
                                              8 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decrementador
     ___awdiv
     ___awmod
   _incrementador
     ___awdiv
     ___awmod
   _oscilador

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      38       1       58.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38       6        0.0%
DATA                 0      0      38       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Oct 06 04:16:34 2020

                     l51 7E04                       l45 7CEC                       l54 7E14  
                     l48 7D90                       l57 7E8A             ___awdiv@sign 002E  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l304 7F3A  
                    l291 7FFE                      l901 7E90                      l813 7CE4  
                    l911 7EC0                      l903 7E9E                      l921 7F06  
                    l913 7ED2                      l905 7EA6                      l931 7F32  
                    l923 7F0E                      l915 7EDA                      l907 7EAA  
                    l861 7F56                      l925 7F14                      l917 7EE2  
                    l909 7EB8                      l941 7DB0                      l871 7F7C  
                    l863 7F5A                      l855 7F3C                      l919 7EF0  
                    l927 7F1A                      l951 7E36                      l943 7DDA  
                    l935 7D82                      l881 7FB2                      l873 7F8E  
                    l865 7F68                      l857 7F40                      l929 7F2A  
                    l953 7E60                      l945 7E06                      l937 7D9E  
                    l961 7D4C                      l883 7FC8                      l875 7F96  
                    l891 7FDE                      l867 7F70                      l859 7F4E  
                    l947 7E22                      l939 7DAC                      l971 7D68  
                    l963 7D52                      l955 7D40                      l893 7FEE  
                    l885 7FD0                      l877 7F9E                      l869 7F74  
                    l949 7E30                      l973 7D76                      l965 7D54  
                    l957 7D44                      l895 7FF6                      l887 7FD2  
                    l879 7FAC                      l967 7D56                      l959 7D48  
                    l889 7FD8                      l969 7D64                      l899 7E8C  
           __CFG_CPB$OFF 000000                      u200 7FAC                      u201 7FA8  
                    u210 7FC8                      u211 7FC4                      u220 7FEE  
                    u300 7E22                      u221 7FEA                      u301 7E1E  
                    u230 7E9E                      u310 7D64                      u231 7E9A  
                    u311 7D60                      u240 7EB8                      u320 7D76  
                    u241 7EB4                      u321 7D72                      u170 7F4E  
                    u250 7ED2                      u171 7F4A                      u251 7ECE  
                    u180 7F68                      u260 7EF0                      u181 7F64  
                    u261 7EEC                      u190 7F8E                      u270 7F06  
                    u191 7F8A                      u271 7F02                      u280 7F2A  
                    u281 7F26                      u337 7D88                      u290 7D9E  
           __CFG_CPD$OFF 000000                      u347 7DA4                      u291 7D9A  
                    u357 7E0C                      u367 7E28             ___awmod@sign 002E  
                    wreg 000FE8                     _main 7D40                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9            __CFG_BORV$190 000000  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0032          __end_of___awdiv 8000  
        __end_of___awmod 7F3C          ___awdiv@divisor 002B          ___awdiv@counter 002D  
                  _PORTA 000F80                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISD 000F95            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000    __end_of_decrementador 7E8C  
                  tablat 000FF5                    status 000FD8           __CFG_T3CMX$RC0 000000  
 __size_of_incrementador 0084           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 7D16             __end_of_main 7D82           __CFG_PCLKEN$ON 000000  
                 ??_main 0037            __activetblptr 000000           __CFG_SDOMX$RB3 000000  
        __CFG_CCP2MX$RC1 000000         ___awdiv@dividend 0029                   _ANSELB 000F5C  
         __CFG_WDTEN$OFF 000000                   _OSCCON 000FD3           __CFG_XINST$OFF 000000  
              ??___awdiv 002D           __CFG_STVREN$ON 000000                ??___awmod 002D  
                 _cuenta 0037         ___awdiv@quotient 002F          ___awmod@divisor 002B  
        ___awmod@counter 002D            _incrementador 7D82             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
   __CFG_LS48MHZ$SYS24X4 000000               __accesstop 0060  __end_of__initialization 7D3A  
          ___rparam_used 000001           __pcstackCOMRAM 0029         __CFG_nPWRTEN$OFF 000000  
         ?_incrementador 0029        __CFG_PLLSEL$PLL4X 000000       __size_of_oscilador 000A  
                _OSCCON2 000FD2                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 7F3C                  ___awmod 7E8C          ??_incrementador 0031  
                _decenas 0001                  __pcinit 7D16                  __ramtop 0800  
                __ptext0 7D40                  __ptext1 7CE4                  __ptext2 7D82  
                __ptext3 7E06                  __ptext4 7E8C                  __ptext5 7F3C  
       ___awmod@dividend 0029     end_of_initialization 7D3A        __end_of_oscilador 7CEE  
                postdec1 000FE5                  postinc0 000FEE   __size_of_decrementador 0086  
              _PORTBbits 000F81                _TRISBbits 000F93            __pidataCOMRAM 7CEE  
    start_initialization 7D16            _decrementador 7E06          __CFG_nLPBOR$OFF 000000  
            __pbssCOMRAM 0037           ?_decrementador 0029                 ?___awdiv 0029  
               ?___awmod 0029                _oscilador 7CE4         __CFG_WDTPS$32768 000000  
  __end_of_incrementador 7E06        __CFG_CFGPLLEN$OFF 000000          ??_decrementador 0031  
              copy_data0 7D2A                 __Hrparam 0000               ?_oscilador 0029  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 00C4  
       __size_of___awmod 00B0            __size_of_main 0042                 _unidades 0015  
               main@argc 0032                 main@argv 0034              ??_oscilador 0029  
   __CFG_CPUDIV$NOCLKDIV 000000       __CFG_FOSC$INTOSCIO 000000  
