

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 07 05:49:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           ; Version 2.10
    66                           ; Generated 31/07/2019 GMT
    67                           ; 
    68                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F45K50 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	nvCOMRAM
   101  000054                     __pnvCOMRAM:
   102                           	opt callstack 0
   103  000054                     _timer0ReloadVal:
   104                           	opt callstack 0
   105  000054                     	ds	2
   106                           
   107                           	psect	nvBANK0
   108  0000C6                     __pnvBANK0:
   109                           	opt callstack 0
   110  0000C6                     _INT2_InterruptHandler:
   111                           	opt callstack 0
   112  0000C6                     	ds	2
   113  0000C8                     _INT1_InterruptHandler:
   114                           	opt callstack 0
   115  0000C8                     	ds	2
   116  0000CA                     _TMR0_InterruptHandler:
   117                           	opt callstack 0
   118  0000CA                     	ds	2
   119  0000                     _ANSELA	set	3931
   120  0000                     _ANSELE	set	3935
   121  0000                     _ANSELB	set	3932
   122  0000                     _ANSELC	set	3933
   123  0000                     _ANSELD	set	3934
   124  0000                     _RCREG1	set	4014
   125  0000                     _TXREG1	set	4013
   126  0000                     _RCSTAbits	set	4011
   127  0000                     _SPBRG	set	4015
   128  0000                     _TXSTAbits	set	4012
   129  0000                     _BAUDCONbits	set	4024
   130  0000                     _TRISCbits	set	3988
   131  0000                     _PORTEbits	set	3972
   132  0000                     _PORTDbits	set	3971
   133  0000                     _RCONbits	set	4048
   134  0000                     _WPUB	set	3973
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISA	set	3986
   139  0000                     _TRISE	set	3990
   140  0000                     _LATC	set	3979
   141  0000                     _LATB	set	3978
   142  0000                     _LATA	set	3977
   143  0000                     _LATD	set	3980
   144  0000                     _LATE	set	3981
   145  0000                     _OSCCON2	set	4050
   146  0000                     _OSCCON	set	4051
   147  0000                     _INTCON2bits	set	4081
   148  0000                     _INTCON3bits	set	4080
   149  0000                     _T0CON	set	4053
   150  0000                     _INTCONbits	set	4082
   151  0000                     _TMR0L	set	4054
   152  0000                     _TMR0H	set	4055
   153  0000                     _T0CONbits	set	4053
   154                           
   155                           	psect	smallconst
   156  000800                     __psmallconst:
   157                           	opt callstack 0
   158  000800  00                 	db	0
   159  000801                     STR_1:
   160  000801  4C                 	db	76	;'L'
   161  000802  41                 	db	65	;'A'
   162  000803  20                 	db	32
   163  000804  48                 	db	72	;'H'
   164  000805  4F                 	db	79	;'O'
   165  000806  52                 	db	82	;'R'
   166  000807  41                 	db	65	;'A'
   167  000808  20                 	db	32
   168  000809  45                 	db	69	;'E'
   169  00080A  53                 	db	83	;'S'
   170  00080B  3A                 	db	58	;':'
   171  00080C  00                 	db	0
   172  00080D                     STR_2:
   173  00080D  25                 	db	37
   174  00080E  30                 	db	48	;'0'
   175  00080F  32                 	db	50	;'2'
   176  000810  75                 	db	117	;'u'
   177  000811  00                 	db	0
   178  000812                     STR_7:
   179  000812  0A                 	db	10
   180  000813  0D                 	db	13
   181  000814  00                 	db	0
   182  0000                     
   183                           ; #config settings
   184  000815  00                 	db	0	; dummy byte at the end
   185  0000                     
   186                           	psect	cinit
   187  001B5C                     __pcinit:
   188                           	opt callstack 0
   189  001B5C                     start_initialization:
   190                           	opt callstack 0
   191  001B5C                     __initialization:
   192                           	opt callstack 0
   193                           
   194                           ; Clear objects allocated to BANK0 (64 bytes)
   195  001B5C  EE00  F060         	lfsr	0,__pbssBANK0
   196  001B60  0E40               	movlw	64
   197  001B62                     clear_0:
   198  001B62  6AEE               	clrf	postinc0,c
   199  001B64  06E8               	decf	wreg,f,c
   200  001B66  E1FD               	bnz	clear_0
   201                           
   202                           ; Clear objects allocated to COMRAM (6 bytes)
   203  001B68  6A53               	clrf	(__pbssCOMRAM+5)& (0+255),c
   204  001B6A  6A52               	clrf	(__pbssCOMRAM+4)& (0+255),c
   205  001B6C  6A51               	clrf	(__pbssCOMRAM+3)& (0+255),c
   206  001B6E  6A50               	clrf	(__pbssCOMRAM+2)& (0+255),c
   207  001B70  6A4F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   208  001B72  6A4E               	clrf	__pbssCOMRAM& (0+255),c
   209  001B74                     end_of_initialization:
   210                           	opt callstack 0
   211  001B74                     __end_of__initialization:
   212                           	opt callstack 0
   213  001B74  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   214  001B76  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   215  001B78  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216  001B7A  6EF8               	movwf	tblptru,c
   217  001B7C  0100               	movlb	0
   218  001B7E  EF78  F007         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221  00004E                     __pbssCOMRAM:
   222                           	opt callstack 0
   223  00004E                     _width:
   224                           	opt callstack 0
   225  00004E                     	ds	2
   226  000050                     _prec:
   227                           	opt callstack 0
   228  000050                     	ds	2
   229  000052                     _flags:
   230                           	opt callstack 0
   231  000052                     	ds	2
   232                           
   233                           	psect	bssBANK0
   234  000060                     __pbssBANK0:
   235                           	opt callstack 0
   236  000060                     _hora:
   237                           	opt callstack 0
   238  000060                     	ds	12
   239  00006C                     _nout:
   240                           	opt callstack 0
   241  00006C                     	ds	2
   242  00006E                     _cont2:
   243                           	opt callstack 0
   244  00006E                     	ds	2
   245  000070                     _cont1:
   246                           	opt callstack 0
   247  000070                     	ds	2
   248  000072                     _cont:
   249                           	opt callstack 0
   250  000072                     	ds	2
   251  000074                     _dbuf:
   252                           	opt callstack 0
   253  000074                     	ds	32
   254  000094                     _horas:
   255                           	opt callstack 0
   256  000094                     	ds	4
   257  000098                     _minut:
   258                           	opt callstack 0
   259  000098                     	ds	4
   260  00009C                     _segun:
   261                           	opt callstack 0
   262  00009C                     	ds	4
   263                           
   264                           	psect	cstackBANK0
   265  0000A0                     __pcstackBANK0:
   266                           	opt callstack 0
   267  0000A0                     vfpfcnvrt@llu:
   268                           	opt callstack 0
   269                           
   270                           ; 8 bytes @ 0x0
   271  0000A0                     	ds	8
   272  0000A8                     vfpfcnvrt@done:
   273                           	opt callstack 0
   274                           
   275                           ; 2 bytes @ 0x8
   276  0000A8                     	ds	2
   277  0000AA                     _vfpfcnvrt$1140:
   278                           	opt callstack 0
   279                           
   280                           ; 2 bytes @ 0xA
   281  0000AA                     	ds	2
   282  0000AC                     ?_vfprintf:
   283                           	opt callstack 0
   284  0000AC                     vfprintf@fp:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0xC
   288  0000AC                     	ds	2
   289  0000AE                     vfprintf@fmt:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0xE
   293  0000AE                     	ds	2
   294  0000B0                     vfprintf@ap:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x10
   298  0000B0                     	ds	2
   299  0000B2                     vfprintf@cfmt:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x12
   303  0000B2                     	ds	2
   304  0000B4                     ?_sprintf:
   305                           	opt callstack 0
   306  0000B4                     sprintf@s:
   307                           	opt callstack 0
   308                           
   309                           ; 2 bytes @ 0x14
   310  0000B4                     	ds	2
   311  0000B6                     sprintf@fmt:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0x16
   315  0000B6                     	ds	6
   316  0000BC                     sprintf@ap:
   317                           	opt callstack 0
   318                           
   319                           ; 2 bytes @ 0x1C
   320  0000BC                     	ds	2
   321  0000BE                     sprintf@f:
   322                           	opt callstack 0
   323                           
   324                           ; 6 bytes @ 0x1E
   325  0000BE                     	ds	6
   326  0000C4                     ??_main:
   327                           
   328                           ; 1 bytes @ 0x24
   329  0000C4                     	ds	2
   330                           
   331                           	psect	cstackCOMRAM
   332  000001                     __pcstackCOMRAM:
   333                           	opt callstack 0
   334  000001                     ??_INTERRUPT_InterruptManagerHigh:
   335  000001                     
   336                           ; 1 bytes @ 0x0
   337  000001                     	ds	3
   338  000004                     ??_INTERRUPT_InterruptManagerLow:
   339                           
   340                           ; 1 bytes @ 0x3
   341  000004                     	ds	5
   342  000009                     ?_strlen:
   343                           	opt callstack 0
   344  000009                     ?_isdigit:
   345                           	opt callstack 0
   346  000009                     ?_isspace:
   347                           	opt callstack 0
   348  000009                     ?___wmul:
   349                           	opt callstack 0
   350  000009                     ?___aldiv:
   351                           	opt callstack 0
   352  000009                     ?___lodiv:
   353                           	opt callstack 0
   354  000009                     ?___lomod:
   355                           	opt callstack 0
   356  000009                     busdata@a:
   357                           	opt callstack 0
   358  000009                     serial_print@caracter:
   359                           	opt callstack 0
   360  000009                     TMR0_SetInterruptHandler@InterruptHandler:
   361                           	opt callstack 0
   362  000009                     INT1_SetInterruptHandler@InterruptHandler:
   363                           	opt callstack 0
   364  000009                     INT2_SetInterruptHandler@InterruptHandler:
   365                           	opt callstack 0
   366  000009                     ___wmul@multiplier:
   367                           	opt callstack 0
   368  000009                     isdigit@c:
   369                           	opt callstack 0
   370  000009                     isspace@c:
   371                           	opt callstack 0
   372  000009                     fputc@c:
   373                           	opt callstack 0
   374  000009                     strlen@s:
   375                           	opt callstack 0
   376  000009                     ___aldiv@dividend:
   377                           	opt callstack 0
   378  000009                     ___lodiv@dividend:
   379                           	opt callstack 0
   380  000009                     ___lomod@dividend:
   381                           	opt callstack 0
   382                           
   383                           ; 8 bytes @ 0x8
   384  000009                     	ds	1
   385  00000A                     ??_comando:
   386  00000A                     serial_trama@data:
   387                           	opt callstack 0
   388                           
   389                           ; 2 bytes @ 0x9
   390  00000A                     	ds	1
   391  00000B                     ??_isdigit:
   392  00000B                     ??_isspace:
   393  00000B                     ??_TMR0_Initialize:
   394  00000B                     comando@a:
   395                           	opt callstack 0
   396  00000B                     ___wmul@multiplicand:
   397                           	opt callstack 0
   398  00000B                     fputc@fp:
   399                           	opt callstack 0
   400  00000B                     strlen@a:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0xA
   404  00000B                     	ds	1
   405  00000C                     ??_serial_trama:
   406  00000C                     setCursor@y:
   407                           	opt callstack 0
   408  00000C                     caracter@m:
   409                           	opt callstack 0
   410                           
   411                           ; 1 bytes @ 0xB
   412  00000C                     	ds	1
   413  00000D                     ??_fputc:
   414  00000D                     ??_setCursor:
   415  00000D                     caracter@n:
   416                           	opt callstack 0
   417  00000D                     ___wmul@product:
   418                           	opt callstack 0
   419  00000D                     ___aldiv@divisor:
   420                           	opt callstack 0
   421                           
   422                           ; 4 bytes @ 0xC
   423  00000D                     	ds	1
   424  00000E                     caracter@a:
   425                           	opt callstack 0
   426  00000E                     serial_trama@k:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0xD
   430  00000E                     	ds	1
   431  00000F                     _isspace$1613:
   432                           	opt callstack 0
   433  00000F                     print@a:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0xE
   437  00000F                     	ds	1
   438  000010                     ?_atoi:
   439                           	opt callstack 0
   440  000010                     setCursor@m:
   441                           	opt callstack 0
   442  000010                     atoi@s:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0xF
   446  000010                     	ds	1
   447  000011                     ??_print:
   448  000011                     setCursor@n:
   449                           	opt callstack 0
   450  000011                     ___aldiv@counter:
   451                           	opt callstack 0
   452  000011                     ___lodiv@divisor:
   453                           	opt callstack 0
   454  000011                     ___lomod@divisor:
   455                           	opt callstack 0
   456                           
   457                           ; 8 bytes @ 0x10
   458  000011                     	ds	1
   459  000012                     ??_atoi:
   460  000012                     setCursor@x:
   461                           	opt callstack 0
   462  000012                     ___aldiv@sign:
   463                           	opt callstack 0
   464  000012                     fputs@s:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x11
   468  000012                     	ds	1
   469  000013                     print@k:
   470                           	opt callstack 0
   471  000013                     ___aldiv@quotient:
   472                           	opt callstack 0
   473                           
   474                           ; 4 bytes @ 0x12
   475  000013                     	ds	1
   476  000014                     fputs@fp:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x13
   480  000014                     	ds	2
   481  000016                     fputs@c:
   482                           	opt callstack 0
   483  000016                     atoi@neg:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x15
   487  000016                     	ds	1
   488  000017                     fputs@i:
   489                           	opt callstack 0
   490  000017                     serial_begin@baudios:
   491                           	opt callstack 0
   492                           
   493                           ; 4 bytes @ 0x16
   494  000017                     	ds	1
   495  000018                     _atoi$1595:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x17
   499  000018                     	ds	1
   500  000019                     ?_pad:
   501                           	opt callstack 0
   502  000019                     ___lomod@counter:
   503                           	opt callstack 0
   504  000019                     pad@fp:
   505                           	opt callstack 0
   506  000019                     ___lodiv@quotient:
   507                           	opt callstack 0
   508                           
   509                           ; 8 bytes @ 0x18
   510  000019                     	ds	1
   511  00001A                     _atoi$1597:
   512                           	opt callstack 0
   513                           
   514                           ; 2 bytes @ 0x19
   515  00001A                     	ds	1
   516  00001B                     pad@buf:
   517                           	opt callstack 0
   518  00001B                     _serial_begin$1909:
   519                           	opt callstack 0
   520                           
   521                           ; 4 bytes @ 0x1A
   522  00001B                     	ds	1
   523  00001C                     _atoi$1596:
   524                           	opt callstack 0
   525                           
   526                           ; 1 bytes @ 0x1B
   527  00001C                     	ds	1
   528  00001D                     pad@p:
   529                           	opt callstack 0
   530  00001D                     atoi@n:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x1C
   534  00001D                     	ds	2
   535  00001F                     ??_pad:
   536                           
   537                           ; 1 bytes @ 0x1E
   538  00001F                     	ds	1
   539  000020                     pad@i:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x1F
   543  000020                     	ds	1
   544  000021                     ___lodiv@counter:
   545                           	opt callstack 0
   546                           
   547                           ; 1 bytes @ 0x20
   548  000021                     	ds	1
   549  000022                     pad@w:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x21
   553  000022                     	ds	2
   554  000024                     ?_utoa:
   555                           	opt callstack 0
   556  000024                     utoa@fp:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x23
   560  000024                     	ds	2
   561  000026                     utoa@d:
   562                           	opt callstack 0
   563                           
   564                           ; 8 bytes @ 0x25
   565  000026                     	ds	8
   566  00002E                     ??_utoa:
   567                           
   568                           ; 1 bytes @ 0x2D
   569  00002E                     	ds	8
   570  000036                     utoa@p:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x35
   574  000036                     	ds	2
   575  000038                     utoa@w:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x37
   579  000038                     	ds	2
   580  00003A                     utoa@n:
   581                           	opt callstack 0
   582                           
   583                           ; 8 bytes @ 0x39
   584  00003A                     	ds	8
   585  000042                     utoa@i:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x41
   589  000042                     	ds	2
   590  000044                     ?_vfpfcnvrt:
   591                           	opt callstack 0
   592  000044                     vfpfcnvrt@fp:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x43
   596  000044                     	ds	2
   597  000046                     vfpfcnvrt@fmt:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x45
   601  000046                     	ds	2
   602  000048                     vfpfcnvrt@ap:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x47
   606  000048                     	ds	2
   607  00004A                     ??_vfpfcnvrt:
   608                           
   609                           ; 1 bytes @ 0x49
   610  00004A                     	ds	4
   611  00004E                     
   612                           ; 1 bytes @ 0x4D
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 15 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   632 ;;      Params:         0       0       0       0       0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0
   634 ;;      Temps:          0       2       0       0       0       0       0       0       0
   635 ;;      Totals:         0       2       0       0       0       0       0       0       0
   636 ;;Total ram usage:        2 bytes
   637 ;; Hardware stack levels required when called:   15
   638 ;; This function calls:
   639 ;;		_SYSTEM_Initialize
   640 ;;		_begin
   641 ;;		_ocultarcursor
   642 ;;		_print
   643 ;;		_serial_begin
   644 ;;		_serial_print
   645 ;;		_serial_trama
   646 ;;		_setCursor
   647 ;;		_sprintf
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text0
   654  000EF0                     __ptext0:
   655                           	opt callstack 0
   656  000EF0                     _main:
   657                           	opt callstack 16
   658  000EF0                     
   659                           ;main.c: 18:     SYSTEM_Initialize();
   660  000EF0  EC10  F00E         	call	_SYSTEM_Initialize	;wreg free
   661  000EF4                     
   662                           ;main.c: 20:     (INTCONbits.GIEH = 1);
   663  000EF4  8EF2               	bsf	242,7,c	;volatile
   664  000EF6                     
   665                           ;main.c: 21:     (INTCONbits.GIEL = 1);
   666  000EF6  8CF2               	bsf	242,6,c	;volatile
   667  000EF8                     
   668                           ;main.c: 22:     (INTCONbits.PEIE = 1);
   669  000EF8  8CF2               	bsf	242,6,c	;volatile
   670  000EFA                     
   671                           ;main.c: 23:     begin();
   672  000EFA  ECA7  F00C         	call	_begin	;wreg free
   673  000EFE                     
   674                           ;main.c: 24:     ANSELC=0;
   675  000EFE  0E00               	movlw	0
   676  000F00  010F               	movlb	15	; () banked
   677  000F02  6F5D               	movwf	93,b	;volatile
   678  000F04                     
   679                           ; BSR set to: 15
   680                           ;main.c: 25:     serial_begin(9600);
   681  000F04  0E80               	movlw	128
   682  000F06  6E17               	movwf	serial_begin@baudios^0,c
   683  000F08  0E25               	movlw	37
   684  000F0A  6E18               	movwf	(serial_begin@baudios+1)^0,c
   685  000F0C  0E00               	movlw	0
   686  000F0E  6E19               	movwf	(serial_begin@baudios+2)^0,c
   687  000F10  0E00               	movlw	0
   688  000F12  6E1A               	movwf	(serial_begin@baudios+3)^0,c
   689  000F14  ECBD  F00B         	call	_serial_begin	;wreg free
   690  000F18                     
   691                           ;main.c: 27:     ocultarcursor();
   692  000F18  EC1B  F00E         	call	_ocultarcursor	;wreg free
   693  000F1C                     
   694                           ;main.c: 28:     setCursor(5,2);
   695  000F1C  0E02               	movlw	2
   696  000F1E  6E0C               	movwf	setCursor@y^0,c
   697  000F20  0E05               	movlw	5
   698  000F22  EC2B  F008         	call	_setCursor
   699  000F26                     
   700                           ;main.c: 29:     print("LA HORA ES:");
   701  000F26  0E01               	movlw	low STR_1
   702  000F28  6E0F               	movwf	print@a^0,c
   703  000F2A  0E08               	movlw	high STR_1
   704  000F2C  6E10               	movwf	(print@a+1)^0,c
   705  000F2E  EC7E  F00B         	call	_print	;wreg free
   706  000F32                     l3151:
   707                           
   708                           ;main.c: 33:     {;main.c: 34:         sprintf(segun,"%02u",cont);
   709  000F32  0E9C               	movlw	low _segun
   710  000F34  0100               	movlb	0	; () banked
   711  000F36  6FB4               	movwf	sprintf@s& (0+255),b
   712  000F38  0E00               	movlw	high _segun
   713  000F3A  6FB5               	movwf	(sprintf@s+1)& (0+255),b
   714  000F3C  0E0D               	movlw	low STR_2
   715  000F3E  6FB6               	movwf	sprintf@fmt& (0+255),b
   716  000F40  0E08               	movlw	high STR_2
   717  000F42  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
   718  000F44  C072  F0B8         	movff	_cont,?_sprintf+4
   719  000F48  C073  F0B9         	movff	_cont+1,?_sprintf+5
   720  000F4C  EC55  F00C         	call	_sprintf	;wreg free
   721  000F50                     
   722                           ;main.c: 35:         sprintf(minut,"%02u",cont1);
   723  000F50  0E98               	movlw	low _minut
   724  000F52  0100               	movlb	0	; () banked
   725  000F54  6FB4               	movwf	sprintf@s& (0+255),b
   726  000F56  0E00               	movlw	high _minut
   727  000F58  6FB5               	movwf	(sprintf@s+1)& (0+255),b
   728  000F5A  0E0D               	movlw	low STR_2
   729  000F5C  6FB6               	movwf	sprintf@fmt& (0+255),b
   730  000F5E  0E08               	movlw	high STR_2
   731  000F60  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
   732  000F62  C070  F0B8         	movff	_cont1,?_sprintf+4
   733  000F66  C071  F0B9         	movff	_cont1+1,?_sprintf+5
   734  000F6A  EC55  F00C         	call	_sprintf	;wreg free
   735  000F6E                     
   736                           ;main.c: 36:         sprintf(horas,"%02u",cont2);
   737  000F6E  0E94               	movlw	low _horas
   738  000F70  0100               	movlb	0	; () banked
   739  000F72  6FB4               	movwf	sprintf@s& (0+255),b
   740  000F74  0E00               	movlw	high _horas
   741  000F76  6FB5               	movwf	(sprintf@s+1)& (0+255),b
   742  000F78  0E0D               	movlw	low STR_2
   743  000F7A  6FB6               	movwf	sprintf@fmt& (0+255),b
   744  000F7C  0E08               	movlw	high STR_2
   745  000F7E  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
   746  000F80  C06E  F0B8         	movff	_cont2,?_sprintf+4
   747  000F84  C06F  F0B9         	movff	_cont2+1,?_sprintf+5
   748  000F88  EC55  F00C         	call	_sprintf	;wreg free
   749  000F8C                     
   750                           ;main.c: 38:         setCursor(7,3);
   751  000F8C  0E03               	movlw	3
   752  000F8E  6E0C               	movwf	setCursor@y^0,c
   753  000F90  0E07               	movlw	7
   754  000F92  EC2B  F008         	call	_setCursor
   755  000F96                     
   756                           ;main.c: 39:         print(horas);
   757  000F96  0E94               	movlw	low _horas
   758  000F98  6E0F               	movwf	print@a^0,c
   759  000F9A  0E00               	movlw	high _horas
   760  000F9C  6E10               	movwf	(print@a+1)^0,c
   761  000F9E  EC7E  F00B         	call	_print	;wreg free
   762  000FA2                     
   763                           ;main.c: 40:         setCursor(10,3);
   764  000FA2  0E03               	movlw	3
   765  000FA4  6E0C               	movwf	setCursor@y^0,c
   766  000FA6  0E0A               	movlw	10
   767  000FA8  EC2B  F008         	call	_setCursor
   768  000FAC                     
   769                           ;main.c: 41:         print(minut);
   770  000FAC  0E98               	movlw	low _minut
   771  000FAE  6E0F               	movwf	print@a^0,c
   772  000FB0  0E00               	movlw	high _minut
   773  000FB2  6E10               	movwf	(print@a+1)^0,c
   774  000FB4  EC7E  F00B         	call	_print	;wreg free
   775  000FB8                     
   776                           ;main.c: 42:         setCursor(13,3);
   777  000FB8  0E03               	movlw	3
   778  000FBA  6E0C               	movwf	setCursor@y^0,c
   779  000FBC  0E0D               	movlw	13
   780  000FBE  EC2B  F008         	call	_setCursor
   781  000FC2                     
   782                           ;main.c: 43:         print(segun);
   783  000FC2  0E9C               	movlw	low _segun
   784  000FC4  6E0F               	movwf	print@a^0,c
   785  000FC6  0E00               	movlw	high _segun
   786  000FC8  6E10               	movwf	(print@a+1)^0,c
   787  000FCA  EC7E  F00B         	call	_print	;wreg free
   788  000FCE                     
   789                           ;main.c: 44:         setCursor(9,3);
   790  000FCE  0E03               	movlw	3
   791  000FD0  6E0C               	movwf	setCursor@y^0,c
   792  000FD2  0E09               	movlw	9
   793  000FD4  EC2B  F008         	call	_setCursor
   794  000FD8                     
   795                           ;main.c: 45:         print(":");
   796  000FD8  0E0B               	movlw	low (STR_1+10)
   797  000FDA  6E0F               	movwf	print@a^0,c
   798  000FDC  0E08               	movlw	high (STR_1+10)
   799  000FDE  6E10               	movwf	(print@a+1)^0,c
   800  000FE0  EC7E  F00B         	call	_print	;wreg free
   801  000FE4                     
   802                           ;main.c: 46:         setCursor(12,3);
   803  000FE4  0E03               	movlw	3
   804  000FE6  6E0C               	movwf	setCursor@y^0,c
   805  000FE8  0E0C               	movlw	12
   806  000FEA  EC2B  F008         	call	_setCursor
   807  000FEE                     
   808                           ;main.c: 47:         print(":");
   809  000FEE  0E0B               	movlw	low (STR_1+10)
   810  000FF0  6E0F               	movwf	print@a^0,c
   811  000FF2  0E08               	movlw	high (STR_1+10)
   812  000FF4  6E10               	movwf	(print@a+1)^0,c
   813  000FF6  EC7E  F00B         	call	_print	;wreg free
   814  000FFA                     
   815                           ;main.c: 51:         serial_trama(horas);
   816  000FFA  0E94               	movlw	low _horas
   817  000FFC  6E0A               	movwf	serial_trama@data^0,c
   818  000FFE  0E00               	movlw	high _horas
   819  001000  6E0B               	movwf	(serial_trama@data+1)^0,c
   820  001002  EC3F  F00B         	call	_serial_trama	;wreg free
   821  001006                     
   822                           ;main.c: 52:         serial_print(':');
   823  001006  0E3A               	movlw	58
   824  001008  EC05  F00E         	call	_serial_print
   825  00100C                     
   826                           ;main.c: 53:         serial_trama(minut);
   827  00100C  0E98               	movlw	low _minut
   828  00100E  6E0A               	movwf	serial_trama@data^0,c
   829  001010  0E00               	movlw	high _minut
   830  001012  6E0B               	movwf	(serial_trama@data+1)^0,c
   831  001014  EC3F  F00B         	call	_serial_trama	;wreg free
   832  001018                     
   833                           ;main.c: 54:         serial_print(':');
   834  001018  0E3A               	movlw	58
   835  00101A  EC05  F00E         	call	_serial_print
   836  00101E                     
   837                           ;main.c: 55:         serial_trama(segun);
   838  00101E  0E9C               	movlw	low _segun
   839  001020  6E0A               	movwf	serial_trama@data^0,c
   840  001022  0E00               	movlw	high _segun
   841  001024  6E0B               	movwf	(serial_trama@data+1)^0,c
   842  001026  EC3F  F00B         	call	_serial_trama	;wreg free
   843  00102A                     
   844                           ;main.c: 56:         serial_trama("\n\r");
   845  00102A  0E12               	movlw	low STR_7
   846  00102C  6E0A               	movwf	serial_trama@data^0,c
   847  00102E  0E08               	movlw	high STR_7
   848  001030  6E0B               	movwf	(serial_trama@data+1)^0,c
   849  001032  EC3F  F00B         	call	_serial_trama	;wreg free
   850  001036                     
   851                           ;main.c: 57:         _delay((unsigned long)((400)*(8000000/4000.0)));
   852  001036  0E05               	movlw	5
   853  001038  0100               	movlb	0	; () banked
   854  00103A  6FC5               	movwf	(??_main+1)& (0+255),b
   855  00103C  0E0F               	movlw	15
   856  00103E  6FC4               	movwf	??_main& (0+255),b
   857  001040  0EF1               	movlw	241
   858  001042                     u2297:
   859  001042  2EE8               	decfsz	wreg,f,c
   860  001044  D7FE               	bra	u2297
   861  001046  2FC4               	decfsz	??_main& (0+255),f,b
   862  001048  D7FC               	bra	u2297
   863  00104A  2FC5               	decfsz	(??_main+1)& (0+255),f,b
   864  00104C  D7FA               	bra	u2297
   865  00104E  EF99  F007         	goto	l3151
   866  001052  EF66  F000         	goto	start
   867  001056                     __end_of_main:
   868                           	opt callstack 0
   869                           
   870 ;; *************** function _sprintf *****************
   871 ;; Defined at:
   872 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  s               2   20[BANK0 ] PTR unsigned char 
   875 ;;		 -> horas(4), minut(4), segun(4), 
   876 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
   877 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  f               6   30[BANK0 ] struct _IO_FILE
   880 ;;  ap              2   28[BANK0 ] PTR void [1]
   881 ;;		 -> ?_sprintf(2), 
   882 ;;  ret             2    0        int 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  2   20[BANK0 ] int 
   885 ;; Registers used:
   886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   892 ;;      Params:         0       6       0       0       0       0       0       0       0
   893 ;;      Locals:         0      10       0       0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0
   895 ;;      Totals:         0      16       0       0       0       0       0       0       0
   896 ;;Total ram usage:       16 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:   14
   899 ;; This function calls:
   900 ;;		_vfprintf
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text1
   907  0018AA                     __ptext1:
   908                           	opt callstack 0
   909  0018AA                     _sprintf:
   910                           	opt callstack 16
   911  0018AA  0EB8               	movlw	low (?_sprintf+4)
   912  0018AC  0100               	movlb	0	; () banked
   913  0018AE  6FBC               	movwf	sprintf@ap& (0+255),b
   914  0018B0  0E00               	movlw	high (?_sprintf+4)
   915  0018B2  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
   916  0018B4  C0B4  F0BE         	movff	sprintf@s,sprintf@f
   917  0018B8  C0B5  F0BF         	movff	sprintf@s+1,sprintf@f+1
   918  0018BC                     
   919                           ; BSR set to: 0
   920  0018BC  0E00               	movlw	0
   921  0018BE  6FC1               	movwf	(sprintf@f+3)& (0+255),b
   922  0018C0  0E00               	movlw	0
   923  0018C2  6FC0               	movwf	(sprintf@f+2)& (0+255),b
   924  0018C4                     
   925                           ; BSR set to: 0
   926  0018C4  0E00               	movlw	0
   927  0018C6  6FC3               	movwf	(sprintf@f+5)& (0+255),b
   928  0018C8  0E00               	movlw	0
   929  0018CA  6FC2               	movwf	(sprintf@f+4)& (0+255),b
   930  0018CC                     
   931                           ; BSR set to: 0
   932  0018CC  0EBE               	movlw	low sprintf@f
   933  0018CE  6FAC               	movwf	vfprintf@fp& (0+255),b
   934  0018D0  0E00               	movlw	high sprintf@f
   935  0018D2  6FAD               	movwf	(vfprintf@fp+1)& (0+255),b
   936  0018D4  C0B6  F0AE         	movff	sprintf@fmt,vfprintf@fmt
   937  0018D8  C0B7  F0AF         	movff	sprintf@fmt+1,vfprintf@fmt+1
   938  0018DC  0EBC               	movlw	low sprintf@ap
   939  0018DE  6FB0               	movwf	vfprintf@ap& (0+255),b
   940  0018E0  0E00               	movlw	high sprintf@ap
   941  0018E2  6FB1               	movwf	(vfprintf@ap+1)& (0+255),b
   942  0018E4  ECF6  F00B         	call	_vfprintf	;wreg free
   943  0018E8  0100               	movlb	0	; () banked
   944  0018EA  51C0               	movf	(sprintf@f+2)& (0+255),w,b
   945  0018EC  25B4               	addwf	sprintf@s& (0+255),w,b
   946  0018EE  6ED9               	movwf	fsr2l,c
   947  0018F0  51C1               	movf	(sprintf@f+3)& (0+255),w,b
   948  0018F2  21B5               	addwfc	(sprintf@s+1)& (0+255),w,b
   949  0018F4  6EDA               	movwf	fsr2h,c
   950  0018F6  0E00               	movlw	0
   951  0018F8  6EDF               	movwf	indf2,c
   952  0018FA                     
   953                           ; BSR set to: 0
   954  0018FA  0012               	return		;funcret
   955  0018FC                     __end_of_sprintf:
   956                           	opt callstack 0
   957                           
   958 ;; *************** function _vfprintf *****************
   959 ;; Defined at:
   960 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
   963 ;;		 -> sprintf@f(6), 
   964 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
   965 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   966 ;;  ap              2   16[BANK0 ] PTR PTR void 
   967 ;;		 -> sprintf@ap(2), 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  cfmt            2   18[BANK0 ] PTR unsigned char 
   970 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  2   12[BANK0 ] int 
   973 ;; Registers used:
   974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       6       0       0       0       0       0       0       0
   981 ;;      Locals:         0       2       0       0       0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0
   983 ;;      Totals:         0       8       0       0       0       0       0       0       0
   984 ;;Total ram usage:        8 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:   13
   987 ;; This function calls:
   988 ;;		_vfpfcnvrt
   989 ;; This function is called by:
   990 ;;		_sprintf
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text2
   995  0017EC                     __ptext2:
   996                           	opt callstack 0
   997  0017EC                     _vfprintf:
   998                           	opt callstack 16
   999  0017EC                     
  1000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1001  0017EC  C0AE  F0B2         	movff	vfprintf@fmt,vfprintf@cfmt
  1002  0017F0  C0AF  F0B3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1003  0017F4                     
  1004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1005  0017F4  0E00               	movlw	0
  1006  0017F6  0100               	movlb	0	; () banked
  1007  0017F8  6F6D               	movwf	(_nout+1)& (0+255),b
  1008  0017FA  0E00               	movlw	0
  1009  0017FC  6F6C               	movwf	_nout& (0+255),b
  1010                           
  1011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1012  0017FE  EF14  F00C         	goto	l3117
  1013  001802                     l3115:
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1017  001802  C0AC  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1018  001806  C0AD  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1019  00180A  0EB2               	movlw	low vfprintf@cfmt
  1020  00180C  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1021  00180E  0E00               	movlw	high vfprintf@cfmt
  1022  001810  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1023  001812  C0B0  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1024  001816  C0B1  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1025  00181A  EC0B  F004         	call	_vfpfcnvrt	;wreg free
  1026  00181E  5044               	movf	?_vfpfcnvrt^0,w,c
  1027  001820  0100               	movlb	0	; () banked
  1028  001822  276C               	addwf	_nout& (0+255),f,b
  1029  001824  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1030  001826  236D               	addwfc	(_nout+1)& (0+255),f,b
  1031  001828                     l3117:
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1035  001828  C0B2  FFF6         	movff	vfprintf@cfmt,tblptrl
  1036  00182C  C0B3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1037  001830                     	if	0	;tblptru may be non-zero
  1038  001830                     	endif
  1039  001830                     	if	0	;tblptru may be non-zero
  1040  001830                     	endif
  1041  001830  0008               	tblrd		*
  1042  001832  50F5               	movf	tablat,w,c
  1043  001834  0900               	iorlw	0
  1044  001836  A4D8               	btfss	status,2,c
  1045  001838  EF20  F00C         	goto	u2281
  1046  00183C  EF22  F00C         	goto	u2280
  1047  001840                     u2281:
  1048  001840  EF01  F00C         	goto	l3115
  1049  001844                     u2280:
  1050  001844                     
  1051                           ; BSR set to: 0
  1052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1053  001844  C06C  F0AC         	movff	_nout,?_vfprintf
  1054  001848  C06D  F0AD         	movff	_nout+1,?_vfprintf+1
  1055  00184C                     
  1056                           ; BSR set to: 0
  1057  00184C  0012               	return		;funcret
  1058  00184E                     __end_of_vfprintf:
  1059                           	opt callstack 0
  1060                           
  1061 ;; *************** function _vfpfcnvrt *****************
  1062 ;; Defined at:
  1063 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1066 ;;		 -> sprintf@f(6), 
  1067 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1068 ;;		 -> vfprintf@cfmt(2), 
  1069 ;;  ap              2   71[COMRAM] PTR PTR void 
  1070 ;;		 -> sprintf@ap(2), 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  llu             8    0[BANK0 ] unsigned long long 
  1073 ;;  ll              8    0        long long 
  1074 ;;  f               4    0        long long 
  1075 ;;  vp              3    0        PTR void 
  1076 ;;  ct              3    0        unsigned char [3]
  1077 ;;  cp              3    0        PTR unsigned char 
  1078 ;;  done            2    8[BANK0 ] int 
  1079 ;;  i               2    0        int 
  1080 ;;  c               1    0        unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  2   67[COMRAM] int 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1090 ;;      Params:         6       0       0       0       0       0       0       0       0
  1091 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1092 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1093 ;;      Totals:        10      12       0       0       0       0       0       0       0
  1094 ;;Total ram usage:       22 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:   12
  1097 ;; This function calls:
  1098 ;;		_atoi
  1099 ;;		_fputc
  1100 ;;		_isdigit
  1101 ;;		_utoa
  1102 ;; This function is called by:
  1103 ;;		_vfprintf
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text3
  1108  000816                     __ptext3:
  1109                           	opt callstack 0
  1110  000816                     _vfpfcnvrt:
  1111                           	opt callstack 16
  1112  000816                     
  1113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1114  000816  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1115  00081A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1116  00081E  CFDE FFF6          	movff	postinc2,tblptrl
  1117  000822  CFDD FFF7          	movff	postdec2,tblptrh
  1118  000826                     	if	0	;tblptru may be non-zero
  1119  000826                     	endif
  1120  000826                     	if	0	;tblptru may be non-zero
  1121  000826                     	endif
  1122  000826  0008               	tblrd		*
  1123  000828  50F5               	movf	tablat,w,c
  1124  00082A  0A25               	xorlw	37
  1125  00082C  A4D8               	btfss	status,2,c
  1126  00082E  EF1B  F004         	goto	u2181
  1127  000832  EF1D  F004         	goto	u2180
  1128  000836                     u2181:
  1129  000836  EF94  F005         	goto	l3093
  1130  00083A                     u2180:
  1131  00083A                     
  1132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1133  00083A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1134  00083E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1135  000842  2ADE               	incf	postinc2,f,c
  1136  000844  0E00               	movlw	0
  1137  000846  22DD               	addwfc	postdec2,f,c
  1138  000848                     
  1139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1140  000848  0E00               	movlw	0
  1141  00084A  6E4F               	movwf	(_width+1)^0,c
  1142  00084C  0E00               	movlw	0
  1143  00084E  6E4E               	movwf	_width^0,c
  1144  000850  C04E  F052         	movff	_width,_flags
  1145  000854  C04F  F053         	movff	_width+1,_flags+1
  1146  000858                     
  1147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1148  000858  6850               	setf	_prec^0,c
  1149  00085A  6851               	setf	(_prec+1)^0,c
  1150  00085C                     
  1151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1152  00085C  0E00               	movlw	0
  1153  00085E  0100               	movlb	0	; () banked
  1154  000860  6FA9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1155  000862  0E00               	movlw	0
  1156  000864  6FA8               	movwf	vfpfcnvrt@done& (0+255),b
  1157                           
  1158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1159  000866  EF7B  F004         	goto	l3047
  1160  00086A                     l3021:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1164  00086A  8052               	bsf	_flags^0,0,c
  1165  00086C                     l3023:
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1169  00086C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1170  000870  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1171  000874  2ADE               	incf	postinc2,f,c
  1172  000876  0E00               	movlw	0
  1173  000878  22DD               	addwfc	postdec2,f,c
  1174                           
  1175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1176  00087A  EF7B  F004         	goto	l3047
  1177  00087E                     l3025:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1181  00087E  8252               	bsf	_flags^0,1,c
  1182  000880  EF36  F004         	goto	l3023
  1183  000884                     l3029:
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1187  000884  8452               	bsf	_flags^0,2,c
  1188  000886  EF36  F004         	goto	l3023
  1189  00088A                     l3033:
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1193  00088A  8652               	bsf	_flags^0,3,c
  1194  00088C  EF36  F004         	goto	l3023
  1195  000890                     l3037:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1199  000890  8852               	bsf	_flags^0,4,c
  1200  000892  EF36  F004         	goto	l3023
  1201  000896                     l3041:
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1205  000896  0E00               	movlw	0
  1206  000898  6FA9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1207  00089A  0E01               	movlw	1
  1208  00089C  6FA8               	movwf	vfpfcnvrt@done& (0+255),b
  1209                           
  1210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1211  00089E  EF7B  F004         	goto	l3047
  1212  0008A2                     l3045:
  1213                           
  1214                           ; BSR set to: 0
  1215  0008A2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1216  0008A6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1217  0008AA  CFDE FFF6          	movff	postinc2,tblptrl
  1218  0008AE  CFDD FFF7          	movff	postdec2,tblptrh
  1219  0008B2                     	if	0	;tblptru may be non-zero
  1220  0008B2                     	endif
  1221  0008B2                     	if	0	;tblptru may be non-zero
  1222  0008B2                     	endif
  1223  0008B2  0008               	tblrd		*
  1224  0008B4  50F5               	movf	tablat,w,c
  1225  0008B6  6E4A               	movwf	??_vfpfcnvrt^0,c
  1226  0008B8  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  1227                           
  1228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1229                           ; Switch size 1, requested type "simple"
  1230                           ; Number of cases is 1, Range of values is 0 to 0
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte            4     3 (average)
  1234                           ;	Chosen strategy is simple_byte
  1235  0008BA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1236  0008BC  0A00               	xorlw	0	; case 0
  1237  0008BE  B4D8               	btfsc	status,2,c
  1238  0008C0  EF64  F004         	goto	l3261
  1239  0008C4  EF4B  F004         	goto	l3041
  1240  0008C8                     l3261:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 5, Range of values is 32 to 48
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte           16     9 (average)
  1248                           ;	Chosen strategy is simple_byte
  1249  0008C8  504A               	movf	??_vfpfcnvrt^0,w,c
  1250  0008CA  0A20               	xorlw	32	; case 32
  1251  0008CC  B4D8               	btfsc	status,2,c
  1252  0008CE  EF45  F004         	goto	l3033
  1253  0008D2  0A03               	xorlw	3	; case 35
  1254  0008D4  B4D8               	btfsc	status,2,c
  1255  0008D6  EF48  F004         	goto	l3037
  1256  0008DA  0A08               	xorlw	8	; case 43
  1257  0008DC  B4D8               	btfsc	status,2,c
  1258  0008DE  EF42  F004         	goto	l3029
  1259  0008E2  0A06               	xorlw	6	; case 45
  1260  0008E4  B4D8               	btfsc	status,2,c
  1261  0008E6  EF35  F004         	goto	l3021
  1262  0008EA  0A1D               	xorlw	29	; case 48
  1263  0008EC  B4D8               	btfsc	status,2,c
  1264  0008EE  EF3F  F004         	goto	l3025
  1265  0008F2  EF4B  F004         	goto	l3041
  1266  0008F6                     l3047:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1270  0008F6  51A8               	movf	vfpfcnvrt@done& (0+255),w,b
  1271  0008F8  11A9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1272  0008FA  B4D8               	btfsc	status,2,c
  1273  0008FC  EF82  F004         	goto	u2191
  1274  000900  EF84  F004         	goto	u2190
  1275  000904                     u2191:
  1276  000904  EF51  F004         	goto	l3045
  1277  000908                     u2190:
  1278  000908                     
  1279                           ; BSR set to: 0
  1280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1281  000908  A052               	btfss	_flags^0,0,c
  1282  00090A  EF89  F004         	goto	u2201
  1283  00090E  EF8B  F004         	goto	u2200
  1284  000912                     u2201:
  1285  000912  EF8C  F004         	goto	l3051
  1286  000916                     u2200:
  1287  000916                     
  1288                           ; BSR set to: 0
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1290  000916  9252               	bcf	_flags^0,1,c
  1291  000918                     l3051:
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1295  000918  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1296  00091C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1297  000920  CFDE FFF6          	movff	postinc2,tblptrl
  1298  000924  CFDD FFF7          	movff	postdec2,tblptrh
  1299  000928                     	if	0	;tblptru may be non-zero
  1300  000928                     	endif
  1301  000928                     	if	0	;tblptru may be non-zero
  1302  000928                     	endif
  1303  000928  0008               	tblrd		*
  1304  00092A  50F5               	movf	tablat,w,c
  1305  00092C  0A2A               	xorlw	42
  1306  00092E  A4D8               	btfss	status,2,c
  1307  000930  EF9C  F004         	goto	u2211
  1308  000934  EF9E  F004         	goto	u2210
  1309  000938                     u2211:
  1310  000938  EFC7  F004         	goto	l3059
  1311  00093C                     u2210:
  1312  00093C                     
  1313                           ; BSR set to: 0
  1314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1315  00093C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1316  000940  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1317  000944  2ADE               	incf	postinc2,f,c
  1318  000946  0E00               	movlw	0
  1319  000948  22DD               	addwfc	postdec2,f,c
  1320                           
  1321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1322  00094A  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1323  00094E  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1324  000952  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1325  000956  0E02               	movlw	2
  1326  000958  26DE               	addwf	postinc2,f,c
  1327  00095A  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1328  00095E  0E00               	movlw	0
  1329  000960  22DD               	addwfc	postdec2,f,c
  1330  000962  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1331  000966  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1332  00096A  CFDE F04E          	movff	postinc2,_width
  1333  00096E  CFDD F04F          	movff	postdec2,_width+1
  1334  000972                     
  1335                           ; BSR set to: 0
  1336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1337  000972  BE4F               	btfsc	(_width+1)^0,7,c
  1338  000974  EFC0  F004         	goto	u2220
  1339  000978  EFBE  F004         	goto	u2221
  1340  00097C                     u2221:
  1341  00097C  EF0B  F005         	goto	l3069
  1342  000980                     u2220:
  1343  000980                     
  1344                           ; BSR set to: 0
  1345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1346  000980  8052               	bsf	_flags^0,0,c
  1347                           
  1348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1349  000982  6C4E               	negf	_width^0,c
  1350  000984  1E4F               	comf	(_width+1)^0,f,c
  1351  000986  B0D8               	btfsc	status,0,c
  1352  000988  2A4F               	incf	(_width+1)^0,f,c
  1353  00098A  EF0B  F005         	goto	l3069
  1354  00098E                     l3059:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1358  00098E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1359  000992  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1360  000996  CFDE F010          	movff	postinc2,atoi@s
  1361  00099A  CFDD F011          	movff	postdec2,atoi@s+1
  1362  00099E  ECB0  F006         	call	_atoi	;wreg free
  1363  0009A2  C010  F04E         	movff	?_atoi,_width
  1364  0009A6  C011  F04F         	movff	?_atoi+1,_width+1
  1365                           
  1366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1367  0009AA  EFDE  F004         	goto	l3063
  1368  0009AE                     l3061:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1372  0009AE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1373  0009B2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1374  0009B6  2ADE               	incf	postinc2,f,c
  1375  0009B8  0E00               	movlw	0
  1376  0009BA  22DD               	addwfc	postdec2,f,c
  1377  0009BC                     l3063:
  1378  0009BC  0ED0               	movlw	208
  1379  0009BE  6E4A               	movwf	??_vfpfcnvrt^0,c
  1380  0009C0  0EFF               	movlw	255
  1381  0009C2  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1382  0009C4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1383  0009C8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1384  0009CC  CFDE FFF6          	movff	postinc2,tblptrl
  1385  0009D0  CFDD FFF7          	movff	postdec2,tblptrh
  1386  0009D4                     	if	0	;tblptru may be non-zero
  1387  0009D4                     	endif
  1388  0009D4                     	if	0	;tblptru may be non-zero
  1389  0009D4                     	endif
  1390  0009D4  0008               	tblrd		*
  1391  0009D6  50F5               	movf	tablat,w,c
  1392  0009D8  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  1393  0009DA  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  1394  0009DC  504A               	movf	??_vfpfcnvrt^0,w,c
  1395  0009DE  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1396  0009E0  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1397  0009E2  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1398  0009E4  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1399  0009E6  E10A               	bnz	u2230
  1400  0009E8  0E0A               	movlw	10
  1401  0009EA  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1402  0009EC  A0D8               	btfss	status,0,c
  1403  0009EE  EFFB  F004         	goto	u2231
  1404  0009F2  EFFE  F004         	goto	u2230
  1405  0009F6                     u2231:
  1406  0009F6  0E01               	movlw	1
  1407  0009F8  EFFF  F004         	goto	u2240
  1408  0009FC                     u2230:
  1409  0009FC  0E00               	movlw	0
  1410  0009FE                     u2240:
  1411  0009FE  0100               	movlb	0	; () banked
  1412  000A00  6FAA               	movwf	_vfpfcnvrt$1140& (0+255),b
  1413  000A02  6BAB               	clrf	(_vfpfcnvrt$1140+1)& (0+255),b
  1414  000A04                     
  1415                           ; BSR set to: 0
  1416  000A04  51AA               	movf	_vfpfcnvrt$1140& (0+255),w,b
  1417  000A06  11AB               	iorwf	(_vfpfcnvrt$1140+1)& (0+255),w,b
  1418  000A08  A4D8               	btfss	status,2,c
  1419  000A0A  EF09  F005         	goto	u2251
  1420  000A0E  EF0B  F005         	goto	u2250
  1421  000A12                     u2251:
  1422  000A12  EFD7  F004         	goto	l3061
  1423  000A16                     u2250:
  1424  000A16                     l3069:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1428  000A16  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1429  000A1A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1430  000A1E  CFDE FFF6          	movff	postinc2,tblptrl
  1431  000A22  CFDD FFF7          	movff	postdec2,tblptrh
  1432  000A26                     	if	0	;tblptru may be non-zero
  1433  000A26                     	endif
  1434  000A26                     	if	0	;tblptru may be non-zero
  1435  000A26                     	endif
  1436  000A26  0008               	tblrd		*
  1437  000A28  50F5               	movf	tablat,w,c
  1438  000A2A  0A75               	xorlw	117
  1439  000A2C  A4D8               	btfss	status,2,c
  1440  000A2E  EF1B  F005         	goto	u2261
  1441  000A32  EF1D  F005         	goto	u2260
  1442  000A36                     u2261:
  1443  000A36  EF5E  F005         	goto	l3077
  1444  000A3A                     u2260:
  1445  000A3A                     
  1446                           ; BSR set to: 0
  1447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1448  000A3A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1449  000A3E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1450  000A42  2ADE               	incf	postinc2,f,c
  1451  000A44  0E00               	movlw	0
  1452  000A46  22DD               	addwfc	postdec2,f,c
  1453                           
  1454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1455  000A48  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1456  000A4C  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1457  000A50  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1458  000A54  0E02               	movlw	2
  1459  000A56  26DE               	addwf	postinc2,f,c
  1460  000A58  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1461  000A5C  0E00               	movlw	0
  1462  000A5E  22DD               	addwfc	postdec2,f,c
  1463  000A60  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1464  000A64  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1465  000A68  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+2
  1466  000A6C  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+3
  1467  000A70  C04C  F0A0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1468  000A74  C04D  F0A1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1469  000A78  6BA2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1470  000A7A  6BA3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1471  000A7C  6BA4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1472  000A7E  6BA5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1473  000A80  6BA6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1474  000A82  6BA7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1475  000A84                     
  1476                           ; BSR set to: 0
  1477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1478  000A84  C044  F024         	movff	vfpfcnvrt@fp,utoa@fp
  1479  000A88  C045  F025         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1480  000A8C  C0A0  F026         	movff	vfpfcnvrt@llu,utoa@d
  1481  000A90  C0A1  F027         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1482  000A94  C0A2  F028         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1483  000A98  C0A3  F029         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1484  000A9C  C0A4  F02A         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1485  000AA0  C0A5  F02B         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1486  000AA4  C0A6  F02C         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1487  000AA8  C0A7  F02D         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1488  000AAC  ECB0  F005         	call	_utoa	;wreg free
  1489  000AB0  C024  F044         	movff	?_utoa,?_vfpfcnvrt
  1490  000AB4  C025  F045         	movff	?_utoa+1,?_vfpfcnvrt+1
  1491  000AB8  EFAF  F005         	goto	l403
  1492  000ABC                     l3077:
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1496  000ABC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1497  000AC0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1498  000AC4  CFDE FFF6          	movff	postinc2,tblptrl
  1499  000AC8  CFDD FFF7          	movff	postdec2,tblptrh
  1500  000ACC                     	if	0	;tblptru may be non-zero
  1501  000ACC                     	endif
  1502  000ACC                     	if	0	;tblptru may be non-zero
  1503  000ACC                     	endif
  1504  000ACC  0008               	tblrd		*
  1505  000ACE  50F5               	movf	tablat,w,c
  1506  000AD0  0A25               	xorlw	37
  1507  000AD2  A4D8               	btfss	status,2,c
  1508  000AD4  EF6E  F005         	goto	u2271
  1509  000AD8  EF70  F005         	goto	u2270
  1510  000ADC                     u2271:
  1511  000ADC  EF87  F005         	goto	l3087
  1512  000AE0                     u2270:
  1513  000AE0                     
  1514                           ; BSR set to: 0
  1515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1516  000AE0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1517  000AE4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1518  000AE8  2ADE               	incf	postinc2,f,c
  1519  000AEA  0E00               	movlw	0
  1520  000AEC  22DD               	addwfc	postdec2,f,c
  1521  000AEE                     
  1522                           ; BSR set to: 0
  1523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1524  000AEE  0E00               	movlw	0
  1525  000AF0  6E0A               	movwf	(fputc@c+1)^0,c
  1526  000AF2  0E25               	movlw	37
  1527  000AF4  6E09               	movwf	fputc@c^0,c
  1528  000AF6  C044  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1529  000AFA  C045  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1530  000AFE  EC1E  F00A         	call	_fputc	;wreg free
  1531  000B02                     l3083:
  1532                           
  1533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1534  000B02  0E00               	movlw	0
  1535  000B04  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1536  000B06  0E01               	movlw	1
  1537  000B08  6E44               	movwf	?_vfpfcnvrt^0,c
  1538  000B0A  EFAF  F005         	goto	l403
  1539  000B0E                     l3087:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1543  000B0E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1544  000B12  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1545  000B16  2ADE               	incf	postinc2,f,c
  1546  000B18  0E00               	movlw	0
  1547  000B1A  22DD               	addwfc	postdec2,f,c
  1548  000B1C                     
  1549                           ; BSR set to: 0
  1550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1551  000B1C  0E00               	movlw	0
  1552  000B1E  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1553  000B20  0E00               	movlw	0
  1554  000B22  6E44               	movwf	?_vfpfcnvrt^0,c
  1555  000B24  EFAF  F005         	goto	l403
  1556  000B28                     l3093:
  1557                           
  1558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1559  000B28  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1560  000B2C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1561  000B30  CFDE FFF6          	movff	postinc2,tblptrl
  1562  000B34  CFDD FFF7          	movff	postdec2,tblptrh
  1563  000B38                     	if	0	;tblptru may be non-zero
  1564  000B38                     	endif
  1565  000B38                     	if	0	;tblptru may be non-zero
  1566  000B38                     	endif
  1567  000B38  0008               	tblrd		*
  1568  000B3A  50F5               	movf	tablat,w,c
  1569  000B3C  6E09               	movwf	fputc@c^0,c
  1570  000B3E  6A0A               	clrf	(fputc@c+1)^0,c
  1571  000B40  C044  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1572  000B44  C045  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1573  000B48  EC1E  F00A         	call	_fputc	;wreg free
  1574  000B4C                     
  1575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1576  000B4C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1577  000B50  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1578  000B54  2ADE               	incf	postinc2,f,c
  1579  000B56  0E00               	movlw	0
  1580  000B58  22DD               	addwfc	postdec2,f,c
  1581  000B5A  EF81  F005         	goto	l3083
  1582  000B5E                     l403:
  1583  000B5E  0012               	return		;funcret
  1584  000B60                     __end_of_vfpfcnvrt:
  1585                           	opt callstack 0
  1586                           
  1587 ;; *************** function _utoa *****************
  1588 ;; Defined at:
  1589 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  1592 ;;		 -> sprintf@f(6), 
  1593 ;;  d               8   37[COMRAM] unsigned long long 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  n               8   57[COMRAM] unsigned long long 
  1596 ;;  i               2   65[COMRAM] int 
  1597 ;;  w               2   55[COMRAM] int 
  1598 ;;  p               2   53[COMRAM] int 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2   35[COMRAM] int 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1608 ;;      Params:        10       0       0       0       0       0       0       0       0
  1609 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1610 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1611 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1612 ;;Total ram usage:       32 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:   11
  1615 ;; This function calls:
  1616 ;;		___lodiv
  1617 ;;		___lomod
  1618 ;;		_pad
  1619 ;; This function is called by:
  1620 ;;		_vfpfcnvrt
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text4
  1625  000B60                     __ptext4:
  1626                           	opt callstack 0
  1627  000B60                     _utoa:
  1628                           	opt callstack 16
  1629  000B60                     
  1630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1631  000B60  BE51               	btfsc	(_prec+1)^0,7,c
  1632  000B62  EFB5  F005         	goto	u2041
  1633  000B66  EFB7  F005         	goto	u2040
  1634  000B6A                     u2041:
  1635  000B6A  EFB8  F005         	goto	l2937
  1636  000B6E                     u2040:
  1637  000B6E                     
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1639  000B6E  9252               	bcf	_flags^0,1,c
  1640  000B70                     l2937:
  1641                           
  1642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1643  000B70  BE51               	btfsc	(_prec+1)^0,7,c
  1644  000B72  EFC5  F005         	goto	u2050
  1645  000B76  5051               	movf	(_prec+1)^0,w,c
  1646  000B78  E106               	bnz	u2051
  1647  000B7A  0450               	decf	_prec^0,w,c
  1648  000B7C  B0D8               	btfsc	status,0,c
  1649  000B7E  EFC3  F005         	goto	u2051
  1650  000B82  EFC5  F005         	goto	u2050
  1651  000B86                     u2051:
  1652  000B86  EFCB  F005         	goto	l366
  1653  000B8A                     u2050:
  1654  000B8A  0E00               	movlw	0
  1655  000B8C  6E37               	movwf	(utoa@p+1)^0,c
  1656  000B8E  0E01               	movlw	1
  1657  000B90  6E36               	movwf	utoa@p^0,c
  1658  000B92  EFCF  F005         	goto	l368
  1659  000B96                     l366:
  1660  000B96  C050  F036         	movff	_prec,utoa@p
  1661  000B9A  C051  F037         	movff	_prec+1,utoa@p+1
  1662  000B9E                     l368:
  1663                           
  1664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1665  000B9E  C04E  F038         	movff	_width,utoa@w
  1666  000BA2  C04F  F039         	movff	_width+1,utoa@w+1
  1667                           
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1669  000BA6  C026  F03A         	movff	utoa@d,utoa@n
  1670  000BAA  C027  F03B         	movff	utoa@d+1,utoa@n+1
  1671  000BAE  C028  F03C         	movff	utoa@d+2,utoa@n+2
  1672  000BB2  C029  F03D         	movff	utoa@d+3,utoa@n+3
  1673  000BB6  C02A  F03E         	movff	utoa@d+4,utoa@n+4
  1674  000BBA  C02B  F03F         	movff	utoa@d+5,utoa@n+5
  1675  000BBE  C02C  F040         	movff	utoa@d+6,utoa@n+6
  1676  000BC2  C02D  F041         	movff	utoa@d+7,utoa@n+7
  1677  000BC6                     
  1678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1679  000BC6  0E00               	movlw	0
  1680  000BC8  6E43               	movwf	(utoa@i+1)^0,c
  1681  000BCA  0E1F               	movlw	31
  1682  000BCC  6E42               	movwf	utoa@i^0,c
  1683  000BCE                     
  1684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1685  000BCE  0E00               	movlw	0
  1686  000BD0  0100               	movlb	0	; () banked
  1687  000BD2  6F93               	movwf	(_dbuf+31)& (0+255),b
  1688                           
  1689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1690  000BD4  EF62  F006         	goto	l2955
  1691  000BD8                     l2945:
  1692                           
  1693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1694  000BD8  0642               	decf	utoa@i^0,f,c
  1695  000BDA  A0D8               	btfss	status,0,c
  1696  000BDC  0643               	decf	(utoa@i+1)^0,f,c
  1697  000BDE                     
  1698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1699  000BDE  0E74               	movlw	low _dbuf
  1700  000BE0  2442               	addwf	utoa@i^0,w,c
  1701  000BE2  6ED9               	movwf	fsr2l,c
  1702  000BE4  0E00               	movlw	high _dbuf
  1703  000BE6  2043               	addwfc	(utoa@i+1)^0,w,c
  1704  000BE8  6EDA               	movwf	fsr2h,c
  1705  000BEA  C03A  F009         	movff	utoa@n,___lomod@dividend
  1706  000BEE  C03B  F00A         	movff	utoa@n+1,___lomod@dividend+1
  1707  000BF2  C03C  F00B         	movff	utoa@n+2,___lomod@dividend+2
  1708  000BF6  C03D  F00C         	movff	utoa@n+3,___lomod@dividend+3
  1709  000BFA  C03E  F00D         	movff	utoa@n+4,___lomod@dividend+4
  1710  000BFE  C03F  F00E         	movff	utoa@n+5,___lomod@dividend+5
  1711  000C02  C040  F00F         	movff	utoa@n+6,___lomod@dividend+6
  1712  000C06  C041  F010         	movff	utoa@n+7,___lomod@dividend+7
  1713  000C0A  0E0A               	movlw	10
  1714  000C0C  6E11               	movwf	___lomod@divisor^0,c
  1715  000C0E  0E00               	movlw	0
  1716  000C10  6E12               	movwf	(___lomod@divisor+1)^0,c
  1717  000C12  0E00               	movlw	0
  1718  000C14  6E13               	movwf	(___lomod@divisor+2)^0,c
  1719  000C16  0E00               	movlw	0
  1720  000C18  6E14               	movwf	(___lomod@divisor+3)^0,c
  1721  000C1A  0E00               	movlw	0
  1722  000C1C  6E15               	movwf	(___lomod@divisor+4)^0,c
  1723  000C1E  0E00               	movlw	0
  1724  000C20  6E16               	movwf	(___lomod@divisor+5)^0,c
  1725  000C22  0E00               	movlw	0
  1726  000C24  6E17               	movwf	(___lomod@divisor+6)^0,c
  1727  000C26  0E00               	movlw	0
  1728  000C28  6E18               	movwf	(___lomod@divisor+7)^0,c
  1729  000C2A  ECB6  F009         	call	___lomod	;wreg free
  1730  000C2E  C009  F02E         	movff	?___lomod,??_utoa
  1731  000C32  C00A  F02F         	movff	?___lomod+1,??_utoa+1
  1732  000C36  C00B  F030         	movff	?___lomod+2,??_utoa+2
  1733  000C3A  C00C  F031         	movff	?___lomod+3,??_utoa+3
  1734  000C3E  C00D  F032         	movff	?___lomod+4,??_utoa+4
  1735  000C42  C00E  F033         	movff	?___lomod+5,??_utoa+5
  1736  000C46  C00F  F034         	movff	?___lomod+6,??_utoa+6
  1737  000C4A  C010  F035         	movff	?___lomod+7,??_utoa+7
  1738  000C4E  502E               	movf	??_utoa^0,w,c
  1739  000C50  0F30               	addlw	48
  1740  000C52  6EDF               	movwf	indf2,c
  1741  000C54                     
  1742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1743  000C54  0636               	decf	utoa@p^0,f,c
  1744  000C56  A0D8               	btfss	status,0,c
  1745  000C58  0637               	decf	(utoa@p+1)^0,f,c
  1746  000C5A                     
  1747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1748  000C5A  0638               	decf	utoa@w^0,f,c
  1749  000C5C  A0D8               	btfss	status,0,c
  1750  000C5E  0639               	decf	(utoa@w+1)^0,f,c
  1751  000C60                     
  1752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1753  000C60  C03A  F009         	movff	utoa@n,___lodiv@dividend
  1754  000C64  C03B  F00A         	movff	utoa@n+1,___lodiv@dividend+1
  1755  000C68  C03C  F00B         	movff	utoa@n+2,___lodiv@dividend+2
  1756  000C6C  C03D  F00C         	movff	utoa@n+3,___lodiv@dividend+3
  1757  000C70  C03E  F00D         	movff	utoa@n+4,___lodiv@dividend+4
  1758  000C74  C03F  F00E         	movff	utoa@n+5,___lodiv@dividend+5
  1759  000C78  C040  F00F         	movff	utoa@n+6,___lodiv@dividend+6
  1760  000C7C  C041  F010         	movff	utoa@n+7,___lodiv@dividend+7
  1761  000C80  0E0A               	movlw	10
  1762  000C82  6E11               	movwf	___lodiv@divisor^0,c
  1763  000C84  0E00               	movlw	0
  1764  000C86  6E12               	movwf	(___lodiv@divisor+1)^0,c
  1765  000C88  0E00               	movlw	0
  1766  000C8A  6E13               	movwf	(___lodiv@divisor+2)^0,c
  1767  000C8C  0E00               	movlw	0
  1768  000C8E  6E14               	movwf	(___lodiv@divisor+3)^0,c
  1769  000C90  0E00               	movlw	0
  1770  000C92  6E15               	movwf	(___lodiv@divisor+4)^0,c
  1771  000C94  0E00               	movlw	0
  1772  000C96  6E16               	movwf	(___lodiv@divisor+5)^0,c
  1773  000C98  0E00               	movlw	0
  1774  000C9A  6E17               	movwf	(___lodiv@divisor+6)^0,c
  1775  000C9C  0E00               	movlw	0
  1776  000C9E  6E18               	movwf	(___lodiv@divisor+7)^0,c
  1777  000CA0  EC3E  F009         	call	___lodiv	;wreg free
  1778  000CA4  C009  F03A         	movff	?___lodiv,utoa@n
  1779  000CA8  C00A  F03B         	movff	?___lodiv+1,utoa@n+1
  1780  000CAC  C00B  F03C         	movff	?___lodiv+2,utoa@n+2
  1781  000CB0  C00C  F03D         	movff	?___lodiv+3,utoa@n+3
  1782  000CB4  C00D  F03E         	movff	?___lodiv+4,utoa@n+4
  1783  000CB8  C00E  F03F         	movff	?___lodiv+5,utoa@n+5
  1784  000CBC  C00F  F040         	movff	?___lodiv+6,utoa@n+6
  1785  000CC0  C010  F041         	movff	?___lodiv+7,utoa@n+7
  1786  000CC4                     l2955:
  1787                           
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1789  000CC4  5042               	movf	utoa@i^0,w,c
  1790  000CC6  1043               	iorwf	(utoa@i+1)^0,w,c
  1791  000CC8  B4D8               	btfsc	status,2,c
  1792  000CCA  EF69  F006         	goto	u2061
  1793  000CCE  EF6B  F006         	goto	u2060
  1794  000CD2                     u2061:
  1795  000CD2  EF9B  F006         	goto	l2965
  1796  000CD6                     u2060:
  1797  000CD6  503A               	movf	utoa@n^0,w,c
  1798  000CD8  103B               	iorwf	(utoa@n+1)^0,w,c
  1799  000CDA  103C               	iorwf	(utoa@n+2)^0,w,c
  1800  000CDC  103D               	iorwf	(utoa@n+3)^0,w,c
  1801  000CDE  103E               	iorwf	(utoa@n+4)^0,w,c
  1802  000CE0  103F               	iorwf	(utoa@n+5)^0,w,c
  1803  000CE2  1040               	iorwf	(utoa@n+6)^0,w,c
  1804  000CE4  1041               	iorwf	(utoa@n+7)^0,w,c
  1805  000CE6  A4D8               	btfss	status,2,c
  1806  000CE8  EF78  F006         	goto	u2071
  1807  000CEC  EF7A  F006         	goto	u2070
  1808  000CF0                     u2071:
  1809  000CF0  EFEC  F005         	goto	l2945
  1810  000CF4                     u2070:
  1811  000CF4  BE37               	btfsc	(utoa@p+1)^0,7,c
  1812  000CF6  EF87  F006         	goto	u2080
  1813  000CFA  5037               	movf	(utoa@p+1)^0,w,c
  1814  000CFC  E106               	bnz	u2081
  1815  000CFE  0436               	decf	utoa@p^0,w,c
  1816  000D00  B0D8               	btfsc	status,0,c
  1817  000D02  EF85  F006         	goto	u2081
  1818  000D06  EF87  F006         	goto	u2080
  1819  000D0A                     u2081:
  1820  000D0A  EFEC  F005         	goto	l2945
  1821  000D0E                     u2080:
  1822  000D0E  BE39               	btfsc	(utoa@w+1)^0,7,c
  1823  000D10  EF92  F006         	goto	u2091
  1824  000D14  5039               	movf	(utoa@w+1)^0,w,c
  1825  000D16  E108               	bnz	u2090
  1826  000D18  0438               	decf	utoa@w^0,w,c
  1827  000D1A  A0D8               	btfss	status,0,c
  1828  000D1C  EF92  F006         	goto	u2091
  1829  000D20  EF94  F006         	goto	u2090
  1830  000D24                     u2091:
  1831  000D24  EF9B  F006         	goto	l2965
  1832  000D28                     u2090:
  1833  000D28  B252               	btfsc	_flags^0,1,c
  1834  000D2A  EF99  F006         	goto	u2101
  1835  000D2E  EF9B  F006         	goto	u2100
  1836  000D32                     u2101:
  1837  000D32  EFEC  F005         	goto	l2945
  1838  000D36                     u2100:
  1839  000D36                     l2965:
  1840                           
  1841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1842  000D36  C024  F019         	movff	utoa@fp,pad@fp
  1843  000D3A  C025  F01A         	movff	utoa@fp+1,pad@fp+1
  1844  000D3E  0E74               	movlw	low _dbuf
  1845  000D40  2442               	addwf	utoa@i^0,w,c
  1846  000D42  6E1B               	movwf	pad@buf^0,c
  1847  000D44  0E00               	movlw	high _dbuf
  1848  000D46  2043               	addwfc	(utoa@i+1)^0,w,c
  1849  000D48  6E1C               	movwf	(pad@buf+1)^0,c
  1850  000D4A  C038  F01D         	movff	utoa@w,pad@p
  1851  000D4E  C039  F01E         	movff	utoa@w+1,pad@p+1
  1852  000D52  EC83  F00A         	call	_pad	;wreg free
  1853  000D56  C019  F024         	movff	?_pad,?_utoa
  1854  000D5A  C01A  F025         	movff	?_pad+1,?_utoa+1
  1855  000D5E  0012               	return		;funcret
  1856  000D60                     __end_of_utoa:
  1857                           	opt callstack 0
  1858                           
  1859 ;; *************** function _pad *****************
  1860 ;; Defined at:
  1861 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  1864 ;;		 -> sprintf@f(6), 
  1865 ;;  buf             2   26[COMRAM] PTR unsigned char 
  1866 ;;		 -> dbuf(32), 
  1867 ;;  p               2   28[COMRAM] int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  w               2   33[COMRAM] int 
  1870 ;;  i               2   31[COMRAM] int 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2   24[COMRAM] int 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1880 ;;      Params:         6       0       0       0       0       0       0       0       0
  1881 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1882 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1883 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1884 ;;Total ram usage:       11 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:   10
  1887 ;; This function calls:
  1888 ;;		_fputc
  1889 ;;		_fputs
  1890 ;;		_strlen
  1891 ;; This function is called by:
  1892 ;;		_utoa
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text5
  1897  001506                     __ptext5:
  1898                           	opt callstack 0
  1899  001506                     _pad:
  1900                           	opt callstack 16
  1901  001506                     
  1902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1903  001506  A052               	btfss	_flags^0,0,c
  1904  001508  EF88  F00A         	goto	u1891
  1905  00150C  EF8A  F00A         	goto	u1890
  1906  001510                     u1891:
  1907  001510  EF94  F00A         	goto	l2855
  1908  001514                     u1890:
  1909  001514                     
  1910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1911  001514  C01B  F012         	movff	pad@buf,fputs@s
  1912  001518  C01C  F013         	movff	pad@buf+1,fputs@s+1
  1913  00151C  C019  F014         	movff	pad@fp,fputs@fp
  1914  001520  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  1915  001524  ECCC  F00C         	call	_fputs	;wreg free
  1916  001528                     l2855:
  1917                           
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1919  001528  BE1E               	btfsc	(pad@p+1)^0,7,c
  1920  00152A  EF99  F00A         	goto	u1901
  1921  00152E  EF9B  F00A         	goto	u1900
  1922  001532                     u1901:
  1923  001532  EFA1  F00A         	goto	l2859
  1924  001536                     u1900:
  1925  001536  C01D  F022         	movff	pad@p,pad@w
  1926  00153A  C01E  F023         	movff	pad@p+1,pad@w+1
  1927  00153E  EFA5  F00A         	goto	l356
  1928  001542                     l2859:
  1929  001542  0E00               	movlw	0
  1930  001544  6E23               	movwf	(pad@w+1)^0,c
  1931  001546  0E00               	movlw	0
  1932  001548  6E22               	movwf	pad@w^0,c
  1933  00154A                     l356:
  1934                           
  1935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1936  00154A  0E00               	movlw	0
  1937  00154C  6E21               	movwf	(pad@i+1)^0,c
  1938  00154E  0E00               	movlw	0
  1939  001550  6E20               	movwf	pad@i^0,c
  1940                           
  1941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1942  001552  EFB7  F00A         	goto	l2865
  1943  001556                     l2861:
  1944                           
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1946  001556  0E00               	movlw	0
  1947  001558  6E0A               	movwf	(fputc@c+1)^0,c
  1948  00155A  0E20               	movlw	32
  1949  00155C  6E09               	movwf	fputc@c^0,c
  1950  00155E  C019  F00B         	movff	pad@fp,fputc@fp
  1951  001562  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  1952  001566  EC1E  F00A         	call	_fputc	;wreg free
  1953  00156A                     
  1954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1955  00156A  4A20               	infsnz	pad@i^0,f,c
  1956  00156C  2A21               	incf	(pad@i+1)^0,f,c
  1957  00156E                     l2865:
  1958                           
  1959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1960  00156E  5022               	movf	pad@w^0,w,c
  1961  001570  5C20               	subwf	pad@i^0,w,c
  1962  001572  5021               	movf	(pad@i+1)^0,w,c
  1963  001574  0A80               	xorlw	128
  1964  001576  6E1F               	movwf	??_pad^0,c
  1965  001578  5023               	movf	(pad@w+1)^0,w,c
  1966  00157A  0A80               	xorlw	128
  1967  00157C  581F               	subwfb	??_pad^0,w,c
  1968  00157E  A0D8               	btfss	status,0,c
  1969  001580  EFC4  F00A         	goto	u1911
  1970  001584  EFC6  F00A         	goto	u1910
  1971  001588                     u1911:
  1972  001588  EFAB  F00A         	goto	l2861
  1973  00158C                     u1910:
  1974  00158C                     
  1975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1976  00158C  B052               	btfsc	_flags^0,0,c
  1977  00158E  EFCB  F00A         	goto	u1921
  1978  001592  EFCD  F00A         	goto	u1920
  1979  001596                     u1921:
  1980  001596  EFD7  F00A         	goto	l2869
  1981  00159A                     u1920:
  1982  00159A                     
  1983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1984  00159A  C01B  F012         	movff	pad@buf,fputs@s
  1985  00159E  C01C  F013         	movff	pad@buf+1,fputs@s+1
  1986  0015A2  C019  F014         	movff	pad@fp,fputs@fp
  1987  0015A6  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  1988  0015AA  ECCC  F00C         	call	_fputs	;wreg free
  1989  0015AE                     l2869:
  1990                           
  1991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1992  0015AE  C01B  F009         	movff	pad@buf,strlen@s
  1993  0015B2  C01C  F00A         	movff	pad@buf+1,strlen@s+1
  1994  0015B6  EC48  F00D         	call	_strlen	;wreg free
  1995  0015BA  5022               	movf	pad@w^0,w,c
  1996  0015BC  2409               	addwf	?_strlen^0,w,c
  1997  0015BE  6E19               	movwf	?_pad^0,c
  1998  0015C0  5023               	movf	(pad@w+1)^0,w,c
  1999  0015C2  200A               	addwfc	(?_strlen+1)^0,w,c
  2000  0015C4  6E1A               	movwf	(?_pad+1)^0,c
  2001  0015C6  0012               	return		;funcret
  2002  0015C8                     __end_of_pad:
  2003                           	opt callstack 0
  2004                           
  2005 ;; *************** function _strlen *****************
  2006 ;; Defined at:
  2007 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2010 ;;		 -> dbuf(32), 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  a               2   10[COMRAM] PTR const unsigned char 
  2013 ;;		 -> dbuf(32), 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  2    8[COMRAM] unsigned int 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2023 ;;      Params:         2       0       0       0       0       0       0       0       0
  2024 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2026 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2027 ;;Total ram usage:        4 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    7
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_pad
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text6
  2038  001A90                     __ptext6:
  2039                           	opt callstack 0
  2040  001A90                     _strlen:
  2041                           	opt callstack 18
  2042  001A90  C009  F00B         	movff	strlen@s,strlen@a
  2043  001A94  C00A  F00C         	movff	strlen@s+1,strlen@a+1
  2044  001A98  EF50  F00D         	goto	l2845
  2045  001A9C                     l2843:
  2046  001A9C  4A09               	infsnz	strlen@s^0,f,c
  2047  001A9E  2A0A               	incf	(strlen@s+1)^0,f,c
  2048  001AA0                     l2845:
  2049  001AA0  C009  FFD9         	movff	strlen@s,fsr2l
  2050  001AA4  C00A  FFDA         	movff	strlen@s+1,fsr2h
  2051  001AA8  50DF               	movf	indf2,w,c
  2052  001AAA  A4D8               	btfss	status,2,c
  2053  001AAC  EF5A  F00D         	goto	u1881
  2054  001AB0  EF5C  F00D         	goto	u1880
  2055  001AB4                     u1881:
  2056  001AB4  EF4E  F00D         	goto	l2843
  2057  001AB8                     u1880:
  2058  001AB8  500B               	movf	strlen@a^0,w,c
  2059  001ABA  5C09               	subwf	strlen@s^0,w,c
  2060  001ABC  6E09               	movwf	?_strlen^0,c
  2061  001ABE  500C               	movf	(strlen@a+1)^0,w,c
  2062  001AC0  580A               	subwfb	(strlen@s+1)^0,w,c
  2063  001AC2  6E0A               	movwf	(?_strlen+1)^0,c
  2064  001AC4  0012               	return		;funcret
  2065  001AC6                     __end_of_strlen:
  2066                           	opt callstack 0
  2067                           
  2068 ;; *************** function _fputs *****************
  2069 ;; Defined at:
  2070 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  s               2   17[COMRAM] PTR const unsigned char 
  2073 ;;		 -> dbuf(32), 
  2074 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2075 ;;		 -> sprintf@f(6), 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  i               2   22[COMRAM] int 
  2078 ;;  c               1   21[COMRAM] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2   17[COMRAM] int 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2088 ;;      Params:         4       0       0       0       0       0       0       0       0
  2089 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2091 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2092 ;;Total ram usage:        7 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    9
  2095 ;; This function calls:
  2096 ;;		_fputc
  2097 ;; This function is called by:
  2098 ;;		_pad
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text7
  2103  001998                     __ptext7:
  2104                           	opt callstack 0
  2105  001998                     _fputs:
  2106                           	opt callstack 16
  2107  001998  0E00               	movlw	0
  2108  00199A  6E18               	movwf	(fputs@i+1)^0,c
  2109  00199C  0E00               	movlw	0
  2110  00199E  6E17               	movwf	fputs@i^0,c
  2111  0019A0  EFDD  F00C         	goto	l2839
  2112  0019A4                     l2835:
  2113  0019A4  C016  F009         	movff	fputs@c,fputc@c
  2114  0019A8  6A0A               	clrf	(fputc@c+1)^0,c
  2115  0019AA  C014  F00B         	movff	fputs@fp,fputc@fp
  2116  0019AE  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  2117  0019B2  EC1E  F00A         	call	_fputc	;wreg free
  2118  0019B6  4A17               	infsnz	fputs@i^0,f,c
  2119  0019B8  2A18               	incf	(fputs@i+1)^0,f,c
  2120  0019BA                     l2839:
  2121  0019BA  5017               	movf	fputs@i^0,w,c
  2122  0019BC  2412               	addwf	fputs@s^0,w,c
  2123  0019BE  6ED9               	movwf	fsr2l,c
  2124  0019C0  5018               	movf	(fputs@i+1)^0,w,c
  2125  0019C2  2013               	addwfc	(fputs@s+1)^0,w,c
  2126  0019C4  6EDA               	movwf	fsr2h,c
  2127  0019C6  50DF               	movf	indf2,w,c
  2128  0019C8  6E16               	movwf	fputs@c^0,c
  2129  0019CA  5016               	movf	fputs@c^0,w,c
  2130  0019CC  A4D8               	btfss	status,2,c
  2131  0019CE  EFEB  F00C         	goto	u1871
  2132  0019D2  EFED  F00C         	goto	u1870
  2133  0019D6                     u1871:
  2134  0019D6  EFD2  F00C         	goto	l2835
  2135  0019DA                     u1870:
  2136  0019DA  0012               	return		;funcret
  2137  0019DC                     __end_of_fputs:
  2138                           	opt callstack 0
  2139                           
  2140 ;; *************** function _fputc *****************
  2141 ;; Defined at:
  2142 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  c               2    8[COMRAM] int 
  2145 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2146 ;;		 -> sprintf@f(6), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  2    8[COMRAM] int 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2158 ;;      Params:         4       0       0       0       0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2160 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2161 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2162 ;;Total ram usage:        9 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    8
  2165 ;; This function calls:
  2166 ;;		_putch
  2167 ;; This function is called by:
  2168 ;;		_pad
  2169 ;;		_vfpfcnvrt
  2170 ;;		_fputs
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text8
  2175  00143C                     __ptext8:
  2176                           	opt callstack 0
  2177  00143C                     _fputc:
  2178                           	opt callstack 16
  2179  00143C  500B               	movf	fputc@fp^0,w,c
  2180  00143E  100C               	iorwf	(fputc@fp+1)^0,w,c
  2181  001440  B4D8               	btfsc	status,2,c
  2182  001442  EF25  F00A         	goto	u1831
  2183  001446  EF27  F00A         	goto	u1830
  2184  00144A                     u1831:
  2185  00144A  EF30  F00A         	goto	l2823
  2186  00144E                     u1830:
  2187  00144E  500B               	movf	fputc@fp^0,w,c
  2188  001450  100C               	iorwf	(fputc@fp+1)^0,w,c
  2189  001452  A4D8               	btfss	status,2,c
  2190  001454  EF2E  F00A         	goto	u1841
  2191  001458  EF30  F00A         	goto	u1840
  2192  00145C                     u1841:
  2193  00145C  EF35  F00A         	goto	l2825
  2194  001460                     u1840:
  2195  001460                     l2823:
  2196  001460  5009               	movf	fputc@c^0,w,c
  2197  001462  EC43  F00E         	call	_putch
  2198  001466  EF82  F00A         	goto	l1141
  2199  00146A                     l2825:
  2200  00146A  EE20 F004          	lfsr	2,4
  2201  00146E  500B               	movf	fputc@fp^0,w,c
  2202  001470  26D9               	addwf	fsr2l,f,c
  2203  001472  500C               	movf	(fputc@fp+1)^0,w,c
  2204  001474  22DA               	addwfc	fsr2h,f,c
  2205  001476  50DE               	movf	postinc2,w,c
  2206  001478  10DE               	iorwf	postinc2,w,c
  2207  00147A  B4D8               	btfsc	status,2,c
  2208  00147C  EF42  F00A         	goto	u1851
  2209  001480  EF44  F00A         	goto	u1850
  2210  001484                     u1851:
  2211  001484  EF5F  F00A         	goto	l2829
  2212  001488                     u1850:
  2213  001488  EE20 F004          	lfsr	2,4
  2214  00148C  500B               	movf	fputc@fp^0,w,c
  2215  00148E  26D9               	addwf	fsr2l,f,c
  2216  001490  500C               	movf	(fputc@fp+1)^0,w,c
  2217  001492  22DA               	addwfc	fsr2h,f,c
  2218  001494  EE10 F002          	lfsr	1,2
  2219  001498  500B               	movf	fputc@fp^0,w,c
  2220  00149A  26E1               	addwf	fsr1l,f,c
  2221  00149C  500C               	movf	(fputc@fp+1)^0,w,c
  2222  00149E  22E2               	addwfc	fsr1h,f,c
  2223  0014A0  50DE               	movf	postinc2,w,c
  2224  0014A2  5CE6               	subwf	postinc1,w,c
  2225  0014A4  50E6               	movf	postinc1,w,c
  2226  0014A6  0A80               	xorlw	128
  2227  0014A8  6E11               	movwf	(??_fputc+4)^0,c
  2228  0014AA  50DE               	movf	postinc2,w,c
  2229  0014AC  0A80               	xorlw	128
  2230  0014AE  5811               	subwfb	(??_fputc+4)^0,w,c
  2231  0014B0  B0D8               	btfsc	status,0,c
  2232  0014B2  EF5D  F00A         	goto	u1861
  2233  0014B6  EF5F  F00A         	goto	u1860
  2234  0014BA                     u1861:
  2235  0014BA  EF82  F00A         	goto	l1141
  2236  0014BE                     u1860:
  2237  0014BE                     l2829:
  2238  0014BE  EE20 F002          	lfsr	2,2
  2239  0014C2  500B               	movf	fputc@fp^0,w,c
  2240  0014C4  26D9               	addwf	fsr2l,f,c
  2241  0014C6  500C               	movf	(fputc@fp+1)^0,w,c
  2242  0014C8  22DA               	addwfc	fsr2h,f,c
  2243  0014CA  CFDE F00D          	movff	postinc2,??_fputc
  2244  0014CE  CFDD F00E          	movff	postdec2,??_fputc+1
  2245  0014D2  C00B  FFD9         	movff	fputc@fp,fsr2l
  2246  0014D6  C00C  FFDA         	movff	fputc@fp+1,fsr2h
  2247  0014DA  CFDE F00F          	movff	postinc2,??_fputc+2
  2248  0014DE  CFDD F010          	movff	postdec2,??_fputc+3
  2249  0014E2  500D               	movf	??_fputc^0,w,c
  2250  0014E4  240F               	addwf	(??_fputc+2)^0,w,c
  2251  0014E6  6ED9               	movwf	fsr2l,c
  2252  0014E8  500E               	movf	(??_fputc+1)^0,w,c
  2253  0014EA  2010               	addwfc	(??_fputc+3)^0,w,c
  2254  0014EC  6EDA               	movwf	fsr2h,c
  2255  0014EE  C009  FFDF         	movff	fputc@c,indf2
  2256  0014F2  EE20 F002          	lfsr	2,2
  2257  0014F6  500B               	movf	fputc@fp^0,w,c
  2258  0014F8  26D9               	addwf	fsr2l,f,c
  2259  0014FA  500C               	movf	(fputc@fp+1)^0,w,c
  2260  0014FC  22DA               	addwfc	fsr2h,f,c
  2261  0014FE  2ADE               	incf	postinc2,f,c
  2262  001500  0E00               	movlw	0
  2263  001502  22DD               	addwfc	postdec2,f,c
  2264  001504                     l1141:
  2265  001504  0012               	return		;funcret
  2266  001506                     __end_of_fputc:
  2267                           	opt callstack 0
  2268                           
  2269 ;; *************** function _putch *****************
  2270 ;; Defined at:
  2271 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  c               1    wreg     unsigned char 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  c               1    0[COMRAM] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2289 ;;Total ram usage:        0 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    7
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_fputc
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text9
  2300  001C86                     __ptext9:
  2301                           	opt callstack 0
  2302  001C86                     _putch:
  2303                           	opt callstack 16
  2304  001C86  0012               	return		;funcret
  2305  001C88                     __end_of_putch:
  2306                           	opt callstack 0
  2307                           
  2308 ;; *************** function ___lomod *****************
  2309 ;; Defined at:
  2310 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  dividend        8    8[COMRAM] unsigned long long 
  2313 ;;  divisor         8   16[COMRAM] unsigned long long 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  counter         1   24[COMRAM] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  8    8[COMRAM] unsigned long long 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2325 ;;      Params:        16       0       0       0       0       0       0       0       0
  2326 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2328 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2329 ;;Total ram usage:       17 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    7
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_utoa
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text10
  2340  00136C                     __ptext10:
  2341                           	opt callstack 0
  2342  00136C                     ___lomod:
  2343                           	opt callstack 19
  2344  00136C  5011               	movf	___lomod@divisor^0,w,c
  2345  00136E  1012               	iorwf	(___lomod@divisor+1)^0,w,c
  2346  001370  1013               	iorwf	(___lomod@divisor+2)^0,w,c
  2347  001372  1014               	iorwf	(___lomod@divisor+3)^0,w,c
  2348  001374  1015               	iorwf	(___lomod@divisor+4)^0,w,c
  2349  001376  1016               	iorwf	(___lomod@divisor+5)^0,w,c
  2350  001378  1017               	iorwf	(___lomod@divisor+6)^0,w,c
  2351  00137A  1018               	iorwf	(___lomod@divisor+7)^0,w,c
  2352  00137C  B4D8               	btfsc	status,2,c
  2353  00137E  EFC3  F009         	goto	u1991
  2354  001382  EFC5  F009         	goto	u1990
  2355  001386                     u1991:
  2356  001386  EF0D  F00A         	goto	l861
  2357  00138A                     u1990:
  2358  00138A  0E01               	movlw	1
  2359  00138C  6E19               	movwf	___lomod@counter^0,c
  2360  00138E  EFD3  F009         	goto	l2911
  2361  001392                     l2909:
  2362  001392  90D8               	bcf	status,0,c
  2363  001394  3611               	rlcf	___lomod@divisor^0,f,c
  2364  001396  3612               	rlcf	(___lomod@divisor+1)^0,f,c
  2365  001398  3613               	rlcf	(___lomod@divisor+2)^0,f,c
  2366  00139A  3614               	rlcf	(___lomod@divisor+3)^0,f,c
  2367  00139C  3615               	rlcf	(___lomod@divisor+4)^0,f,c
  2368  00139E  3616               	rlcf	(___lomod@divisor+5)^0,f,c
  2369  0013A0  3617               	rlcf	(___lomod@divisor+6)^0,f,c
  2370  0013A2  3618               	rlcf	(___lomod@divisor+7)^0,f,c
  2371  0013A4  2A19               	incf	___lomod@counter^0,f,c
  2372  0013A6                     l2911:
  2373  0013A6  AE18               	btfss	(___lomod@divisor+7)^0,7,c
  2374  0013A8  EFD8  F009         	goto	u2001
  2375  0013AC  EFDA  F009         	goto	u2000
  2376  0013B0                     u2001:
  2377  0013B0  EFC9  F009         	goto	l2909
  2378  0013B4                     u2000:
  2379  0013B4                     l2913:
  2380  0013B4  5011               	movf	___lomod@divisor^0,w,c
  2381  0013B6  5C09               	subwf	___lomod@dividend^0,w,c
  2382  0013B8  5012               	movf	(___lomod@divisor+1)^0,w,c
  2383  0013BA  580A               	subwfb	(___lomod@dividend+1)^0,w,c
  2384  0013BC  5013               	movf	(___lomod@divisor+2)^0,w,c
  2385  0013BE  580B               	subwfb	(___lomod@dividend+2)^0,w,c
  2386  0013C0  5014               	movf	(___lomod@divisor+3)^0,w,c
  2387  0013C2  580C               	subwfb	(___lomod@dividend+3)^0,w,c
  2388  0013C4  5015               	movf	(___lomod@divisor+4)^0,w,c
  2389  0013C6  580D               	subwfb	(___lomod@dividend+4)^0,w,c
  2390  0013C8  5016               	movf	(___lomod@divisor+5)^0,w,c
  2391  0013CA  580E               	subwfb	(___lomod@dividend+5)^0,w,c
  2392  0013CC  5017               	movf	(___lomod@divisor+6)^0,w,c
  2393  0013CE  580F               	subwfb	(___lomod@dividend+6)^0,w,c
  2394  0013D0  5018               	movf	(___lomod@divisor+7)^0,w,c
  2395  0013D2  5810               	subwfb	(___lomod@dividend+7)^0,w,c
  2396  0013D4  A0D8               	btfss	status,0,c
  2397  0013D6  EFEF  F009         	goto	u2011
  2398  0013DA  EFF1  F009         	goto	u2010
  2399  0013DE                     u2011:
  2400  0013DE  EF01  F00A         	goto	l2917
  2401  0013E2                     u2010:
  2402  0013E2  5011               	movf	___lomod@divisor^0,w,c
  2403  0013E4  5E09               	subwf	___lomod@dividend^0,f,c
  2404  0013E6  5012               	movf	(___lomod@divisor+1)^0,w,c
  2405  0013E8  5A0A               	subwfb	(___lomod@dividend+1)^0,f,c
  2406  0013EA  5013               	movf	(___lomod@divisor+2)^0,w,c
  2407  0013EC  5A0B               	subwfb	(___lomod@dividend+2)^0,f,c
  2408  0013EE  5014               	movf	(___lomod@divisor+3)^0,w,c
  2409  0013F0  5A0C               	subwfb	(___lomod@dividend+3)^0,f,c
  2410  0013F2  5015               	movf	(___lomod@divisor+4)^0,w,c
  2411  0013F4  5A0D               	subwfb	(___lomod@dividend+4)^0,f,c
  2412  0013F6  5016               	movf	(___lomod@divisor+5)^0,w,c
  2413  0013F8  5A0E               	subwfb	(___lomod@dividend+5)^0,f,c
  2414  0013FA  5017               	movf	(___lomod@divisor+6)^0,w,c
  2415  0013FC  5A0F               	subwfb	(___lomod@dividend+6)^0,f,c
  2416  0013FE  5018               	movf	(___lomod@divisor+7)^0,w,c
  2417  001400  5A10               	subwfb	(___lomod@dividend+7)^0,f,c
  2418  001402                     l2917:
  2419  001402  90D8               	bcf	status,0,c
  2420  001404  3218               	rrcf	(___lomod@divisor+7)^0,f,c
  2421  001406  3217               	rrcf	(___lomod@divisor+6)^0,f,c
  2422  001408  3216               	rrcf	(___lomod@divisor+5)^0,f,c
  2423  00140A  3215               	rrcf	(___lomod@divisor+4)^0,f,c
  2424  00140C  3214               	rrcf	(___lomod@divisor+3)^0,f,c
  2425  00140E  3213               	rrcf	(___lomod@divisor+2)^0,f,c
  2426  001410  3212               	rrcf	(___lomod@divisor+1)^0,f,c
  2427  001412  3211               	rrcf	___lomod@divisor^0,f,c
  2428  001414  2E19               	decfsz	___lomod@counter^0,f,c
  2429  001416  EFDA  F009         	goto	l2913
  2430  00141A                     l861:
  2431  00141A  C009  F009         	movff	___lomod@dividend,?___lomod
  2432  00141E  C00A  F00A         	movff	___lomod@dividend+1,?___lomod+1
  2433  001422  C00B  F00B         	movff	___lomod@dividend+2,?___lomod+2
  2434  001426  C00C  F00C         	movff	___lomod@dividend+3,?___lomod+3
  2435  00142A  C00D  F00D         	movff	___lomod@dividend+4,?___lomod+4
  2436  00142E  C00E  F00E         	movff	___lomod@dividend+5,?___lomod+5
  2437  001432  C00F  F00F         	movff	___lomod@dividend+6,?___lomod+6
  2438  001436  C010  F010         	movff	___lomod@dividend+7,?___lomod+7
  2439  00143A  0012               	return		;funcret
  2440  00143C                     __end_of___lomod:
  2441                           	opt callstack 0
  2442                           
  2443 ;; *************** function ___lodiv *****************
  2444 ;; Defined at:
  2445 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  dividend        8    8[COMRAM] unsigned long long 
  2448 ;;  divisor         8   16[COMRAM] unsigned long long 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  quotient        8   24[COMRAM] unsigned long long 
  2451 ;;  counter         1   32[COMRAM] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  8    8[COMRAM] unsigned long long 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2461 ;;      Params:        16       0       0       0       0       0       0       0       0
  2462 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2464 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2465 ;;Total ram usage:       25 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    7
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_utoa
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text11
  2476  00127C                     __ptext11:
  2477                           	opt callstack 0
  2478  00127C                     ___lodiv:
  2479                           	opt callstack 19
  2480  00127C  EE20  F019         	lfsr	2,___lodiv@quotient
  2481  001280  0E07               	movlw	7
  2482  001282                     u1951:
  2483  001282  6ADE               	clrf	postinc2,c
  2484  001284  06E8               	decf	wreg,f,c
  2485  001286  E2FD               	bc	u1951
  2486  001288  5011               	movf	___lodiv@divisor^0,w,c
  2487  00128A  1012               	iorwf	(___lodiv@divisor+1)^0,w,c
  2488  00128C  1013               	iorwf	(___lodiv@divisor+2)^0,w,c
  2489  00128E  1014               	iorwf	(___lodiv@divisor+3)^0,w,c
  2490  001290  1015               	iorwf	(___lodiv@divisor+4)^0,w,c
  2491  001292  1016               	iorwf	(___lodiv@divisor+5)^0,w,c
  2492  001294  1017               	iorwf	(___lodiv@divisor+6)^0,w,c
  2493  001296  1018               	iorwf	(___lodiv@divisor+7)^0,w,c
  2494  001298  B4D8               	btfsc	status,2,c
  2495  00129A  EF51  F009         	goto	u1961
  2496  00129E  EF53  F009         	goto	u1960
  2497  0012A2                     u1961:
  2498  0012A2  EFA5  F009         	goto	l851
  2499  0012A6                     u1960:
  2500  0012A6  0E01               	movlw	1
  2501  0012A8  6E21               	movwf	___lodiv@counter^0,c
  2502  0012AA  EF61  F009         	goto	l2891
  2503  0012AE                     l2889:
  2504  0012AE  90D8               	bcf	status,0,c
  2505  0012B0  3611               	rlcf	___lodiv@divisor^0,f,c
  2506  0012B2  3612               	rlcf	(___lodiv@divisor+1)^0,f,c
  2507  0012B4  3613               	rlcf	(___lodiv@divisor+2)^0,f,c
  2508  0012B6  3614               	rlcf	(___lodiv@divisor+3)^0,f,c
  2509  0012B8  3615               	rlcf	(___lodiv@divisor+4)^0,f,c
  2510  0012BA  3616               	rlcf	(___lodiv@divisor+5)^0,f,c
  2511  0012BC  3617               	rlcf	(___lodiv@divisor+6)^0,f,c
  2512  0012BE  3618               	rlcf	(___lodiv@divisor+7)^0,f,c
  2513  0012C0  2A21               	incf	___lodiv@counter^0,f,c
  2514  0012C2                     l2891:
  2515  0012C2  AE18               	btfss	(___lodiv@divisor+7)^0,7,c
  2516  0012C4  EF66  F009         	goto	u1971
  2517  0012C8  EF68  F009         	goto	u1970
  2518  0012CC                     u1971:
  2519  0012CC  EF57  F009         	goto	l2889
  2520  0012D0                     u1970:
  2521  0012D0                     l2893:
  2522  0012D0  90D8               	bcf	status,0,c
  2523  0012D2  3619               	rlcf	___lodiv@quotient^0,f,c
  2524  0012D4  361A               	rlcf	(___lodiv@quotient+1)^0,f,c
  2525  0012D6  361B               	rlcf	(___lodiv@quotient+2)^0,f,c
  2526  0012D8  361C               	rlcf	(___lodiv@quotient+3)^0,f,c
  2527  0012DA  361D               	rlcf	(___lodiv@quotient+4)^0,f,c
  2528  0012DC  361E               	rlcf	(___lodiv@quotient+5)^0,f,c
  2529  0012DE  361F               	rlcf	(___lodiv@quotient+6)^0,f,c
  2530  0012E0  3620               	rlcf	(___lodiv@quotient+7)^0,f,c
  2531  0012E2  5011               	movf	___lodiv@divisor^0,w,c
  2532  0012E4  5C09               	subwf	___lodiv@dividend^0,w,c
  2533  0012E6  5012               	movf	(___lodiv@divisor+1)^0,w,c
  2534  0012E8  580A               	subwfb	(___lodiv@dividend+1)^0,w,c
  2535  0012EA  5013               	movf	(___lodiv@divisor+2)^0,w,c
  2536  0012EC  580B               	subwfb	(___lodiv@dividend+2)^0,w,c
  2537  0012EE  5014               	movf	(___lodiv@divisor+3)^0,w,c
  2538  0012F0  580C               	subwfb	(___lodiv@dividend+3)^0,w,c
  2539  0012F2  5015               	movf	(___lodiv@divisor+4)^0,w,c
  2540  0012F4  580D               	subwfb	(___lodiv@dividend+4)^0,w,c
  2541  0012F6  5016               	movf	(___lodiv@divisor+5)^0,w,c
  2542  0012F8  580E               	subwfb	(___lodiv@dividend+5)^0,w,c
  2543  0012FA  5017               	movf	(___lodiv@divisor+6)^0,w,c
  2544  0012FC  580F               	subwfb	(___lodiv@dividend+6)^0,w,c
  2545  0012FE  5018               	movf	(___lodiv@divisor+7)^0,w,c
  2546  001300  5810               	subwfb	(___lodiv@dividend+7)^0,w,c
  2547  001302  A0D8               	btfss	status,0,c
  2548  001304  EF86  F009         	goto	u1981
  2549  001308  EF88  F009         	goto	u1980
  2550  00130C                     u1981:
  2551  00130C  EF99  F009         	goto	l2901
  2552  001310                     u1980:
  2553  001310  5011               	movf	___lodiv@divisor^0,w,c
  2554  001312  5E09               	subwf	___lodiv@dividend^0,f,c
  2555  001314  5012               	movf	(___lodiv@divisor+1)^0,w,c
  2556  001316  5A0A               	subwfb	(___lodiv@dividend+1)^0,f,c
  2557  001318  5013               	movf	(___lodiv@divisor+2)^0,w,c
  2558  00131A  5A0B               	subwfb	(___lodiv@dividend+2)^0,f,c
  2559  00131C  5014               	movf	(___lodiv@divisor+3)^0,w,c
  2560  00131E  5A0C               	subwfb	(___lodiv@dividend+3)^0,f,c
  2561  001320  5015               	movf	(___lodiv@divisor+4)^0,w,c
  2562  001322  5A0D               	subwfb	(___lodiv@dividend+4)^0,f,c
  2563  001324  5016               	movf	(___lodiv@divisor+5)^0,w,c
  2564  001326  5A0E               	subwfb	(___lodiv@dividend+5)^0,f,c
  2565  001328  5017               	movf	(___lodiv@divisor+6)^0,w,c
  2566  00132A  5A0F               	subwfb	(___lodiv@dividend+6)^0,f,c
  2567  00132C  5018               	movf	(___lodiv@divisor+7)^0,w,c
  2568  00132E  5A10               	subwfb	(___lodiv@dividend+7)^0,f,c
  2569  001330  8019               	bsf	___lodiv@quotient^0,0,c
  2570  001332                     l2901:
  2571  001332  90D8               	bcf	status,0,c
  2572  001334  3218               	rrcf	(___lodiv@divisor+7)^0,f,c
  2573  001336  3217               	rrcf	(___lodiv@divisor+6)^0,f,c
  2574  001338  3216               	rrcf	(___lodiv@divisor+5)^0,f,c
  2575  00133A  3215               	rrcf	(___lodiv@divisor+4)^0,f,c
  2576  00133C  3214               	rrcf	(___lodiv@divisor+3)^0,f,c
  2577  00133E  3213               	rrcf	(___lodiv@divisor+2)^0,f,c
  2578  001340  3212               	rrcf	(___lodiv@divisor+1)^0,f,c
  2579  001342  3211               	rrcf	___lodiv@divisor^0,f,c
  2580  001344  2E21               	decfsz	___lodiv@counter^0,f,c
  2581  001346  EF68  F009         	goto	l2893
  2582  00134A                     l851:
  2583  00134A  C019  F009         	movff	___lodiv@quotient,?___lodiv
  2584  00134E  C01A  F00A         	movff	___lodiv@quotient+1,?___lodiv+1
  2585  001352  C01B  F00B         	movff	___lodiv@quotient+2,?___lodiv+2
  2586  001356  C01C  F00C         	movff	___lodiv@quotient+3,?___lodiv+3
  2587  00135A  C01D  F00D         	movff	___lodiv@quotient+4,?___lodiv+4
  2588  00135E  C01E  F00E         	movff	___lodiv@quotient+5,?___lodiv+5
  2589  001362  C01F  F00F         	movff	___lodiv@quotient+6,?___lodiv+6
  2590  001366  C020  F010         	movff	___lodiv@quotient+7,?___lodiv+7
  2591  00136A  0012               	return		;funcret
  2592  00136C                     __end_of___lodiv:
  2593                           	opt callstack 0
  2594                           
  2595 ;; *************** function _atoi *****************
  2596 ;; Defined at:
  2597 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2600 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  n               2   28[COMRAM] int 
  2603 ;;  neg             2   21[COMRAM] int 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2   15[COMRAM] int 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2613 ;;      Params:         2       0       0       0       0       0       0       0       0
  2614 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2615 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2616 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2617 ;;Total ram usage:       15 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    8
  2620 ;; This function calls:
  2621 ;;		___wmul
  2622 ;;		_isdigit
  2623 ;;		_isspace
  2624 ;; This function is called by:
  2625 ;;		_vfpfcnvrt
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text12
  2630  000D60                     __ptext12:
  2631                           	opt callstack 0
  2632  000D60                     _atoi:
  2633                           	opt callstack 19
  2634  000D60  0E00               	movlw	0
  2635  000D62  6E1E               	movwf	(atoi@n+1)^0,c
  2636  000D64  0E00               	movlw	0
  2637  000D66  6E1D               	movwf	atoi@n^0,c
  2638  000D68  0E00               	movlw	0
  2639  000D6A  6E17               	movwf	(atoi@neg+1)^0,c
  2640  000D6C  0E00               	movlw	0
  2641  000D6E  6E16               	movwf	atoi@neg^0,c
  2642  000D70  EFBC  F006         	goto	l2973
  2643  000D74                     l2971:
  2644  000D74  4A10               	infsnz	atoi@s^0,f,c
  2645  000D76  2A11               	incf	(atoi@s+1)^0,f,c
  2646  000D78                     l2973:
  2647  000D78  0E01               	movlw	1
  2648  000D7A  6E1C               	movwf	_atoi$1596^0,c
  2649  000D7C  C010  FFF6         	movff	atoi@s,tblptrl
  2650  000D80  C011  FFF7         	movff	atoi@s+1,tblptrh
  2651  000D84                     	if	0	;tblptru may be non-zero
  2652  000D84                     	endif
  2653  000D84                     	if	0	;tblptru may be non-zero
  2654  000D84                     	endif
  2655  000D84  0008               	tblrd		*
  2656  000D86  50F5               	movf	tablat,w,c
  2657  000D88  0A20               	xorlw	32
  2658  000D8A  B4D8               	btfsc	status,2,c
  2659  000D8C  EFCA  F006         	goto	u2111
  2660  000D90  EFCC  F006         	goto	u2110
  2661  000D94                     u2111:
  2662  000D94  EFE9  F006         	goto	l2981
  2663  000D98                     u2110:
  2664  000D98  0EF7               	movlw	247
  2665  000D9A  6E12               	movwf	??_atoi^0,c
  2666  000D9C  0EFF               	movlw	255
  2667  000D9E  6E13               	movwf	(??_atoi+1)^0,c
  2668  000DA0  C010  FFF6         	movff	atoi@s,tblptrl
  2669  000DA4  C011  FFF7         	movff	atoi@s+1,tblptrh
  2670  000DA8                     	if	0	;tblptru may be non-zero
  2671  000DA8                     	endif
  2672  000DA8                     	if	0	;tblptru may be non-zero
  2673  000DA8                     	endif
  2674  000DA8  0008               	tblrd		*
  2675  000DAA  50F5               	movf	tablat,w,c
  2676  000DAC  6E14               	movwf	(??_atoi+2)^0,c
  2677  000DAE  6A15               	clrf	(??_atoi+3)^0,c
  2678  000DB0  5012               	movf	??_atoi^0,w,c
  2679  000DB2  2614               	addwf	(??_atoi+2)^0,f,c
  2680  000DB4  5013               	movf	(??_atoi+1)^0,w,c
  2681  000DB6  2215               	addwfc	(??_atoi+3)^0,f,c
  2682  000DB8  5015               	movf	(??_atoi+3)^0,w,c
  2683  000DBA  E109               	bnz	u2120
  2684  000DBC  0E05               	movlw	5
  2685  000DBE  5C14               	subwf	(??_atoi+2)^0,w,c
  2686  000DC0  A0D8               	btfss	status,0,c
  2687  000DC2  EFE5  F006         	goto	u2121
  2688  000DC6  EFE7  F006         	goto	u2120
  2689  000DCA                     u2121:
  2690  000DCA  EFE9  F006         	goto	l2981
  2691  000DCE                     u2120:
  2692  000DCE  0E00               	movlw	0
  2693  000DD0  6E1C               	movwf	_atoi$1596^0,c
  2694  000DD2                     l2981:
  2695  000DD2  C01C  F018         	movff	_atoi$1596,_atoi$1595
  2696  000DD6  6A19               	clrf	(_atoi$1595+1)^0,c
  2697  000DD8  5018               	movf	_atoi$1595^0,w,c
  2698  000DDA  1019               	iorwf	(_atoi$1595+1)^0,w,c
  2699  000DDC  A4D8               	btfss	status,2,c
  2700  000DDE  EFF3  F006         	goto	u2131
  2701  000DE2  EFF5  F006         	goto	u2130
  2702  000DE6                     u2131:
  2703  000DE6  EFBA  F006         	goto	l2971
  2704  000DEA                     u2130:
  2705  000DEA  EFFF  F006         	goto	l2991
  2706  000DEE                     l2987:
  2707  000DEE  0E00               	movlw	0
  2708  000DF0  6E17               	movwf	(atoi@neg+1)^0,c
  2709  000DF2  0E01               	movlw	1
  2710  000DF4  6E16               	movwf	atoi@neg^0,c
  2711  000DF6                     l2989:
  2712  000DF6  4A10               	infsnz	atoi@s^0,f,c
  2713  000DF8  2A11               	incf	(atoi@s+1)^0,f,c
  2714  000DFA  EF34  F007         	goto	l2997
  2715  000DFE                     l2991:
  2716  000DFE  C010  FFF6         	movff	atoi@s,tblptrl
  2717  000E02  C011  FFF7         	movff	atoi@s+1,tblptrh
  2718  000E06                     	if	0	;tblptru may be non-zero
  2719  000E06                     	endif
  2720  000E06                     	if	0	;tblptru may be non-zero
  2721  000E06                     	endif
  2722  000E06  0008               	tblrd		*
  2723  000E08  50F5               	movf	tablat,w,c
  2724  000E0A  6E12               	movwf	??_atoi^0,c
  2725  000E0C  6A13               	clrf	(??_atoi+1)^0,c
  2726                           
  2727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2728                           ; Switch size 1, requested type "simple"
  2729                           ; Number of cases is 1, Range of values is 0 to 0
  2730                           ; switch strategies available:
  2731                           ; Name         Instructions Cycles
  2732                           ; simple_byte            4     3 (average)
  2733                           ;	Chosen strategy is simple_byte
  2734  000E0E  5013               	movf	(??_atoi+1)^0,w,c
  2735  000E10  0A00               	xorlw	0	; case 0
  2736  000E12  B4D8               	btfsc	status,2,c
  2737  000E14  EF0E  F007         	goto	l3263
  2738  000E18  EF34  F007         	goto	l2997
  2739  000E1C                     l3263:
  2740                           
  2741                           ; Switch size 1, requested type "simple"
  2742                           ; Number of cases is 2, Range of values is 43 to 45
  2743                           ; switch strategies available:
  2744                           ; Name         Instructions Cycles
  2745                           ; simple_byte            7     4 (average)
  2746                           ;	Chosen strategy is simple_byte
  2747  000E1C  5012               	movf	??_atoi^0,w,c
  2748  000E1E  0A2B               	xorlw	43	; case 43
  2749  000E20  B4D8               	btfsc	status,2,c
  2750  000E22  EFFB  F006         	goto	l2989
  2751  000E26  0A06               	xorlw	6	; case 45
  2752  000E28  B4D8               	btfsc	status,2,c
  2753  000E2A  EFF7  F006         	goto	l2987
  2754  000E2E  EF34  F007         	goto	l2997
  2755  000E32                     l2993:
  2756  000E32  C01D  F009         	movff	atoi@n,___wmul@multiplier
  2757  000E36  C01E  F00A         	movff	atoi@n+1,___wmul@multiplier+1
  2758  000E3A  0E00               	movlw	0
  2759  000E3C  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  2760  000E3E  0E0A               	movlw	10
  2761  000E40  6E0B               	movwf	___wmul@multiplicand^0,c
  2762  000E42  ECC1  F00D         	call	___wmul	;wreg free
  2763  000E46  C010  FFF6         	movff	atoi@s,tblptrl
  2764  000E4A  C011  FFF7         	movff	atoi@s+1,tblptrh
  2765  000E4E                     	if	0	;tblptru may be non-zero
  2766  000E4E                     	endif
  2767  000E4E                     	if	0	;tblptru may be non-zero
  2768  000E4E                     	endif
  2769  000E4E  0008               	tblrd		*
  2770  000E50  50F5               	movf	tablat,w,c
  2771  000E52  5E09               	subwf	?___wmul^0,f,c
  2772  000E54  0E00               	movlw	0
  2773  000E56  5A0A               	subwfb	(?___wmul+1)^0,f,c
  2774  000E58  0E30               	movlw	48
  2775  000E5A  2409               	addwf	?___wmul^0,w,c
  2776  000E5C  6E1D               	movwf	atoi@n^0,c
  2777  000E5E  0E00               	movlw	0
  2778  000E60  200A               	addwfc	(?___wmul+1)^0,w,c
  2779  000E62  6E1E               	movwf	(atoi@n+1)^0,c
  2780  000E64  EFFB  F006         	goto	l2989
  2781  000E68                     l2997:
  2782  000E68  0ED0               	movlw	208
  2783  000E6A  6E12               	movwf	??_atoi^0,c
  2784  000E6C  0EFF               	movlw	255
  2785  000E6E  6E13               	movwf	(??_atoi+1)^0,c
  2786  000E70  C010  FFF6         	movff	atoi@s,tblptrl
  2787  000E74  C011  FFF7         	movff	atoi@s+1,tblptrh
  2788  000E78                     	if	0	;tblptru may be non-zero
  2789  000E78                     	endif
  2790  000E78                     	if	0	;tblptru may be non-zero
  2791  000E78                     	endif
  2792  000E78  0008               	tblrd		*
  2793  000E7A  50F5               	movf	tablat,w,c
  2794  000E7C  6E14               	movwf	(??_atoi+2)^0,c
  2795  000E7E  6A15               	clrf	(??_atoi+3)^0,c
  2796  000E80  5012               	movf	??_atoi^0,w,c
  2797  000E82  2614               	addwf	(??_atoi+2)^0,f,c
  2798  000E84  5013               	movf	(??_atoi+1)^0,w,c
  2799  000E86  2215               	addwfc	(??_atoi+3)^0,f,c
  2800  000E88  5015               	movf	(??_atoi+3)^0,w,c
  2801  000E8A  E10A               	bnz	u2140
  2802  000E8C  0E0A               	movlw	10
  2803  000E8E  5C14               	subwf	(??_atoi+2)^0,w,c
  2804  000E90  A0D8               	btfss	status,0,c
  2805  000E92  EF4D  F007         	goto	u2141
  2806  000E96  EF50  F007         	goto	u2140
  2807  000E9A                     u2141:
  2808  000E9A  0E01               	movlw	1
  2809  000E9C  EF51  F007         	goto	u2150
  2810  000EA0                     u2140:
  2811  000EA0  0E00               	movlw	0
  2812  000EA2                     u2150:
  2813  000EA2  6E1A               	movwf	_atoi$1597^0,c
  2814  000EA4  6A1B               	clrf	(_atoi$1597+1)^0,c
  2815  000EA6  501A               	movf	_atoi$1597^0,w,c
  2816  000EA8  101B               	iorwf	(_atoi$1597+1)^0,w,c
  2817  000EAA  A4D8               	btfss	status,2,c
  2818  000EAC  EF5A  F007         	goto	u2161
  2819  000EB0  EF5C  F007         	goto	u2160
  2820  000EB4                     u2161:
  2821  000EB4  EF19  F007         	goto	l2993
  2822  000EB8                     u2160:
  2823  000EB8  5016               	movf	atoi@neg^0,w,c
  2824  000EBA  1017               	iorwf	(atoi@neg+1)^0,w,c
  2825  000EBC  A4D8               	btfss	status,2,c
  2826  000EBE  EF63  F007         	goto	u2171
  2827  000EC2  EF65  F007         	goto	u2170
  2828  000EC6                     u2171:
  2829  000EC6  EF73  F007         	goto	l1112
  2830  000ECA                     u2170:
  2831  000ECA  C01D  F012         	movff	atoi@n,??_atoi
  2832  000ECE  C01E  F013         	movff	atoi@n+1,??_atoi+1
  2833  000ED2  1E12               	comf	??_atoi^0,f,c
  2834  000ED4  1E13               	comf	(??_atoi+1)^0,f,c
  2835  000ED6  4A12               	infsnz	??_atoi^0,f,c
  2836  000ED8  2A13               	incf	(??_atoi+1)^0,f,c
  2837  000EDA  C012  F010         	movff	??_atoi,?_atoi
  2838  000EDE  C013  F011         	movff	??_atoi+1,?_atoi+1
  2839  000EE2  EF77  F007         	goto	l1115
  2840  000EE6                     l1112:
  2841  000EE6  C01D  F010         	movff	atoi@n,?_atoi
  2842  000EEA  C01E  F011         	movff	atoi@n+1,?_atoi+1
  2843  000EEE                     l1115:
  2844  000EEE  0012               	return		;funcret
  2845  000EF0                     __end_of_atoi:
  2846                           	opt callstack 0
  2847                           
  2848 ;; *************** function _isspace *****************
  2849 ;; Defined at:
  2850 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  c               2    8[COMRAM] int 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2    8[COMRAM] int 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2864 ;;      Params:         2       0       0       0       0       0       0       0       0
  2865 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2866 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2867 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2868 ;;Total ram usage:        7 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    7
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_atoi
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text13
  2879  0018FC                     __ptext13:
  2880                           	opt callstack 0
  2881  0018FC                     _isspace:
  2882                           	opt callstack 19
  2883  0018FC  0E01               	movlw	1
  2884  0018FE  6E0F               	movwf	_isspace$1613^0,c
  2885  001900  0E20               	movlw	32
  2886  001902  1809               	xorwf	isspace@c^0,w,c
  2887  001904  100A               	iorwf	(isspace@c+1)^0,w,c
  2888  001906  B4D8               	btfsc	status,2,c
  2889  001908  EF88  F00C         	goto	u2021
  2890  00190C  EF8A  F00C         	goto	u2020
  2891  001910                     u2021:
  2892  001910  EFA3  F00C         	goto	l2929
  2893  001914                     u2020:
  2894  001914  0EF7               	movlw	247
  2895  001916  6E0B               	movwf	??_isspace^0,c
  2896  001918  0EFF               	movlw	255
  2897  00191A  6E0C               	movwf	(??_isspace+1)^0,c
  2898  00191C  C009  F00D         	movff	isspace@c,??_isspace+2
  2899  001920  C00A  F00E         	movff	isspace@c+1,??_isspace+3
  2900  001924  500B               	movf	??_isspace^0,w,c
  2901  001926  260D               	addwf	(??_isspace+2)^0,f,c
  2902  001928  500C               	movf	(??_isspace+1)^0,w,c
  2903  00192A  220E               	addwfc	(??_isspace+3)^0,f,c
  2904  00192C  500E               	movf	(??_isspace+3)^0,w,c
  2905  00192E  E109               	bnz	u2030
  2906  001930  0E05               	movlw	5
  2907  001932  5C0D               	subwf	(??_isspace+2)^0,w,c
  2908  001934  A0D8               	btfss	status,0,c
  2909  001936  EF9F  F00C         	goto	u2031
  2910  00193A  EFA1  F00C         	goto	u2030
  2911  00193E                     u2031:
  2912  00193E  EFA3  F00C         	goto	l2929
  2913  001942                     u2030:
  2914  001942  0E00               	movlw	0
  2915  001944  6E0F               	movwf	_isspace$1613^0,c
  2916  001946                     l2929:
  2917  001946  C00F  F009         	movff	_isspace$1613,?_isspace
  2918  00194A  6A0A               	clrf	(?_isspace+1)^0,c
  2919  00194C  0012               	return		;funcret
  2920  00194E                     __end_of_isspace:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function _isdigit *****************
  2924 ;; Defined at:
  2925 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  c               2    8[COMRAM] int 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2    8[COMRAM] int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2939 ;;      Params:         2       0       0       0       0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2941 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2942 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2943 ;;Total ram usage:        6 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    7
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_vfpfcnvrt
  2950 ;;		_atoi
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text14
  2955  001A58                     __ptext14:
  2956                           	opt callstack 0
  2957  001A58                     _isdigit:
  2958                           	opt callstack 20
  2959  001A58  0ED0               	movlw	208
  2960  001A5A  6E0B               	movwf	??_isdigit^0,c
  2961  001A5C  0EFF               	movlw	255
  2962  001A5E  6E0C               	movwf	(??_isdigit+1)^0,c
  2963  001A60  C009  F00D         	movff	isdigit@c,??_isdigit+2
  2964  001A64  C00A  F00E         	movff	isdigit@c+1,??_isdigit+3
  2965  001A68  500B               	movf	??_isdigit^0,w,c
  2966  001A6A  260D               	addwf	(??_isdigit+2)^0,f,c
  2967  001A6C  500C               	movf	(??_isdigit+1)^0,w,c
  2968  001A6E  220E               	addwfc	(??_isdigit+3)^0,f,c
  2969  001A70  500E               	movf	(??_isdigit+3)^0,w,c
  2970  001A72  E10A               	bnz	u1930
  2971  001A74  0E0A               	movlw	10
  2972  001A76  5C0D               	subwf	(??_isdigit+2)^0,w,c
  2973  001A78  A0D8               	btfss	status,0,c
  2974  001A7A  EF41  F00D         	goto	u1931
  2975  001A7E  EF44  F00D         	goto	u1930
  2976  001A82                     u1931:
  2977  001A82  0E01               	movlw	1
  2978  001A84  EF45  F00D         	goto	u1940
  2979  001A88                     u1930:
  2980  001A88  0E00               	movlw	0
  2981  001A8A                     u1940:
  2982  001A8A  6E09               	movwf	?_isdigit^0,c
  2983  001A8C  6A0A               	clrf	(?_isdigit+1)^0,c
  2984  001A8E  0012               	return		;funcret
  2985  001A90                     __end_of_isdigit:
  2986                           	opt callstack 0
  2987                           
  2988 ;; *************** function ___wmul *****************
  2989 ;; Defined at:
  2990 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  multiplier      2    8[COMRAM] unsigned int 
  2993 ;;  multiplicand    2   10[COMRAM] unsigned int 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  product         2   12[COMRAM] unsigned int 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    8[COMRAM] unsigned int 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0, prodl, prodh
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3005 ;;      Params:         4       0       0       0       0       0       0       0       0
  3006 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3008 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        6 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    7
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_atoi
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text15
  3020  001B82                     __ptext15:
  3021                           	opt callstack 0
  3022  001B82                     ___wmul:
  3023                           	opt callstack 19
  3024  001B82  5009               	movf	___wmul@multiplier^0,w,c
  3025  001B84  020B               	mulwf	___wmul@multiplicand^0,c
  3026  001B86  CFF3 F00D          	movff	prodl,___wmul@product
  3027  001B8A  CFF4 F00E          	movff	prodh,___wmul@product+1
  3028  001B8E  5009               	movf	___wmul@multiplier^0,w,c
  3029  001B90  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  3030  001B92  50F3               	movf	243,w,c
  3031  001B94  260E               	addwf	(___wmul@product+1)^0,f,c
  3032  001B96  500A               	movf	(___wmul@multiplier+1)^0,w,c
  3033  001B98  020B               	mulwf	___wmul@multiplicand^0,c
  3034  001B9A  50F3               	movf	243,w,c
  3035  001B9C  260E               	addwf	(___wmul@product+1)^0,f,c
  3036  001B9E  C00D  F009         	movff	___wmul@product,?___wmul
  3037  001BA2  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  3038  001BA6  0012               	return		;funcret
  3039  001BA8                     __end_of___wmul:
  3040                           	opt callstack 0
  3041                           
  3042 ;; *************** function _setCursor *****************
  3043 ;; Defined at:
  3044 ;;		line 56 in file "LCD.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  x               1    wreg     unsigned char 
  3047 ;;  y               1   11[COMRAM] unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  x               1   17[COMRAM] unsigned char 
  3050 ;;  n               1   16[COMRAM] unsigned char 
  3051 ;;  m               1   15[COMRAM] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3061 ;;      Params:         1       0       0       0       0       0       0       0       0
  3062 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3063 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3064 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3065 ;;Total ram usage:        7 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    9
  3068 ;; This function calls:
  3069 ;;		_comando
  3070 ;; This function is called by:
  3071 ;;		_main
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text16
  3076  001056                     __ptext16:
  3077                           	opt callstack 0
  3078  001056                     _setCursor:
  3079                           	opt callstack 21
  3080                           
  3081                           ;incstack = 0
  3082                           ;setCursor@x stored from wreg
  3083  001056  6E12               	movwf	setCursor@x^0,c
  3084  001058                     
  3085                           ;LCD.c: 57:     char m;;LCD.c: 58:     char n;;LCD.c: 59:     if(y==1){
  3086  001058  040C               	decf	setCursor@y^0,w,c
  3087  00105A  A4D8               	btfss	status,2,c
  3088  00105C  EF32  F008         	goto	u1551
  3089  001060  EF34  F008         	goto	u1550
  3090  001064                     u1551:
  3091  001064  EF4E  F008         	goto	l219
  3092  001068                     u1550:
  3093  001068                     
  3094                           ;LCD.c: 60:         m=0x80 + x;
  3095  001068  5012               	movf	setCursor@x^0,w,c
  3096  00106A  0F80               	addlw	128
  3097  00106C  6E10               	movwf	setCursor@m^0,c
  3098                           
  3099                           ;LCD.c: 61:         n=(0x80 + x) >> 4;
  3100  00106E  5012               	movf	setCursor@x^0,w,c
  3101  001070  6E0D               	movwf	??_setCursor^0,c
  3102  001072  6A0E               	clrf	(??_setCursor+1)^0,c
  3103  001074  0E80               	movlw	128
  3104  001076  260D               	addwf	??_setCursor^0,f,c
  3105  001078  0E00               	movlw	0
  3106  00107A  220E               	addwfc	(??_setCursor+1)^0,f,c
  3107  00107C  0E04               	movlw	4
  3108  00107E  6E0F               	movwf	(??_setCursor+2)^0,c
  3109  001080                     u1565:
  3110  001080  340E               	rlcf	(??_setCursor+1)^0,w,c
  3111  001082  320E               	rrcf	(??_setCursor+1)^0,f,c
  3112  001084  320D               	rrcf	??_setCursor^0,f,c
  3113  001086  2E0F               	decfsz	(??_setCursor+2)^0,f,c
  3114  001088  EF40  F008         	goto	u1565
  3115  00108C  500D               	movf	??_setCursor^0,w,c
  3116  00108E  6E11               	movwf	setCursor@n^0,c
  3117  001090                     
  3118                           ;LCD.c: 62:         comando(n);
  3119  001090  5011               	movf	setCursor@n^0,w,c
  3120  001092  ECF6  F00D         	call	_comando
  3121  001096                     
  3122                           ;LCD.c: 63:         comando(m);
  3123  001096  5010               	movf	setCursor@m^0,w,c
  3124  001098  ECF6  F00D         	call	_comando
  3125  00109C                     l219:
  3126                           
  3127                           ;LCD.c: 65:     if(y==2){
  3128  00109C  0E02               	movlw	2
  3129  00109E  180C               	xorwf	setCursor@y^0,w,c
  3130  0010A0  A4D8               	btfss	status,2,c
  3131  0010A2  EF55  F008         	goto	u1571
  3132  0010A6  EF57  F008         	goto	u1570
  3133  0010AA                     u1571:
  3134  0010AA  EF71  F008         	goto	l220
  3135  0010AE                     u1570:
  3136  0010AE                     
  3137                           ;LCD.c: 66:         m=0xC0 + x;
  3138  0010AE  5012               	movf	setCursor@x^0,w,c
  3139  0010B0  0FC0               	addlw	192
  3140  0010B2  6E10               	movwf	setCursor@m^0,c
  3141                           
  3142                           ;LCD.c: 67:         n=(0xC0 + x) >> 4;
  3143  0010B4  5012               	movf	setCursor@x^0,w,c
  3144  0010B6  6E0D               	movwf	??_setCursor^0,c
  3145  0010B8  6A0E               	clrf	(??_setCursor+1)^0,c
  3146  0010BA  0EC0               	movlw	192
  3147  0010BC  260D               	addwf	??_setCursor^0,f,c
  3148  0010BE  0E00               	movlw	0
  3149  0010C0  220E               	addwfc	(??_setCursor+1)^0,f,c
  3150  0010C2  0E04               	movlw	4
  3151  0010C4  6E0F               	movwf	(??_setCursor+2)^0,c
  3152  0010C6                     u1585:
  3153  0010C6  340E               	rlcf	(??_setCursor+1)^0,w,c
  3154  0010C8  320E               	rrcf	(??_setCursor+1)^0,f,c
  3155  0010CA  320D               	rrcf	??_setCursor^0,f,c
  3156  0010CC  2E0F               	decfsz	(??_setCursor+2)^0,f,c
  3157  0010CE  EF63  F008         	goto	u1585
  3158  0010D2  500D               	movf	??_setCursor^0,w,c
  3159  0010D4  6E11               	movwf	setCursor@n^0,c
  3160  0010D6                     
  3161                           ;LCD.c: 68:         comando(n);
  3162  0010D6  5011               	movf	setCursor@n^0,w,c
  3163  0010D8  ECF6  F00D         	call	_comando
  3164  0010DC                     
  3165                           ;LCD.c: 69:         comando(m);
  3166  0010DC  5010               	movf	setCursor@m^0,w,c
  3167  0010DE  ECF6  F00D         	call	_comando
  3168  0010E2                     l220:
  3169                           
  3170                           ;LCD.c: 71:     if(y==3){
  3171  0010E2  0E03               	movlw	3
  3172  0010E4  180C               	xorwf	setCursor@y^0,w,c
  3173  0010E6  A4D8               	btfss	status,2,c
  3174  0010E8  EF78  F008         	goto	u1591
  3175  0010EC  EF7A  F008         	goto	u1590
  3176  0010F0                     u1591:
  3177  0010F0  EF94  F008         	goto	l221
  3178  0010F4                     u1590:
  3179  0010F4                     
  3180                           ;LCD.c: 72:         m=0x80 +20+ x;
  3181  0010F4  5012               	movf	setCursor@x^0,w,c
  3182  0010F6  0F94               	addlw	148
  3183  0010F8  6E10               	movwf	setCursor@m^0,c
  3184                           
  3185                           ;LCD.c: 73:         n=(0x80+20 + x) >> 4;
  3186  0010FA  5012               	movf	setCursor@x^0,w,c
  3187  0010FC  6E0D               	movwf	??_setCursor^0,c
  3188  0010FE  6A0E               	clrf	(??_setCursor+1)^0,c
  3189  001100  0E94               	movlw	148
  3190  001102  260D               	addwf	??_setCursor^0,f,c
  3191  001104  0E00               	movlw	0
  3192  001106  220E               	addwfc	(??_setCursor+1)^0,f,c
  3193  001108  0E04               	movlw	4
  3194  00110A  6E0F               	movwf	(??_setCursor+2)^0,c
  3195  00110C                     u1605:
  3196  00110C  340E               	rlcf	(??_setCursor+1)^0,w,c
  3197  00110E  320E               	rrcf	(??_setCursor+1)^0,f,c
  3198  001110  320D               	rrcf	??_setCursor^0,f,c
  3199  001112  2E0F               	decfsz	(??_setCursor+2)^0,f,c
  3200  001114  EF86  F008         	goto	u1605
  3201  001118  500D               	movf	??_setCursor^0,w,c
  3202  00111A  6E11               	movwf	setCursor@n^0,c
  3203  00111C                     
  3204                           ;LCD.c: 74:         comando(n);
  3205  00111C  5011               	movf	setCursor@n^0,w,c
  3206  00111E  ECF6  F00D         	call	_comando
  3207  001122                     
  3208                           ;LCD.c: 75:         comando(m);
  3209  001122  5010               	movf	setCursor@m^0,w,c
  3210  001124  ECF6  F00D         	call	_comando
  3211  001128                     l221:
  3212                           
  3213                           ;LCD.c: 77:     if(y==4){
  3214  001128  0E04               	movlw	4
  3215  00112A  180C               	xorwf	setCursor@y^0,w,c
  3216  00112C  A4D8               	btfss	status,2,c
  3217  00112E  EF9B  F008         	goto	u1611
  3218  001132  EF9D  F008         	goto	u1610
  3219  001136                     u1611:
  3220  001136  EFB7  F008         	goto	l223
  3221  00113A                     u1610:
  3222  00113A                     
  3223                           ;LCD.c: 78:         m=0xC0 +20+ x;
  3224  00113A  5012               	movf	setCursor@x^0,w,c
  3225  00113C  0FD4               	addlw	212
  3226  00113E  6E10               	movwf	setCursor@m^0,c
  3227                           
  3228                           ;LCD.c: 79:         n=(0xC0 + 20+ x) >> 4;
  3229  001140  5012               	movf	setCursor@x^0,w,c
  3230  001142  6E0D               	movwf	??_setCursor^0,c
  3231  001144  6A0E               	clrf	(??_setCursor+1)^0,c
  3232  001146  0ED4               	movlw	212
  3233  001148  260D               	addwf	??_setCursor^0,f,c
  3234  00114A  0E00               	movlw	0
  3235  00114C  220E               	addwfc	(??_setCursor+1)^0,f,c
  3236  00114E  0E04               	movlw	4
  3237  001150  6E0F               	movwf	(??_setCursor+2)^0,c
  3238  001152                     u1625:
  3239  001152  340E               	rlcf	(??_setCursor+1)^0,w,c
  3240  001154  320E               	rrcf	(??_setCursor+1)^0,f,c
  3241  001156  320D               	rrcf	??_setCursor^0,f,c
  3242  001158  2E0F               	decfsz	(??_setCursor+2)^0,f,c
  3243  00115A  EFA9  F008         	goto	u1625
  3244  00115E  500D               	movf	??_setCursor^0,w,c
  3245  001160  6E11               	movwf	setCursor@n^0,c
  3246  001162                     
  3247                           ;LCD.c: 80:         comando(n);
  3248  001162  5011               	movf	setCursor@n^0,w,c
  3249  001164  ECF6  F00D         	call	_comando
  3250  001168                     
  3251                           ;LCD.c: 81:         comando(m);
  3252  001168  5010               	movf	setCursor@m^0,w,c
  3253  00116A  ECF6  F00D         	call	_comando
  3254  00116E                     l223:
  3255  00116E  0012               	return		;funcret
  3256  001170                     __end_of_setCursor:
  3257                           	opt callstack 0
  3258                           
  3259 ;; *************** function _serial_trama *****************
  3260 ;; Defined at:
  3261 ;;		line 30 in file "EUSART.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  data            2    9[COMRAM] PTR unsigned char 
  3264 ;;		 -> STR_7(3), horas(4), minut(4), segun(4), 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  k               2   13[COMRAM] int 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3276 ;;      Params:         2       0       0       0       0       0       0       0       0
  3277 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3278 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3279 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3280 ;;Total ram usage:        6 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    8
  3283 ;; This function calls:
  3284 ;;		_serial_print
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text17
  3291  00167E                     __ptext17:
  3292                           	opt callstack 0
  3293  00167E                     _serial_trama:
  3294                           	opt callstack 22
  3295  00167E                     
  3296                           ;EUSART.c: 32:     for (int k=0;data[k]!='\0';k++){
  3297  00167E  0E00               	movlw	0
  3298  001680  6E0F               	movwf	(serial_trama@k+1)^0,c
  3299  001682  0E00               	movlw	0
  3300  001684  6E0E               	movwf	serial_trama@k^0,c
  3301  001686  EF5F  F00B         	goto	l2511
  3302  00168A                     l2507:
  3303                           
  3304                           ;EUSART.c: 34:         serial_print(data[k]);
  3305  00168A  500E               	movf	serial_trama@k^0,w,c
  3306  00168C  240A               	addwf	serial_trama@data^0,w,c
  3307  00168E  6E0C               	movwf	??_serial_trama^0,c
  3308  001690  500F               	movf	(serial_trama@k+1)^0,w,c
  3309  001692  200B               	addwfc	(serial_trama@data+1)^0,w,c
  3310  001694  6E0D               	movwf	(??_serial_trama+1)^0,c
  3311  001696  C00C  FFF6         	movff	??_serial_trama,tblptrl
  3312  00169A  C00D  FFF7         	movff	??_serial_trama+1,tblptrh
  3313  00169E  6AF8               	clrf	tblptru,c
  3314  0016A0  0E07               	movlw	(high __ramtop+-1)
  3315  0016A2  64F7               	cpfsgt	tblptrh,c
  3316  0016A4  D003               	bra	u1667
  3317  0016A6  0008               	tblrd		*
  3318  0016A8  50F5               	movf	tablat,w,c
  3319  0016AA  D005               	bra	u1660
  3320  0016AC                     u1667:
  3321  0016AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3322  0016B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3323  0016B4  50E7               	movf	indf1,w,c
  3324  0016B6                     u1660:
  3325  0016B6  EC05  F00E         	call	_serial_print
  3326  0016BA                     
  3327                           ;EUSART.c: 35:     }
  3328  0016BA  4A0E               	infsnz	serial_trama@k^0,f,c
  3329  0016BC  2A0F               	incf	(serial_trama@k+1)^0,f,c
  3330  0016BE                     l2511:
  3331  0016BE  500E               	movf	serial_trama@k^0,w,c
  3332  0016C0  240A               	addwf	serial_trama@data^0,w,c
  3333  0016C2  6E0C               	movwf	??_serial_trama^0,c
  3334  0016C4  500F               	movf	(serial_trama@k+1)^0,w,c
  3335  0016C6  200B               	addwfc	(serial_trama@data+1)^0,w,c
  3336  0016C8  6E0D               	movwf	(??_serial_trama+1)^0,c
  3337  0016CA  C00C  FFF6         	movff	??_serial_trama,tblptrl
  3338  0016CE  C00D  FFF7         	movff	??_serial_trama+1,tblptrh
  3339  0016D2  6AF8               	clrf	tblptru,c
  3340  0016D4  0E07               	movlw	(high __ramtop+-1)
  3341  0016D6  64F7               	cpfsgt	tblptrh,c
  3342  0016D8  D003               	bra	u1677
  3343  0016DA  0008               	tblrd		*
  3344  0016DC  50F5               	movf	tablat,w,c
  3345  0016DE  D005               	bra	u1670
  3346  0016E0                     u1677:
  3347  0016E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  3348  0016E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  3349  0016E8  50E7               	movf	indf1,w,c
  3350  0016EA                     u1670:
  3351  0016EA  0900               	iorlw	0
  3352  0016EC  A4D8               	btfss	status,2,c
  3353  0016EE  EF7B  F00B         	goto	u1681
  3354  0016F2  EF7D  F00B         	goto	u1680
  3355  0016F6                     u1681:
  3356  0016F6  EF45  F00B         	goto	l2507
  3357  0016FA                     u1680:
  3358  0016FA  0012               	return		;funcret
  3359  0016FC                     __end_of_serial_trama:
  3360                           	opt callstack 0
  3361                           
  3362 ;; *************** function _serial_print *****************
  3363 ;; Defined at:
  3364 ;;		line 24 in file "EUSART.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  caracter        1    wreg     unsigned char 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  caracter        1    8[COMRAM] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0
  3379 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3381 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3382 ;;Total ram usage:        1 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    7
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;;		_serial_trama
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text18
  3394  001C0A                     __ptext18:
  3395                           	opt callstack 0
  3396  001C0A                     _serial_print:
  3397                           	opt callstack 22
  3398                           
  3399                           ;incstack = 0
  3400                           ;serial_print@caracter stored from wreg
  3401  001C0A  6E09               	movwf	serial_print@caracter^0,c
  3402  001C0C                     l315:
  3403  001C0C  A2AC               	btfss	172,1,c	;volatile
  3404  001C0E  EF0B  F00E         	goto	u1451
  3405  001C12  EF0D  F00E         	goto	u1450
  3406  001C16                     u1451:
  3407  001C16  EF06  F00E         	goto	l315
  3408  001C1A                     u1450:
  3409  001C1A                     
  3410                           ;EUSART.c: 27:     TXREG1=caracter;
  3411  001C1A  C009  FFAD         	movff	serial_print@caracter,4013	;volatile
  3412  001C1E  0012               	return		;funcret
  3413  001C20                     __end_of_serial_print:
  3414                           	opt callstack 0
  3415                           
  3416 ;; *************** function _serial_begin *****************
  3417 ;; Defined at:
  3418 ;;		line 4 in file "EUSART.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  baudios         4   22[COMRAM] long 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3432 ;;      Params:         4       0       0       0       0       0       0       0       0
  3433 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3435 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3436 ;;Total ram usage:        8 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    8
  3439 ;; This function calls:
  3440 ;;		___aldiv
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text19
  3447  00177A                     __ptext19:
  3448                           	opt callstack 0
  3449  00177A                     _serial_begin:
  3450                           	opt callstack 22
  3451  00177A                     
  3452                           ;EUSART.c: 7:     TRISCbits.RC6=0;
  3453  00177A  9C94               	bcf	148,6,c	;volatile
  3454                           
  3455                           ;EUSART.c: 8:     TRISCbits.RC7=1;
  3456  00177C  8E94               	bsf	148,7,c	;volatile
  3457                           
  3458                           ;EUSART.c: 9:     BAUDCONbits.BRG16=0;
  3459  00177E  96B8               	bcf	184,3,c	;volatile
  3460                           
  3461                           ;EUSART.c: 10:     TXSTAbits.BRGH=0;
  3462  001780  94AC               	bcf	172,2,c	;volatile
  3463                           
  3464                           ;EUSART.c: 11:     TXSTAbits.SYNC=0;
  3465  001782  98AC               	bcf	172,4,c	;volatile
  3466  001784                     
  3467                           ;EUSART.c: 12:     SPBRG=(unsigned char)(((8000000/baudios)/64)-1);
  3468  001784  C017  F00D         	movff	serial_begin@baudios,___aldiv@divisor
  3469  001788  C018  F00E         	movff	serial_begin@baudios+1,___aldiv@divisor+1
  3470  00178C  C019  F00F         	movff	serial_begin@baudios+2,___aldiv@divisor+2
  3471  001790  C01A  F010         	movff	serial_begin@baudios+3,___aldiv@divisor+3
  3472  001794  0E00               	movlw	0
  3473  001796  6E09               	movwf	___aldiv@dividend^0,c
  3474  001798  0E12               	movlw	18
  3475  00179A  6E0A               	movwf	(___aldiv@dividend+1)^0,c
  3476  00179C  0E7A               	movlw	122
  3477  00179E  6E0B               	movwf	(___aldiv@dividend+2)^0,c
  3478  0017A0  0E00               	movlw	0
  3479  0017A2  6E0C               	movwf	(___aldiv@dividend+3)^0,c
  3480  0017A4  ECB8  F008         	call	___aldiv	;wreg free
  3481  0017A8  C009  F01B         	movff	?___aldiv,_serial_begin$1909
  3482  0017AC  C00A  F01C         	movff	?___aldiv+1,_serial_begin$1909+1
  3483  0017B0  C00B  F01D         	movff	?___aldiv+2,_serial_begin$1909+2
  3484  0017B4  C00C  F01E         	movff	?___aldiv+3,_serial_begin$1909+3
  3485                           
  3486                           ;EUSART.c: 12:     SPBRG=(unsigned char)(((8000000/baudios)/64)-1);
  3487  0017B8  C01B  F009         	movff	_serial_begin$1909,___aldiv@dividend
  3488  0017BC  C01C  F00A         	movff	_serial_begin$1909+1,___aldiv@dividend+1
  3489  0017C0  C01D  F00B         	movff	_serial_begin$1909+2,___aldiv@dividend+2
  3490  0017C4  C01E  F00C         	movff	_serial_begin$1909+3,___aldiv@dividend+3
  3491  0017C8  0E40               	movlw	64
  3492  0017CA  6E0D               	movwf	___aldiv@divisor^0,c
  3493  0017CC  0E00               	movlw	0
  3494  0017CE  6E0E               	movwf	(___aldiv@divisor+1)^0,c
  3495  0017D0  0E00               	movlw	0
  3496  0017D2  6E0F               	movwf	(___aldiv@divisor+2)^0,c
  3497  0017D4  0E00               	movlw	0
  3498  0017D6  6E10               	movwf	(___aldiv@divisor+3)^0,c
  3499  0017D8  ECB8  F008         	call	___aldiv	;wreg free
  3500  0017DC  0409               	decf	?___aldiv^0,w,c
  3501  0017DE  6EAF               	movwf	175,c	;volatile
  3502  0017E0                     
  3503                           ;EUSART.c: 13:     RCSTAbits.SPEN=1;
  3504  0017E0  8EAB               	bsf	171,7,c	;volatile
  3505  0017E2                     
  3506                           ;EUSART.c: 16:     TXSTAbits.TX9=0;
  3507  0017E2  9CAC               	bcf	172,6,c	;volatile
  3508  0017E4                     
  3509                           ;EUSART.c: 17:     TXSTAbits.TXEN=1;
  3510  0017E4  8AAC               	bsf	172,5,c	;volatile
  3511  0017E6                     
  3512                           ;EUSART.c: 20:     RCSTAbits.RC9=0;
  3513  0017E6  9CAB               	bcf	171,6,c	;volatile
  3514  0017E8                     
  3515                           ;EUSART.c: 21:     RCSTAbits.CREN=1;
  3516  0017E8  88AB               	bsf	171,4,c	;volatile
  3517  0017EA  0012               	return		;funcret
  3518  0017EC                     __end_of_serial_begin:
  3519                           	opt callstack 0
  3520                           
  3521 ;; *************** function ___aldiv *****************
  3522 ;; Defined at:
  3523 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  dividend        4    8[COMRAM] long 
  3526 ;;  divisor         4   12[COMRAM] long 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  quotient        4   18[COMRAM] long 
  3529 ;;  sign            1   17[COMRAM] unsigned char 
  3530 ;;  counter         1   16[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  4    8[COMRAM] long 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3540 ;;      Params:         8       0       0       0       0       0       0       0       0
  3541 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3543 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3544 ;;Total ram usage:       14 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    7
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_serial_begin
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text20
  3555  001170                     __ptext20:
  3556                           	opt callstack 0
  3557  001170                     ___aldiv:
  3558                           	opt callstack 22
  3559  001170  0E00               	movlw	0
  3560  001172  6E12               	movwf	___aldiv@sign^0,c
  3561  001174  BE10               	btfsc	(___aldiv@divisor+3)^0,7,c
  3562  001176  EFC1  F008         	goto	u1470
  3563  00117A  EFBF  F008         	goto	u1471
  3564  00117E                     u1471:
  3565  00117E  EFCB  F008         	goto	l2377
  3566  001182                     u1470:
  3567  001182  1E10               	comf	(___aldiv@divisor+3)^0,f,c
  3568  001184  1E0F               	comf	(___aldiv@divisor+2)^0,f,c
  3569  001186  1E0E               	comf	(___aldiv@divisor+1)^0,f,c
  3570  001188  6C0D               	negf	___aldiv@divisor^0,c
  3571  00118A  0E00               	movlw	0
  3572  00118C  220E               	addwfc	(___aldiv@divisor+1)^0,f,c
  3573  00118E  220F               	addwfc	(___aldiv@divisor+2)^0,f,c
  3574  001190  2210               	addwfc	(___aldiv@divisor+3)^0,f,c
  3575  001192  0E01               	movlw	1
  3576  001194  6E12               	movwf	___aldiv@sign^0,c
  3577  001196                     l2377:
  3578  001196  BE0C               	btfsc	(___aldiv@dividend+3)^0,7,c
  3579  001198  EFD2  F008         	goto	u1480
  3580  00119C  EFD0  F008         	goto	u1481
  3581  0011A0                     u1481:
  3582  0011A0  EFDC  F008         	goto	l2383
  3583  0011A4                     u1480:
  3584  0011A4  1E0C               	comf	(___aldiv@dividend+3)^0,f,c
  3585  0011A6  1E0B               	comf	(___aldiv@dividend+2)^0,f,c
  3586  0011A8  1E0A               	comf	(___aldiv@dividend+1)^0,f,c
  3587  0011AA  6C09               	negf	___aldiv@dividend^0,c
  3588  0011AC  0E00               	movlw	0
  3589  0011AE  220A               	addwfc	(___aldiv@dividend+1)^0,f,c
  3590  0011B0  220B               	addwfc	(___aldiv@dividend+2)^0,f,c
  3591  0011B2  220C               	addwfc	(___aldiv@dividend+3)^0,f,c
  3592  0011B4  0E01               	movlw	1
  3593  0011B6  1A12               	xorwf	___aldiv@sign^0,f,c
  3594  0011B8                     l2383:
  3595  0011B8  0E00               	movlw	0
  3596  0011BA  6E13               	movwf	___aldiv@quotient^0,c
  3597  0011BC  0E00               	movlw	0
  3598  0011BE  6E14               	movwf	(___aldiv@quotient+1)^0,c
  3599  0011C0  0E00               	movlw	0
  3600  0011C2  6E15               	movwf	(___aldiv@quotient+2)^0,c
  3601  0011C4  0E00               	movlw	0
  3602  0011C6  6E16               	movwf	(___aldiv@quotient+3)^0,c
  3603  0011C8  500D               	movf	___aldiv@divisor^0,w,c
  3604  0011CA  100E               	iorwf	(___aldiv@divisor+1)^0,w,c
  3605  0011CC  100F               	iorwf	(___aldiv@divisor+2)^0,w,c
  3606  0011CE  1010               	iorwf	(___aldiv@divisor+3)^0,w,c
  3607  0011D0  B4D8               	btfsc	status,2,c
  3608  0011D2  EFED  F008         	goto	u1491
  3609  0011D6  EFEF  F008         	goto	u1490
  3610  0011DA                     u1491:
  3611  0011DA  EF25  F009         	goto	l2405
  3612  0011DE                     u1490:
  3613  0011DE  0E01               	movlw	1
  3614  0011E0  6E11               	movwf	___aldiv@counter^0,c
  3615  0011E2  EFF9  F008         	goto	l2391
  3616  0011E6                     l2389:
  3617  0011E6  90D8               	bcf	status,0,c
  3618  0011E8  360D               	rlcf	___aldiv@divisor^0,f,c
  3619  0011EA  360E               	rlcf	(___aldiv@divisor+1)^0,f,c
  3620  0011EC  360F               	rlcf	(___aldiv@divisor+2)^0,f,c
  3621  0011EE  3610               	rlcf	(___aldiv@divisor+3)^0,f,c
  3622  0011F0  2A11               	incf	___aldiv@counter^0,f,c
  3623  0011F2                     l2391:
  3624  0011F2  AE10               	btfss	(___aldiv@divisor+3)^0,7,c
  3625  0011F4  EFFE  F008         	goto	u1501
  3626  0011F8  EF00  F009         	goto	u1500
  3627  0011FC                     u1501:
  3628  0011FC  EFF3  F008         	goto	l2389
  3629  001200                     u1500:
  3630  001200                     l2393:
  3631  001200  90D8               	bcf	status,0,c
  3632  001202  3613               	rlcf	___aldiv@quotient^0,f,c
  3633  001204  3614               	rlcf	(___aldiv@quotient+1)^0,f,c
  3634  001206  3615               	rlcf	(___aldiv@quotient+2)^0,f,c
  3635  001208  3616               	rlcf	(___aldiv@quotient+3)^0,f,c
  3636  00120A  500D               	movf	___aldiv@divisor^0,w,c
  3637  00120C  5C09               	subwf	___aldiv@dividend^0,w,c
  3638  00120E  500E               	movf	(___aldiv@divisor+1)^0,w,c
  3639  001210  580A               	subwfb	(___aldiv@dividend+1)^0,w,c
  3640  001212  500F               	movf	(___aldiv@divisor+2)^0,w,c
  3641  001214  580B               	subwfb	(___aldiv@dividend+2)^0,w,c
  3642  001216  5010               	movf	(___aldiv@divisor+3)^0,w,c
  3643  001218  580C               	subwfb	(___aldiv@dividend+3)^0,w,c
  3644  00121A  A0D8               	btfss	status,0,c
  3645  00121C  EF12  F009         	goto	u1511
  3646  001220  EF14  F009         	goto	u1510
  3647  001224                     u1511:
  3648  001224  EF1D  F009         	goto	l2401
  3649  001228                     u1510:
  3650  001228  500D               	movf	___aldiv@divisor^0,w,c
  3651  00122A  5E09               	subwf	___aldiv@dividend^0,f,c
  3652  00122C  500E               	movf	(___aldiv@divisor+1)^0,w,c
  3653  00122E  5A0A               	subwfb	(___aldiv@dividend+1)^0,f,c
  3654  001230  500F               	movf	(___aldiv@divisor+2)^0,w,c
  3655  001232  5A0B               	subwfb	(___aldiv@dividend+2)^0,f,c
  3656  001234  5010               	movf	(___aldiv@divisor+3)^0,w,c
  3657  001236  5A0C               	subwfb	(___aldiv@dividend+3)^0,f,c
  3658  001238  8013               	bsf	___aldiv@quotient^0,0,c
  3659  00123A                     l2401:
  3660  00123A  90D8               	bcf	status,0,c
  3661  00123C  3210               	rrcf	(___aldiv@divisor+3)^0,f,c
  3662  00123E  320F               	rrcf	(___aldiv@divisor+2)^0,f,c
  3663  001240  320E               	rrcf	(___aldiv@divisor+1)^0,f,c
  3664  001242  320D               	rrcf	___aldiv@divisor^0,f,c
  3665  001244  2E11               	decfsz	___aldiv@counter^0,f,c
  3666  001246  EF00  F009         	goto	l2393
  3667  00124A                     l2405:
  3668  00124A  5012               	movf	___aldiv@sign^0,w,c
  3669  00124C  B4D8               	btfsc	status,2,c
  3670  00124E  EF2B  F009         	goto	u1521
  3671  001252  EF2D  F009         	goto	u1520
  3672  001256                     u1521:
  3673  001256  EF35  F009         	goto	l2409
  3674  00125A                     u1520:
  3675  00125A  1E16               	comf	(___aldiv@quotient+3)^0,f,c
  3676  00125C  1E15               	comf	(___aldiv@quotient+2)^0,f,c
  3677  00125E  1E14               	comf	(___aldiv@quotient+1)^0,f,c
  3678  001260  6C13               	negf	___aldiv@quotient^0,c
  3679  001262  0E00               	movlw	0
  3680  001264  2214               	addwfc	(___aldiv@quotient+1)^0,f,c
  3681  001266  2215               	addwfc	(___aldiv@quotient+2)^0,f,c
  3682  001268  2216               	addwfc	(___aldiv@quotient+3)^0,f,c
  3683  00126A                     l2409:
  3684  00126A  C013  F009         	movff	___aldiv@quotient,?___aldiv
  3685  00126E  C014  F00A         	movff	___aldiv@quotient+1,?___aldiv+1
  3686  001272  C015  F00B         	movff	___aldiv@quotient+2,?___aldiv+2
  3687  001276  C016  F00C         	movff	___aldiv@quotient+3,?___aldiv+3
  3688  00127A  0012               	return		;funcret
  3689  00127C                     __end_of___aldiv:
  3690                           	opt callstack 0
  3691                           
  3692 ;; *************** function _print *****************
  3693 ;; Defined at:
  3694 ;;		line 95 in file "LCD.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  a               2   14[COMRAM] PTR unsigned char 
  3697 ;;		 -> STR_6(2), STR_5(2), horas(4), minut(4), 
  3698 ;;		 -> segun(4), STR_1(12), 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  k               2   18[COMRAM] int 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3710 ;;      Params:         2       0       0       0       0       0       0       0       0
  3711 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3712 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3713 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3714 ;;Total ram usage:        6 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:   10
  3717 ;; This function calls:
  3718 ;;		_caracter
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text21
  3725  0016FC                     __ptext21:
  3726                           	opt callstack 0
  3727  0016FC                     _print:
  3728                           	opt callstack 20
  3729  0016FC                     
  3730                           ;LCD.c: 96:     for (int k=0;a[k]!='\0';k++){
  3731  0016FC  0E00               	movlw	0
  3732  0016FE  6E14               	movwf	(print@k+1)^0,c
  3733  001700  0E00               	movlw	0
  3734  001702  6E13               	movwf	print@k^0,c
  3735  001704  EF9E  F00B         	goto	l2475
  3736  001708                     l2471:
  3737                           
  3738                           ;LCD.c: 97:         caracter(a[k]);
  3739  001708  5013               	movf	print@k^0,w,c
  3740  00170A  240F               	addwf	print@a^0,w,c
  3741  00170C  6E11               	movwf	??_print^0,c
  3742  00170E  5014               	movf	(print@k+1)^0,w,c
  3743  001710  2010               	addwfc	(print@a+1)^0,w,c
  3744  001712  6E12               	movwf	(??_print+1)^0,c
  3745  001714  C011  FFF6         	movff	??_print,tblptrl
  3746  001718  C012  FFF7         	movff	??_print+1,tblptrh
  3747  00171C  6AF8               	clrf	tblptru,c
  3748  00171E  0E07               	movlw	(high __ramtop+-1)
  3749  001720  64F7               	cpfsgt	tblptrh,c
  3750  001722  D003               	bra	u1637
  3751  001724  0008               	tblrd		*
  3752  001726  50F5               	movf	tablat,w,c
  3753  001728  D005               	bra	u1630
  3754  00172A                     u1637:
  3755  00172A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3756  00172E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3757  001732  50E7               	movf	indf1,w,c
  3758  001734                     u1630:
  3759  001734  ECE7  F00D         	call	_caracter
  3760  001738                     
  3761                           ;LCD.c: 98:     }
  3762  001738  4A13               	infsnz	print@k^0,f,c
  3763  00173A  2A14               	incf	(print@k+1)^0,f,c
  3764  00173C                     l2475:
  3765  00173C  5013               	movf	print@k^0,w,c
  3766  00173E  240F               	addwf	print@a^0,w,c
  3767  001740  6E11               	movwf	??_print^0,c
  3768  001742  5014               	movf	(print@k+1)^0,w,c
  3769  001744  2010               	addwfc	(print@a+1)^0,w,c
  3770  001746  6E12               	movwf	(??_print+1)^0,c
  3771  001748  C011  FFF6         	movff	??_print,tblptrl
  3772  00174C  C012  FFF7         	movff	??_print+1,tblptrh
  3773  001750  6AF8               	clrf	tblptru,c
  3774  001752  0E07               	movlw	(high __ramtop+-1)
  3775  001754  64F7               	cpfsgt	tblptrh,c
  3776  001756  D003               	bra	u1647
  3777  001758  0008               	tblrd		*
  3778  00175A  50F5               	movf	tablat,w,c
  3779  00175C  D005               	bra	u1640
  3780  00175E                     u1647:
  3781  00175E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3782  001762  CFF7 FFE2          	movff	tblptrh,fsr1h
  3783  001766  50E7               	movf	indf1,w,c
  3784  001768                     u1640:
  3785  001768  0900               	iorlw	0
  3786  00176A  A4D8               	btfss	status,2,c
  3787  00176C  EFBA  F00B         	goto	u1651
  3788  001770  EFBC  F00B         	goto	u1650
  3789  001774                     u1651:
  3790  001774  EF84  F00B         	goto	l2471
  3791  001778                     u1650:
  3792  001778  0012               	return		;funcret
  3793  00177A                     __end_of_print:
  3794                           	opt callstack 0
  3795                           
  3796 ;; *************** function _caracter *****************
  3797 ;; Defined at:
  3798 ;;		line 85 in file "LCD.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  a               1    wreg     unsigned char 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  a               1   13[COMRAM] unsigned char 
  3803 ;;  n               1   12[COMRAM] unsigned char 
  3804 ;;  m               1   11[COMRAM] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0
  3815 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3817 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3818 ;;Total ram usage:        3 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    9
  3821 ;; This function calls:
  3822 ;;		_comando
  3823 ;; This function is called by:
  3824 ;;		_print
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text22
  3829  001BCE                     __ptext22:
  3830                           	opt callstack 0
  3831  001BCE                     _caracter:
  3832                           	opt callstack 20
  3833                           
  3834                           ;incstack = 0
  3835                           ;caracter@a stored from wreg
  3836  001BCE  6E0E               	movwf	caracter@a^0,c
  3837  001BD0                     
  3838                           ;LCD.c: 86:     char m,n;;LCD.c: 87:     m=a>>4;
  3839  001BD0  380E               	swapf	caracter@a^0,w,c
  3840  001BD2  0B0F               	andlw	15
  3841  001BD4  6E0C               	movwf	caracter@m^0,c
  3842  001BD6                     
  3843                           ;LCD.c: 88:     n=a;
  3844  001BD6  C00E  F00D         	movff	caracter@a,caracter@n
  3845  001BDA                     
  3846                           ;LCD.c: 89:     PORTEbits.RE0=1;
  3847  001BDA  8084               	bsf	132,0,c	;volatile
  3848  001BDC                     
  3849                           ;LCD.c: 90:     comando(m);
  3850  001BDC  500C               	movf	caracter@m^0,w,c
  3851  001BDE  ECF6  F00D         	call	_comando
  3852  001BE2                     
  3853                           ;LCD.c: 91:     comando(n);
  3854  001BE2  500D               	movf	caracter@n^0,w,c
  3855  001BE4  ECF6  F00D         	call	_comando
  3856  001BE8                     
  3857                           ;LCD.c: 92:     PORTEbits.RE0=0;
  3858  001BE8  9084               	bcf	132,0,c	;volatile
  3859  001BEA  0012               	return		;funcret
  3860  001BEC                     __end_of_caracter:
  3861                           	opt callstack 0
  3862                           
  3863 ;; *************** function _ocultarcursor *****************
  3864 ;; Defined at:
  3865 ;;		line 207 in file "LCD.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3879 ;;      Params:         0       0       0       0       0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3882 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3883 ;;Total ram usage:        0 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    9
  3886 ;; This function calls:
  3887 ;;		_comando
  3888 ;; This function is called by:
  3889 ;;		_main
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text23
  3894  001C36                     __ptext23:
  3895                           	opt callstack 0
  3896  001C36                     _ocultarcursor:
  3897                           	opt callstack 21
  3898  001C36                     
  3899                           ;LCD.c: 208:     comando(0x00);
  3900  001C36  0E00               	movlw	0
  3901  001C38  ECF6  F00D         	call	_comando
  3902                           
  3903                           ;LCD.c: 209:     comando(0x0c);
  3904  001C3C  0E0C               	movlw	12
  3905  001C3E  ECF6  F00D         	call	_comando
  3906  001C42  0012               	return		;funcret
  3907  001C44                     __end_of_ocultarcursor:
  3908                           	opt callstack 0
  3909                           
  3910 ;; *************** function _begin *****************
  3911 ;; Defined at:
  3912 ;;		line 41 in file "LCD.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3926 ;;      Params:         0       0       0       0       0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    9
  3933 ;; This function calls:
  3934 ;;		_comando
  3935 ;; This function is called by:
  3936 ;;		_main
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text24
  3941  00194E                     __ptext24:
  3942                           	opt callstack 0
  3943  00194E                     _begin:
  3944                           	opt callstack 21
  3945  00194E                     
  3946                           ;LCD.c: 42:     comando(0x03);
  3947  00194E  0E03               	movlw	3
  3948  001950  ECF6  F00D         	call	_comando
  3949                           
  3950                           ;LCD.c: 43:     comando(0x03);
  3951  001954  0E03               	movlw	3
  3952  001956  ECF6  F00D         	call	_comando
  3953                           
  3954                           ;LCD.c: 44:     comando(0x03);
  3955  00195A  0E03               	movlw	3
  3956  00195C  ECF6  F00D         	call	_comando
  3957                           
  3958                           ;LCD.c: 45:     comando(0x02);
  3959  001960  0E02               	movlw	2
  3960  001962  ECF6  F00D         	call	_comando
  3961                           
  3962                           ;LCD.c: 46:     comando(0x02);
  3963  001966  0E02               	movlw	2
  3964  001968  ECF6  F00D         	call	_comando
  3965                           
  3966                           ;LCD.c: 47:     comando(0x08);
  3967  00196C  0E08               	movlw	8
  3968  00196E  ECF6  F00D         	call	_comando
  3969                           
  3970                           ;LCD.c: 48:     comando(0x00);
  3971  001972  0E00               	movlw	0
  3972  001974  ECF6  F00D         	call	_comando
  3973                           
  3974                           ;LCD.c: 49:     comando(0x08);
  3975  001978  0E08               	movlw	8
  3976  00197A  ECF6  F00D         	call	_comando
  3977                           
  3978                           ;LCD.c: 50:     comando(0x00);
  3979  00197E  0E00               	movlw	0
  3980  001980  ECF6  F00D         	call	_comando
  3981                           
  3982                           ;LCD.c: 51:     comando(0x01);
  3983  001984  0E01               	movlw	1
  3984  001986  ECF6  F00D         	call	_comando
  3985                           
  3986                           ;LCD.c: 52:     comando(0x00);
  3987  00198A  0E00               	movlw	0
  3988  00198C  ECF6  F00D         	call	_comando
  3989                           
  3990                           ;LCD.c: 53:     comando(0x0D);
  3991  001990  0E0D               	movlw	13
  3992  001992  ECF6  F00D         	call	_comando
  3993  001996  0012               	return		;funcret
  3994  001998                     __end_of_begin:
  3995                           	opt callstack 0
  3996                           
  3997 ;; *************** function _comando *****************
  3998 ;; Defined at:
  3999 ;;		line 32 in file "LCD.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  a               1    wreg     unsigned char 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  a               1   10[COMRAM] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4013 ;;      Params:         0       0       0       0       0       0       0       0       0
  4014 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4015 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4016 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4017 ;;Total ram usage:        2 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    8
  4020 ;; This function calls:
  4021 ;;		_busdata
  4022 ;; This function is called by:
  4023 ;;		_begin
  4024 ;;		_setCursor
  4025 ;;		_caracter
  4026 ;;		_ocultarcursor
  4027 ;;		_create
  4028 ;;		_writecaracter
  4029 ;;		_clear
  4030 ;;		_home
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text25
  4035  001BEC                     __ptext25:
  4036                           	opt callstack 0
  4037  001BEC                     _comando:
  4038                           	opt callstack 21
  4039                           
  4040                           ;incstack = 0
  4041                           ;comando@a stored from wreg
  4042  001BEC  6E0B               	movwf	comando@a^0,c
  4043  001BEE                     
  4044                           ;LCD.c: 33:     PORTEbits.RE2=0;
  4045  001BEE  9484               	bcf	132,2,c	;volatile
  4046                           
  4047                           ;LCD.c: 34:     PORTEbits.RE2=1;
  4048  001BF0  8484               	bsf	132,2,c	;volatile
  4049  001BF2                     
  4050                           ;LCD.c: 36:     busdata(a);
  4051  001BF2  500B               	movf	comando@a^0,w,c
  4052  001BF4  EC27  F00C         	call	_busdata
  4053  001BF8                     
  4054                           ;LCD.c: 37:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4055  001BF8  0E03               	movlw	3
  4056  001BFA  6E0A               	movwf	??_comando^0,c
  4057  001BFC  0E98               	movlw	152
  4058  001BFE                     u2307:
  4059  001BFE  2EE8               	decfsz	wreg,f,c
  4060  001C00  D7FE               	bra	u2307
  4061  001C02  2E0A               	decfsz	??_comando^0,f,c
  4062  001C04  D7FC               	bra	u2307
  4063  001C06                     
  4064                           ;LCD.c: 38:     PORTEbits.RE2=0;
  4065  001C06  9484               	bcf	132,2,c	;volatile
  4066  001C08  0012               	return		;funcret
  4067  001C0A                     __end_of_comando:
  4068                           	opt callstack 0
  4069                           
  4070 ;; *************** function _busdata *****************
  4071 ;; Defined at:
  4072 ;;		line 4 in file "LCD.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  a               1    wreg     unsigned char 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  a               1    8[COMRAM] unsigned char 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4086 ;;      Params:         0       0       0       0       0       0       0       0       0
  4087 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4089 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4090 ;;Total ram usage:        1 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    7
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_comando
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text26
  4101  00184E                     __ptext26:
  4102                           	opt callstack 0
  4103  00184E                     _busdata:
  4104                           	opt callstack 21
  4105                           
  4106                           ;incstack = 0
  4107                           ;busdata@a stored from wreg
  4108  00184E  6E09               	movwf	busdata@a^0,c
  4109  001850                     
  4110                           ;LCD.c: 5:     if (a & 0x01){
  4111  001850  A009               	btfss	busdata@a^0,0,c
  4112  001852  EF2D  F00C         	goto	u1131
  4113  001856  EF2F  F00C         	goto	u1130
  4114  00185A                     u1131:
  4115  00185A  EF32  F00C         	goto	l202
  4116  00185E                     u1130:
  4117  00185E                     
  4118                           ;LCD.c: 6:         PORTDbits.RD4=1;
  4119  00185E  8883               	bsf	131,4,c	;volatile
  4120                           
  4121                           ;LCD.c: 7:     }
  4122  001860  EF33  F00C         	goto	l2095
  4123  001864                     l202:
  4124                           
  4125                           ;LCD.c: 9:         PORTDbits.RD4=0;
  4126  001864  9883               	bcf	131,4,c	;volatile
  4127  001866                     l2095:
  4128                           
  4129                           ;LCD.c: 11:     if (a & 0x02){
  4130  001866  A209               	btfss	busdata@a^0,1,c
  4131  001868  EF38  F00C         	goto	u1141
  4132  00186C  EF3A  F00C         	goto	u1140
  4133  001870                     u1141:
  4134  001870  EF3D  F00C         	goto	l204
  4135  001874                     u1140:
  4136  001874                     
  4137                           ;LCD.c: 12:         PORTDbits.RD5=1;
  4138  001874  8A83               	bsf	131,5,c	;volatile
  4139                           
  4140                           ;LCD.c: 13:     }
  4141  001876  EF3E  F00C         	goto	l2099
  4142  00187A                     l204:
  4143                           
  4144                           ;LCD.c: 15:         PORTDbits.RD5=0;
  4145  00187A  9A83               	bcf	131,5,c	;volatile
  4146  00187C                     l2099:
  4147                           
  4148                           ;LCD.c: 17:     if (a & 0x04){
  4149  00187C  A409               	btfss	busdata@a^0,2,c
  4150  00187E  EF43  F00C         	goto	u1151
  4151  001882  EF45  F00C         	goto	u1150
  4152  001886                     u1151:
  4153  001886  EF48  F00C         	goto	l206
  4154  00188A                     u1150:
  4155  00188A                     
  4156                           ;LCD.c: 18:         PORTDbits.RD6=1;
  4157  00188A  8C83               	bsf	131,6,c	;volatile
  4158                           
  4159                           ;LCD.c: 19:     }
  4160  00188C  EF49  F00C         	goto	l2103
  4161  001890                     l206:
  4162                           
  4163                           ;LCD.c: 21:         PORTDbits.RD6=0;
  4164  001890  9C83               	bcf	131,6,c	;volatile
  4165  001892                     l2103:
  4166                           
  4167                           ;LCD.c: 23:     if (a & 0x08){
  4168  001892  A609               	btfss	busdata@a^0,3,c
  4169  001894  EF4E  F00C         	goto	u1161
  4170  001898  EF50  F00C         	goto	u1160
  4171  00189C                     u1161:
  4172  00189C  EF53  F00C         	goto	l208
  4173  0018A0                     u1160:
  4174  0018A0                     
  4175                           ;LCD.c: 24:         PORTDbits.RD7=1;
  4176  0018A0  8E83               	bsf	131,7,c	;volatile
  4177                           
  4178                           ;LCD.c: 25:     }
  4179  0018A2  EF54  F00C         	goto	l210
  4180  0018A6                     l208:
  4181                           
  4182                           ;LCD.c: 27:         PORTDbits.RD7=0;
  4183  0018A6  9E83               	bcf	131,7,c	;volatile
  4184  0018A8                     l210:
  4185  0018A8  0012               	return		;funcret
  4186  0018AA                     __end_of_busdata:
  4187                           	opt callstack 0
  4188                           
  4189 ;; *************** function _SYSTEM_Initialize *****************
  4190 ;; Defined at:
  4191 ;;		line 5 in file "mcc_generated_files/mcc.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4208 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    9
  4212 ;; This function calls:
  4213 ;;		_EXT_INT_Initialize
  4214 ;;		_INTERRUPT_Initialize
  4215 ;;		_OSCILLATOR_Initialize
  4216 ;;		_PIN_MANAGER_Initialize
  4217 ;;		_TMR0_Initialize
  4218 ;; This function is called by:
  4219 ;;		_main
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text27
  4224  001C20                     __ptext27:
  4225                           	opt callstack 0
  4226  001C20                     _SYSTEM_Initialize:
  4227                           	opt callstack 21
  4228  001C20                     
  4229                           ;mcc_generated_files/mcc.c: 8:     INTERRUPT_Initialize();
  4230  001C20  EC2C  F00E         	call	_INTERRUPT_Initialize	;wreg free
  4231  001C24                     
  4232                           ;mcc_generated_files/mcc.c: 9:     PIN_MANAGER_Initialize();
  4233  001C24  ECEE  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  4234  001C28                     
  4235                           ;mcc_generated_files/mcc.c: 10:     OSCILLATOR_Initialize();
  4236  001C28  EC27  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  4237  001C2C                     
  4238                           ;mcc_generated_files/mcc.c: 11:     EXT_INT_Initialize();
  4239  001C2C  ECD4  F00D         	call	_EXT_INT_Initialize	;wreg free
  4240  001C30                     
  4241                           ;mcc_generated_files/mcc.c: 12:     TMR0_Initialize();
  4242  001C30  EC63  F00D         	call	_TMR0_Initialize	;wreg free
  4243  001C34  0012               	return		;funcret
  4244  001C36                     __end_of_SYSTEM_Initialize:
  4245                           	opt callstack 0
  4246                           
  4247 ;; *************** function _TMR0_Initialize *****************
  4248 ;; Defined at:
  4249 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4265 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4266 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4267 ;;Total ram usage:        2 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    8
  4270 ;; This function calls:
  4271 ;;		_TMR0_SetInterruptHandler
  4272 ;; This function is called by:
  4273 ;;		_SYSTEM_Initialize
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text28
  4278  001AC6                     __ptext28:
  4279                           	opt callstack 0
  4280  001AC6                     _TMR0_Initialize:
  4281                           	opt callstack 21
  4282  001AC6                     
  4283                           ;mcc_generated_files/tmr0.c: 23:     T0CONbits.T08BIT = 0;
  4284  001AC6  9CD5               	bcf	213,6,c	;volatile
  4285  001AC8                     
  4286                           ;mcc_generated_files/tmr0.c: 26:     TMR0H = 0x0B;
  4287  001AC8  0E0B               	movlw	11
  4288  001ACA  6ED7               	movwf	215,c	;volatile
  4289                           
  4290                           ;mcc_generated_files/tmr0.c: 29:     TMR0L = 0xDB;
  4291  001ACC  0EDB               	movlw	219
  4292  001ACE  6ED6               	movwf	214,c	;volatile
  4293  001AD0                     
  4294                           ;mcc_generated_files/tmr0.c: 33:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4295  001AD0  50D6               	movf	214,w,c	;volatile
  4296  001AD2  CFD7 F00B          	movff	4055,??_TMR0_Initialize	;volatile
  4297  001AD6  6A0C               	clrf	(??_TMR0_Initialize+1)^0,c
  4298  001AD8  C00B  F00C         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4299  001ADC  6A0B               	clrf	??_TMR0_Initialize^0,c
  4300  001ADE  100B               	iorwf	??_TMR0_Initialize^0,w,c
  4301  001AE0  6E54               	movwf	_timer0ReloadVal^0,c	;volatile
  4302  001AE2  500C               	movf	(??_TMR0_Initialize+1)^0,w,c
  4303  001AE4  6E55               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4304  001AE6                     
  4305                           ;mcc_generated_files/tmr0.c: 36:     INTCONbits.TMR0IF = 0;
  4306  001AE6  94F2               	bcf	242,2,c	;volatile
  4307  001AE8                     
  4308                           ;mcc_generated_files/tmr0.c: 39:     INTCONbits.TMR0IE = 1;
  4309  001AE8  8AF2               	bsf	242,5,c	;volatile
  4310  001AEA                     
  4311                           ;mcc_generated_files/tmr0.c: 42:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4312  001AEA  0E8C               	movlw	low _TMR0_DefaultInterruptHandler
  4313  001AEC  6E09               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4314  001AEE  0E1C               	movlw	high _TMR0_DefaultInterruptHandler
  4315  001AF0  6E0A               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4316  001AF2  EC22  F00E         	call	_TMR0_SetInterruptHandler	;wreg free
  4317  001AF6                     
  4318                           ;mcc_generated_files/tmr0.c: 45:     T0CON = 0x94;
  4319  001AF6  0E94               	movlw	148
  4320  001AF8  6ED5               	movwf	213,c	;volatile
  4321  001AFA  0012               	return		;funcret
  4322  001AFC                     __end_of_TMR0_Initialize:
  4323                           	opt callstack 0
  4324                           
  4325 ;; *************** function _TMR0_SetInterruptHandler *****************
  4326 ;; Defined at:
  4327 ;;		line 70 in file "mcc_generated_files/tmr0.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  4330 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4342 ;;      Params:         2       0       0       0       0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4345 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4346 ;;Total ram usage:        2 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    7
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_TMR0_Initialize
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text29
  4357  001C44                     __ptext29:
  4358                           	opt callstack 0
  4359  001C44                     _TMR0_SetInterruptHandler:
  4360                           	opt callstack 21
  4361  001C44                     
  4362                           ;mcc_generated_files/tmr0.c: 71:     TMR0_InterruptHandler = InterruptHandler;
  4363  001C44  C009  F0CA         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4364  001C48  C00A  F0CB         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4365  001C4C  0012               	return		;funcret
  4366  001C4E                     __end_of_TMR0_SetInterruptHandler:
  4367                           	opt callstack 0
  4368                           
  4369 ;; *************** function _PIN_MANAGER_Initialize *****************
  4370 ;; Defined at:
  4371 ;;		line 4 in file "mcc_generated_files/pin_manager.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4388 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4389 ;;Total ram usage:        0 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    7
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_SYSTEM_Initialize
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text30
  4400  0019DC                     __ptext30:
  4401                           	opt callstack 0
  4402  0019DC                     _PIN_MANAGER_Initialize:
  4403                           	opt callstack 22
  4404  0019DC                     
  4405                           ;mcc_generated_files/pin_manager.c: 9:     LATE = 0x00;
  4406  0019DC  0E00               	movlw	0
  4407  0019DE  6E8D               	movwf	141,c	;volatile
  4408                           
  4409                           ;mcc_generated_files/pin_manager.c: 10:     LATD = 0x00;
  4410  0019E0  0E00               	movlw	0
  4411  0019E2  6E8C               	movwf	140,c	;volatile
  4412                           
  4413                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  4414  0019E4  0E00               	movlw	0
  4415  0019E6  6E89               	movwf	137,c	;volatile
  4416                           
  4417                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  4418  0019E8  0E00               	movlw	0
  4419  0019EA  6E8A               	movwf	138,c	;volatile
  4420                           
  4421                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  4422  0019EC  0E00               	movlw	0
  4423  0019EE  6E8B               	movwf	139,c	;volatile
  4424                           
  4425                           ;mcc_generated_files/pin_manager.c: 18:     TRISE = 0x02;
  4426  0019F0  0E02               	movlw	2
  4427  0019F2  6E96               	movwf	150,c	;volatile
  4428  0019F4                     
  4429                           ;mcc_generated_files/pin_manager.c: 19:     TRISA = 0xFF;
  4430  0019F4  6892               	setf	146,c	;volatile
  4431  0019F6                     
  4432                           ;mcc_generated_files/pin_manager.c: 20:     TRISB = 0xFF;
  4433  0019F6  6893               	setf	147,c	;volatile
  4434                           
  4435                           ;mcc_generated_files/pin_manager.c: 21:     TRISC = 0xC7;
  4436  0019F8  0EC7               	movlw	199
  4437  0019FA  6E94               	movwf	148,c	;volatile
  4438                           
  4439                           ;mcc_generated_files/pin_manager.c: 22:     TRISD = 0x0E;
  4440  0019FC  0E0E               	movlw	14
  4441  0019FE  6E95               	movwf	149,c	;volatile
  4442                           
  4443                           ;mcc_generated_files/pin_manager.c: 27:     ANSELD = 0x0E;
  4444  001A00  0E0E               	movlw	14
  4445  001A02  010F               	movlb	15	; () banked
  4446  001A04  6F5E               	movwf	94,b	;volatile
  4447                           
  4448                           ;mcc_generated_files/pin_manager.c: 28:     ANSELC = 0xC4;
  4449  001A06  0EC4               	movlw	196
  4450  001A08  6F5D               	movwf	93,b	;volatile
  4451                           
  4452                           ;mcc_generated_files/pin_manager.c: 29:     ANSELB = 0x39;
  4453  001A0A  0E39               	movlw	57
  4454  001A0C  6F5C               	movwf	92,b	;volatile
  4455                           
  4456                           ;mcc_generated_files/pin_manager.c: 30:     ANSELE = 0x02;
  4457  001A0E  0E02               	movlw	2
  4458  001A10  6F5F               	movwf	95,b	;volatile
  4459                           
  4460                           ;mcc_generated_files/pin_manager.c: 31:     ANSELA = 0x2F;
  4461  001A12  0E2F               	movlw	47
  4462  001A14  6F5B               	movwf	91,b	;volatile
  4463                           
  4464                           ;mcc_generated_files/pin_manager.c: 36:     WPUB = 0x00;
  4465  001A16  0E00               	movlw	0
  4466  001A18  6E85               	movwf	133,c	;volatile
  4467  001A1A                     
  4468                           ; BSR set to: 15
  4469                           ;mcc_generated_files/pin_manager.c: 37:     INTCON2bits.nRBPU = 1;
  4470  001A1A  8EF1               	bsf	241,7,c	;volatile
  4471  001A1C                     
  4472                           ; BSR set to: 15
  4473  001A1C  0012               	return		;funcret
  4474  001A1E                     __end_of_PIN_MANAGER_Initialize:
  4475                           	opt callstack 0
  4476                           
  4477 ;; *************** function _OSCILLATOR_Initialize *****************
  4478 ;; Defined at:
  4479 ;;		line 15 in file "mcc_generated_files/mcc.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4496 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    7
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_SYSTEM_Initialize
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text31
  4508  001C4E                     __ptext31:
  4509                           	opt callstack 0
  4510  001C4E                     _OSCILLATOR_Initialize:
  4511                           	opt callstack 22
  4512  001C4E                     
  4513                           ;mcc_generated_files/mcc.c: 18:     OSCCON = 0x60;
  4514  001C4E  0E60               	movlw	96
  4515  001C50  6ED3               	movwf	211,c	;volatile
  4516                           
  4517                           ;mcc_generated_files/mcc.c: 20:     OSCCON2 = 0x00;
  4518  001C52  0E00               	movlw	0
  4519  001C54  6ED2               	movwf	210,c	;volatile
  4520  001C56  0012               	return		;funcret
  4521  001C58                     __end_of_OSCILLATOR_Initialize:
  4522                           	opt callstack 0
  4523                           
  4524 ;; *************** function _INTERRUPT_Initialize *****************
  4525 ;; Defined at:
  4526 ;;		line 5 in file "mcc_generated_files/interrupt_manager.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		None
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    7
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_SYSTEM_Initialize
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text32
  4555  001C58                     __ptext32:
  4556                           	opt callstack 0
  4557  001C58                     _INTERRUPT_Initialize:
  4558                           	opt callstack 22
  4559  001C58                     
  4560                           ;mcc_generated_files/interrupt_manager.c: 8:     RCONbits.IPEN = 1;
  4561  001C58  8ED0               	bsf	208,7,c	;volatile
  4562                           
  4563                           ;mcc_generated_files/interrupt_manager.c: 13:     INTCON2bits.TMR0IP = 1;
  4564  001C5A  84F1               	bsf	241,2,c	;volatile
  4565                           
  4566                           ;mcc_generated_files/interrupt_manager.c: 17:     INTCON3bits.INT1IP = 0;
  4567  001C5C  9CF0               	bcf	240,6,c	;volatile
  4568                           
  4569                           ;mcc_generated_files/interrupt_manager.c: 20:     INTCON3bits.INT2IP = 0;
  4570  001C5E  9EF0               	bcf	240,7,c	;volatile
  4571  001C60  0012               	return		;funcret
  4572  001C62                     __end_of_INTERRUPT_Initialize:
  4573                           	opt callstack 0
  4574                           
  4575 ;; *************** function _EXT_INT_Initialize *****************
  4576 ;; Defined at:
  4577 ;;		line 61 in file "mcc_generated_files/ext_int.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4591 ;;      Params:         0       0       0       0       0       0       0       0       0
  4592 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4594 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4595 ;;Total ram usage:        0 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    8
  4598 ;; This function calls:
  4599 ;;		_INT1_SetInterruptHandler
  4600 ;;		_INT2_SetInterruptHandler
  4601 ;; This function is called by:
  4602 ;;		_SYSTEM_Initialize
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text33
  4607  001BA8                     __ptext33:
  4608                           	opt callstack 0
  4609  001BA8                     _EXT_INT_Initialize:
  4610                           	opt callstack 21
  4611  001BA8                     
  4612                           ;mcc_generated_files/ext_int.c: 66:     (INTCON3bits.INT1IF = 0);
  4613  001BA8  90F0               	bcf	240,0,c	;volatile
  4614                           
  4615                           ;mcc_generated_files/ext_int.c: 67:     (INTCON2bits.INTEDG1 = 0);
  4616  001BAA  9AF1               	bcf	241,5,c	;volatile
  4617  001BAC                     
  4618                           ;mcc_generated_files/ext_int.c: 69:     INT1_SetInterruptHandler(INT1_DefaultInterruptHa
      +                          ndler);
  4619  001BAC  0E8A               	movlw	low _INT1_DefaultInterruptHandler
  4620  001BAE  6E09               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  4621  001BB0  0E1C               	movlw	high _INT1_DefaultInterruptHandler
  4622  001BB2  6E0A               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  4623  001BB4  EC36  F00E         	call	_INT1_SetInterruptHandler	;wreg free
  4624  001BB8                     
  4625                           ;mcc_generated_files/ext_int.c: 70:     (INTCON3bits.INT1IE = 1);
  4626  001BB8  86F0               	bsf	240,3,c	;volatile
  4627  001BBA                     
  4628                           ;mcc_generated_files/ext_int.c: 75:     (INTCON3bits.INT2IF = 0);
  4629  001BBA  92F0               	bcf	240,1,c	;volatile
  4630  001BBC                     
  4631                           ;mcc_generated_files/ext_int.c: 76:     (INTCON2bits.INTEDG2 = 0);
  4632  001BBC  98F1               	bcf	241,4,c	;volatile
  4633                           
  4634                           ;mcc_generated_files/ext_int.c: 78:     INT2_SetInterruptHandler(INT2_DefaultInterruptHa
      +                          ndler);
  4635  001BBE  0E88               	movlw	low _INT2_DefaultInterruptHandler
  4636  001BC0  6E09               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  4637  001BC2  0E1C               	movlw	high _INT2_DefaultInterruptHandler
  4638  001BC4  6E0A               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  4639  001BC6  EC31  F00E         	call	_INT2_SetInterruptHandler	;wreg free
  4640  001BCA                     
  4641                           ;mcc_generated_files/ext_int.c: 79:     (INTCON3bits.INT2IE = 1);
  4642  001BCA  88F0               	bsf	240,4,c	;volatile
  4643  001BCC  0012               	return		;funcret
  4644  001BCE                     __end_of_EXT_INT_Initialize:
  4645                           	opt callstack 0
  4646                           
  4647 ;; *************** function _INT2_SetInterruptHandler *****************
  4648 ;; Defined at:
  4649 ;;		line 52 in file "mcc_generated_files/ext_int.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  4652 ;;		 -> INT2_DefaultInterruptHandler(1), 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4664 ;;      Params:         2       0       0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4667 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    7
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_EXT_INT_Initialize
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text34
  4679  001C62                     __ptext34:
  4680                           	opt callstack 0
  4681  001C62                     _INT2_SetInterruptHandler:
  4682                           	opt callstack 21
  4683  001C62                     
  4684                           ;mcc_generated_files/ext_int.c: 53:     INT2_InterruptHandler = InterruptHandler;
  4685  001C62  C009  F0C6         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4686  001C66  C00A  F0C7         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4687  001C6A  0012               	return		;funcret
  4688  001C6C                     __end_of_INT2_SetInterruptHandler:
  4689                           	opt callstack 0
  4690                           
  4691 ;; *************** function _INT1_SetInterruptHandler *****************
  4692 ;; Defined at:
  4693 ;;		line 26 in file "mcc_generated_files/ext_int.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  4696 ;;		 -> INT1_DefaultInterruptHandler(1), 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4708 ;;      Params:         2       0       0       0       0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4711 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4712 ;;Total ram usage:        2 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    7
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_EXT_INT_Initialize
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text35
  4723  001C6C                     __ptext35:
  4724                           	opt callstack 0
  4725  001C6C                     _INT1_SetInterruptHandler:
  4726                           	opt callstack 21
  4727  001C6C                     
  4728                           ;mcc_generated_files/ext_int.c: 27:     INT1_InterruptHandler = InterruptHandler;
  4729  001C6C  C009  F0C8         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4730  001C70  C00A  F0C9         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4731  001C74  0012               	return		;funcret
  4732  001C76                     __end_of_INT1_SetInterruptHandler:
  4733                           	opt callstack 0
  4734                           
  4735 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  4736 ;; Defined at:
  4737 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4753 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4754 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4755 ;;Total ram usage:        5 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    6
  4758 ;; This function calls:
  4759 ;;		_INT1_ISR
  4760 ;;		_INT2_ISR
  4761 ;; This function is called by:
  4762 ;;		Interrupt level 1
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	intcodelo
  4767  000018                     __pintcodelo:
  4768                           	opt callstack 0
  4769  000018                     _INTERRUPT_InterruptManagerLow:
  4770                           	opt callstack 16
  4771                           
  4772                           ;incstack = 0
  4773  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4774  00001A  CFD8 F004          	movff	status,??_INTERRUPT_InterruptManagerLow
  4775  00001E  CFE8 F005          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  4776  000022  CFE0 F006          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  4777  000026  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  4778  00002A  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  4779  00002E                     
  4780                           ;mcc_generated_files/interrupt_manager.c: 54:     if(INTCON3bits.INT1IE == 1 && INTCON3b
      +                          its.INT1IF == 1)
  4781  00002E  A6F0               	btfss	240,3,c	;volatile
  4782  000030  EF1C  F000         	goto	i1u175_21
  4783  000034  EF1E  F000         	goto	i1u175_20
  4784  000038                     i1u175_21:
  4785  000038  EF3A  F000         	goto	i1l187
  4786  00003C                     i1u175_20:
  4787  00003C  A0F0               	btfss	240,0,c	;volatile
  4788  00003E  EF23  F000         	goto	i1u176_21
  4789  000042  EF25  F000         	goto	i1u176_20
  4790  000046                     i1u176_21:
  4791  000046  EF3A  F000         	goto	i1l187
  4792  00004A                     i1u176_20:
  4793  00004A                     
  4794                           ;mcc_generated_files/interrupt_manager.c: 55:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 56:         INT1_ISR();
  4795  00004A  EC3F  F00E         	call	_INT1_ISR	;wreg free
  4796  00004E                     
  4797                           ;mcc_generated_files/interrupt_manager.c: 57:         cont2++;
  4798  00004E  0100               	movlb	0	; () banked
  4799  000050  4B6E               	infsnz	_cont2& (0+255),f,b
  4800  000052  2B6F               	incf	(_cont2+1)& (0+255),f,b
  4801  000054                     
  4802                           ; BSR set to: 0
  4803                           ;mcc_generated_files/interrupt_manager.c: 58:         if(cont2==61){
  4804  000054  0E3D               	movlw	61
  4805  000056  196E               	xorwf	_cont2& (0+255),w,b
  4806  000058  116F               	iorwf	(_cont2+1)& (0+255),w,b
  4807  00005A  A4D8               	btfss	status,2,c
  4808  00005C  EF32  F000         	goto	i1u177_21
  4809  000060  EF34  F000         	goto	i1u177_20
  4810  000064                     i1u177_21:
  4811  000064  EF5A  F000         	goto	i1l193
  4812  000068                     i1u177_20:
  4813  000068                     i1l2549:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;mcc_generated_files/interrupt_manager.c: 59:             cont2=0;
  4817  000068  0E00               	movlw	0
  4818  00006A  6F6F               	movwf	(_cont2+1)& (0+255),b
  4819  00006C  0E00               	movlw	0
  4820  00006E  6F6E               	movwf	_cont2& (0+255),b
  4821  000070  EF5A  F000         	goto	i1l193
  4822  000074                     i1l187:
  4823  000074  A8F0               	btfss	240,4,c	;volatile
  4824  000076  EF3F  F000         	goto	i1u178_21
  4825  00007A  EF41  F000         	goto	i1u178_20
  4826  00007E                     i1u178_21:
  4827  00007E  EF5A  F000         	goto	i1l193
  4828  000082                     i1u178_20:
  4829  000082  A2F0               	btfss	240,1,c	;volatile
  4830  000084  EF46  F000         	goto	i1u179_21
  4831  000088  EF48  F000         	goto	i1u179_20
  4832  00008C                     i1u179_21:
  4833  00008C  EF5A  F000         	goto	i1l193
  4834  000090                     i1u179_20:
  4835  000090                     
  4836                           ;mcc_generated_files/interrupt_manager.c: 63:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         INT2_ISR();
  4837  000090  EC3B  F00E         	call	_INT2_ISR	;wreg free
  4838  000094                     
  4839                           ;mcc_generated_files/interrupt_manager.c: 65:         cont2--;
  4840  000094  0100               	movlb	0	; () banked
  4841  000096  076E               	decf	_cont2& (0+255),f,b
  4842  000098  A0D8               	btfss	status,0,c
  4843  00009A  076F               	decf	(_cont2+1)& (0+255),f,b
  4844  00009C                     
  4845                           ; BSR set to: 0
  4846                           ;mcc_generated_files/interrupt_manager.c: 66:         if(cont2==-1){
  4847  00009C  296E               	incf	_cont2& (0+255),w,b
  4848  00009E  E106               	bnz	i1u180_21
  4849  0000A0  296F               	incf	(_cont2+1)& (0+255),w,b
  4850  0000A2  A4D8               	btfss	status,2,c
  4851  0000A4  EF56  F000         	goto	i1u180_21
  4852  0000A8  EF58  F000         	goto	i1u180_20
  4853  0000AC                     i1u180_21:
  4854  0000AC  EF5A  F000         	goto	i1l193
  4855  0000B0                     i1u180_20:
  4856  0000B0  EF34  F000         	goto	i1l2549
  4857  0000B4                     i1l193:
  4858  0000B4  C008  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  4859  0000B8  C007  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  4860  0000BC  C006  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  4861  0000C0  C005  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  4862  0000C4  C004  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  4863  0000C8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4864  0000CA  0010               	retfie	
  4865  0000CC                     __end_of_INTERRUPT_InterruptManagerLow:
  4866                           	opt callstack 0
  4867                           
  4868 ;; *************** function _INT2_ISR *****************
  4869 ;; Defined at:
  4870 ;;		line 34 in file "mcc_generated_files/ext_int.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    5
  4891 ;; This function calls:
  4892 ;;		_INT2_CallBack
  4893 ;; This function is called by:
  4894 ;;		_INTERRUPT_InterruptManagerLow
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text37
  4899  001C76                     __ptext37:
  4900                           	opt callstack 0
  4901  001C76                     _INT2_ISR:
  4902                           	opt callstack 16
  4903  001C76                     
  4904                           ;mcc_generated_files/ext_int.c: 36:     (INTCON3bits.INT2IF = 0);
  4905  001C76  92F0               	bcf	240,1,c	;volatile
  4906  001C78                     
  4907                           ;mcc_generated_files/ext_int.c: 39:     INT2_CallBack();
  4908  001C78  EC7E  F00D         	call	_INT2_CallBack	;wreg free
  4909  001C7C  0012               	return		;funcret
  4910  001C7E                     __end_of_INT2_ISR:
  4911                           	opt callstack 0
  4912                           
  4913 ;; *************** function _INT2_CallBack *****************
  4914 ;; Defined at:
  4915 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;		None
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;		None
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4929 ;;      Params:         0       0       0       0       0       0       0       0       0
  4930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4932 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4933 ;;Total ram usage:        0 bytes
  4934 ;; Hardware stack levels used:    1
  4935 ;; Hardware stack levels required when called:    4
  4936 ;; This function calls:
  4937 ;;		Absolute function
  4938 ;;		_INT2_DefaultInterruptHandler
  4939 ;; This function is called by:
  4940 ;;		_INT2_ISR
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text38
  4945  001AFC                     __ptext38:
  4946                           	opt callstack 0
  4947  001AFC                     _INT2_CallBack:
  4948                           	opt callstack 16
  4949  001AFC                     
  4950                           ;mcc_generated_files/ext_int.c: 46:     if(INT2_InterruptHandler)
  4951  001AFC  0100               	movlb	0	; () banked
  4952  001AFE  51C6               	movf	_INT2_InterruptHandler& (0+255),w,b
  4953  001B00  11C7               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  4954  001B02  B4D8               	btfsc	status,2,c
  4955  001B04  EF86  F00D         	goto	i1u143_21
  4956  001B08  EF88  F00D         	goto	i1u143_20
  4957  001B0C                     i1u143_21:
  4958  001B0C  EF95  F00D         	goto	i1l63
  4959  001B10                     i1u143_20:
  4960  001B10                     
  4961                           ; BSR set to: 0
  4962                           ;mcc_generated_files/ext_int.c: 47:     {;mcc_generated_files/ext_int.c: 48:         INT
      +                          2_InterruptHandler();
  4963  001B10  D802               	call	i1u144_28
  4964  001B12  EF95  F00D         	goto	i1u144_29
  4965  001B16                     i1u144_28:
  4966  001B16  0005               	push	
  4967  001B18  6EFA               	movwf	pclath,c
  4968  001B1A  51C6               	movf	_INT2_InterruptHandler& (0+255),w,b
  4969  001B1C  6EFD               	movwf	tosl,c
  4970  001B1E  51C7               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  4971  001B20  6EFE               	movwf	tosh,c
  4972  001B22  50F8               	movf	tblptru,w,c
  4973  001B24  6EFF               	movwf	tosu,c
  4974  001B26  50FA               	movf	pclath,w,c
  4975  001B28  0012               	return		;indir
  4976  001B2A                     i1u144_29:
  4977  001B2A                     i1l63:
  4978  001B2A  0012               	return		;funcret
  4979  001B2C                     __end_of_INT2_CallBack:
  4980                           	opt callstack 0
  4981                           
  4982 ;; *************** function _INT2_DefaultInterruptHandler *****************
  4983 ;; Defined at:
  4984 ;;		line 56 in file "mcc_generated_files/ext_int.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		None
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4998 ;;      Params:         0       0       0       0       0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5001 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    3
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_EXT_INT_Initialize
  5009 ;;		_INT2_CallBack
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text39
  5014  001C88                     __ptext39:
  5015                           	opt callstack 0
  5016  001C88                     _INT2_DefaultInterruptHandler:
  5017                           	opt callstack 16
  5018  001C88  0012               	return		;funcret
  5019  001C8A                     __end_of_INT2_DefaultInterruptHandler:
  5020                           	opt callstack 0
  5021                           
  5022 ;; *************** function _INT1_ISR *****************
  5023 ;; Defined at:
  5024 ;;		line 8 in file "mcc_generated_files/ext_int.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5038 ;;      Params:         0       0       0       0       0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    5
  5045 ;; This function calls:
  5046 ;;		_INT1_CallBack
  5047 ;; This function is called by:
  5048 ;;		_INTERRUPT_InterruptManagerLow
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text40
  5053  001C7E                     __ptext40:
  5054                           	opt callstack 0
  5055  001C7E                     _INT1_ISR:
  5056                           	opt callstack 16
  5057  001C7E                     
  5058                           ;mcc_generated_files/ext_int.c: 10:     (INTCON3bits.INT1IF = 0);
  5059  001C7E  90F0               	bcf	240,0,c	;volatile
  5060  001C80                     
  5061                           ;mcc_generated_files/ext_int.c: 13:     INT1_CallBack();
  5062  001C80  EC96  F00D         	call	_INT1_CallBack	;wreg free
  5063  001C84  0012               	return		;funcret
  5064  001C86                     __end_of_INT1_ISR:
  5065                           	opt callstack 0
  5066                           
  5067 ;; *************** function _INT1_CallBack *****************
  5068 ;; Defined at:
  5069 ;;		line 17 in file "mcc_generated_files/ext_int.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5086 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    4
  5090 ;; This function calls:
  5091 ;;		Absolute function
  5092 ;;		_INT1_DefaultInterruptHandler
  5093 ;; This function is called by:
  5094 ;;		_INT1_ISR
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text41
  5099  001B2C                     __ptext41:
  5100                           	opt callstack 0
  5101  001B2C                     _INT1_CallBack:
  5102                           	opt callstack 16
  5103  001B2C                     
  5104                           ;mcc_generated_files/ext_int.c: 20:     if(INT1_InterruptHandler)
  5105  001B2C  0100               	movlb	0	; () banked
  5106  001B2E  51C8               	movf	_INT1_InterruptHandler& (0+255),w,b
  5107  001B30  11C9               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  5108  001B32  B4D8               	btfsc	status,2,c
  5109  001B34  EF9E  F00D         	goto	i1u141_21
  5110  001B38  EFA0  F00D         	goto	i1u141_20
  5111  001B3C                     i1u141_21:
  5112  001B3C  EFAD  F00D         	goto	i1l50
  5113  001B40                     i1u141_20:
  5114  001B40                     
  5115                           ; BSR set to: 0
  5116                           ;mcc_generated_files/ext_int.c: 21:     {;mcc_generated_files/ext_int.c: 22:         INT
      +                          1_InterruptHandler();
  5117  001B40  D802               	call	i1u142_28
  5118  001B42  EFAD  F00D         	goto	i1u142_29
  5119  001B46                     i1u142_28:
  5120  001B46  0005               	push	
  5121  001B48  6EFA               	movwf	pclath,c
  5122  001B4A  51C8               	movf	_INT1_InterruptHandler& (0+255),w,b
  5123  001B4C  6EFD               	movwf	tosl,c
  5124  001B4E  51C9               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  5125  001B50  6EFE               	movwf	tosh,c
  5126  001B52  50F8               	movf	tblptru,w,c
  5127  001B54  6EFF               	movwf	tosu,c
  5128  001B56  50FA               	movf	pclath,w,c
  5129  001B58  0012               	return		;indir
  5130  001B5A                     i1u142_29:
  5131  001B5A                     i1l50:
  5132  001B5A  0012               	return		;funcret
  5133  001B5C                     __end_of_INT1_CallBack:
  5134                           	opt callstack 0
  5135                           
  5136 ;; *************** function _INT1_DefaultInterruptHandler *****************
  5137 ;; Defined at:
  5138 ;;		line 30 in file "mcc_generated_files/ext_int.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		None
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5152 ;;      Params:         0       0       0       0       0       0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5155 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    3
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_EXT_INT_Initialize
  5163 ;;		_INT1_CallBack
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text42
  5168  001C8A                     __ptext42:
  5169                           	opt callstack 0
  5170  001C8A                     _INT1_DefaultInterruptHandler:
  5171                           	opt callstack 16
  5172  001C8A  0012               	return		;funcret
  5173  001C8C                     __end_of_INT1_DefaultInterruptHandler:
  5174                           	opt callstack 0
  5175                           
  5176 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  5177 ;; Defined at:
  5178 ;;		line 24 in file "mcc_generated_files/interrupt_manager.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;		None
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0
  5193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5194 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5195 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5196 ;;Total ram usage:        3 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    2
  5199 ;; This function calls:
  5200 ;;		_TMR0_ISR
  5201 ;; This function is called by:
  5202 ;;		Interrupt level 2
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	intcode
  5207  000008                     __pintcode:
  5208                           	opt callstack 0
  5209  000008                     _INTERRUPT_InterruptManagerHigh:
  5210                           	opt callstack 16
  5211                           
  5212                           ;incstack = 0
  5213  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5214  00000A  EFE4  F00A         	goto	int_func
  5215                           
  5216                           	psect	intcode_body
  5217  0015C8                     __pintcode_body:
  5218                           	opt callstack 16
  5219  0015C8                     int_func:
  5220                           	opt callstack 16
  5221  0015C8  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManagerHigh+1
  5222  0015CC  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+2
  5223  0015D0                     
  5224                           ;mcc_generated_files/interrupt_manager.c: 27:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5225  0015D0  AAF2               	btfss	242,5,c	;volatile
  5226  0015D2  EFED  F00A         	goto	i2u169_41
  5227  0015D6  EFEF  F00A         	goto	i2u169_40
  5228  0015DA                     i2u169_41:
  5229  0015DA  EF39  F00B         	goto	i2l182
  5230  0015DE                     i2u169_40:
  5231  0015DE  A4F2               	btfss	242,2,c	;volatile
  5232  0015E0  EFF4  F00A         	goto	i2u170_41
  5233  0015E4  EFF6  F00A         	goto	i2u170_40
  5234  0015E8                     i2u170_41:
  5235  0015E8  EF39  F00B         	goto	i2l182
  5236  0015EC                     i2u170_40:
  5237  0015EC                     
  5238                           ;mcc_generated_files/interrupt_manager.c: 28:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 29:         TMR0_ISR();
  5239  0015EC  EC0F  F00D         	call	_TMR0_ISR	;wreg free
  5240  0015F0                     
  5241                           ;mcc_generated_files/interrupt_manager.c: 30:         cont++;
  5242  0015F0  0100               	movlb	0	; () banked
  5243  0015F2  4B72               	infsnz	_cont& (0+255),f,b
  5244  0015F4  2B73               	incf	(_cont+1)& (0+255),f,b
  5245  0015F6                     
  5246                           ; BSR set to: 0
  5247                           ;mcc_generated_files/interrupt_manager.c: 31:         if(cont==60){
  5248  0015F6  0E3C               	movlw	60
  5249  0015F8  1972               	xorwf	_cont& (0+255),w,b
  5250  0015FA  1173               	iorwf	(_cont+1)& (0+255),w,b
  5251  0015FC  A4D8               	btfss	status,2,c
  5252  0015FE  EF03  F00B         	goto	i2u171_41
  5253  001602  EF05  F00B         	goto	i2u171_40
  5254  001606                     i2u171_41:
  5255  001606  EF0B  F00B         	goto	i2l2527
  5256  00160A                     i2u171_40:
  5257  00160A                     
  5258                           ; BSR set to: 0
  5259                           ;mcc_generated_files/interrupt_manager.c: 32:             cont=0;
  5260  00160A  0E00               	movlw	0
  5261  00160C  6F73               	movwf	(_cont+1)& (0+255),b
  5262  00160E  0E00               	movlw	0
  5263  001610  6F72               	movwf	_cont& (0+255),b
  5264  001612                     
  5265                           ; BSR set to: 0
  5266                           ;mcc_generated_files/interrupt_manager.c: 33:             cont1++;
  5267  001612  4B70               	infsnz	_cont1& (0+255),f,b
  5268  001614  2B71               	incf	(_cont1+1)& (0+255),f,b
  5269  001616                     i2l2527:
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;mcc_generated_files/interrupt_manager.c: 35:         if(cont1==60){
  5273  001616  0E3C               	movlw	60
  5274  001618  1970               	xorwf	_cont1& (0+255),w,b
  5275  00161A  1171               	iorwf	(_cont1+1)& (0+255),w,b
  5276  00161C  A4D8               	btfss	status,2,c
  5277  00161E  EF13  F00B         	goto	i2u172_41
  5278  001622  EF15  F00B         	goto	i2u172_40
  5279  001626                     i2u172_41:
  5280  001626  EF1B  F00B         	goto	i2l2533
  5281  00162A                     i2u172_40:
  5282  00162A                     
  5283                           ; BSR set to: 0
  5284                           ;mcc_generated_files/interrupt_manager.c: 36:             cont1=0;
  5285  00162A  0E00               	movlw	0
  5286  00162C  6F71               	movwf	(_cont1+1)& (0+255),b
  5287  00162E  0E00               	movlw	0
  5288  001630  6F70               	movwf	_cont1& (0+255),b
  5289  001632                     
  5290                           ; BSR set to: 0
  5291                           ;mcc_generated_files/interrupt_manager.c: 37:             cont2++;
  5292  001632  4B6E               	infsnz	_cont2& (0+255),f,b
  5293  001634  2B6F               	incf	(_cont2+1)& (0+255),f,b
  5294  001636                     i2l2533:
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;mcc_generated_files/interrupt_manager.c: 39:         if(cont2==24){
  5298  001636  0E18               	movlw	24
  5299  001638  196E               	xorwf	_cont2& (0+255),w,b
  5300  00163A  116F               	iorwf	(_cont2+1)& (0+255),w,b
  5301  00163C  A4D8               	btfss	status,2,c
  5302  00163E  EF23  F00B         	goto	i2u173_41
  5303  001642  EF25  F00B         	goto	i2u173_40
  5304  001646                     i2u173_41:
  5305  001646  EF29  F00B         	goto	i2l2537
  5306  00164A                     i2u173_40:
  5307  00164A                     
  5308                           ; BSR set to: 0
  5309                           ;mcc_generated_files/interrupt_manager.c: 40:             cont2=0;
  5310  00164A  0E00               	movlw	0
  5311  00164C  6F6F               	movwf	(_cont2+1)& (0+255),b
  5312  00164E  0E00               	movlw	0
  5313  001650  6F6E               	movwf	_cont2& (0+255),b
  5314  001652                     i2l2537:
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;mcc_generated_files/interrupt_manager.c: 43:         PORTDbits.RD0=~PORTDbits.RD0;
  5318  001652  B083               	btfsc	131,0,c	;volatile
  5319  001654  EF2E  F00B         	goto	i2u174_41
  5320  001658  EF31  F00B         	goto	i2u174_40
  5321  00165C                     i2u174_41:
  5322  00165C  0E01               	movlw	1
  5323  00165E  EF32  F00B         	goto	i2u174_46
  5324  001662                     i2u174_40:
  5325  001662  0E00               	movlw	0
  5326  001664                     i2u174_46:
  5327  001664  0AFF               	xorlw	255
  5328  001666  6E01               	movwf	??_INTERRUPT_InterruptManagerHigh^0,c
  5329  001668  5083               	movf	131,w,c	;volatile
  5330  00166A  1801               	xorwf	??_INTERRUPT_InterruptManagerHigh^0,w,c
  5331  00166C  0BFE               	andlw	-2
  5332  00166E  1801               	xorwf	??_INTERRUPT_InterruptManagerHigh^0,w,c
  5333  001670  6E83               	movwf	131,c	;volatile
  5334  001672                     i2l182:
  5335  001672  C003  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+2,pclatu
  5336  001676  C002  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclath
  5337  00167A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5338  00167C  0011               	retfie		f
  5339  00167E                     __end_of_INTERRUPT_InterruptManagerHigh:
  5340                           	opt callstack 0
  5341                           
  5342 ;; *************** function _TMR0_ISR *****************
  5343 ;; Defined at:
  5344 ;;		line 50 in file "mcc_generated_files/tmr0.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5358 ;;      Params:         0       0       0       0       0       0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5361 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5362 ;;Total ram usage:        0 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    1
  5365 ;; This function calls:
  5366 ;;		Absolute function
  5367 ;;		_TMR0_DefaultInterruptHandler
  5368 ;; This function is called by:
  5369 ;;		_INTERRUPT_InterruptManagerHigh
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text44
  5374  001A1E                     __ptext44:
  5375                           	opt callstack 0
  5376  001A1E                     _TMR0_ISR:
  5377                           	opt callstack 16
  5378  001A1E                     
  5379                           ;mcc_generated_files/tmr0.c: 54:     INTCONbits.TMR0IF = 0;
  5380  001A1E  94F2               	bcf	242,2,c	;volatile
  5381  001A20                     
  5382                           ;mcc_generated_files/tmr0.c: 58:     TMR0H = timer0ReloadVal >> 8;
  5383  001A20  5055               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5384  001A22  6ED7               	movwf	215,c	;volatile
  5385  001A24                     
  5386                           ;mcc_generated_files/tmr0.c: 59:     TMR0L = (uint8_t) timer0ReloadVal;
  5387  001A24  C054  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5388  001A28                     
  5389                           ;mcc_generated_files/tmr0.c: 61:     if(TMR0_InterruptHandler)
  5390  001A28  0100               	movlb	0	; () banked
  5391  001A2A  51CA               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5392  001A2C  11CB               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5393  001A2E  B4D8               	btfsc	status,2,c
  5394  001A30  EF1C  F00D         	goto	i2u153_41
  5395  001A34  EF1E  F00D         	goto	i2u153_40
  5396  001A38                     i2u153_41:
  5397  001A38  EF2B  F00D         	goto	i2l25
  5398  001A3C                     i2u153_40:
  5399  001A3C                     
  5400                           ; BSR set to: 0
  5401                           ;mcc_generated_files/tmr0.c: 62:     {;mcc_generated_files/tmr0.c: 63:         TMR0_Inte
      +                          rruptHandler();
  5402  001A3C  D802               	call	i2u154_48
  5403  001A3E  EF2B  F00D         	goto	i2u154_49
  5404  001A42                     i2u154_48:
  5405  001A42  0005               	push	
  5406  001A44  6EFA               	movwf	pclath,c
  5407  001A46  51CA               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5408  001A48  6EFD               	movwf	tosl,c
  5409  001A4A  51CB               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5410  001A4C  6EFE               	movwf	tosh,c
  5411  001A4E  50F8               	movf	tblptru,w,c
  5412  001A50  6EFF               	movwf	tosu,c
  5413  001A52  50FA               	movf	pclath,w,c
  5414  001A54  0012               	return		;indir
  5415  001A56                     i2u154_49:
  5416  001A56                     i2l25:
  5417  001A56  0012               	return		;funcret
  5418  001A58                     __end_of_TMR0_ISR:
  5419                           	opt callstack 0
  5420                           
  5421 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5422 ;; Defined at:
  5423 ;;		line 74 in file "mcc_generated_files/tmr0.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		None
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_TMR0_Initialize
  5447 ;;		_TMR0_ISR
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text45
  5452  001C8C                     __ptext45:
  5453                           	opt callstack 0
  5454  001C8C                     _TMR0_DefaultInterruptHandler:
  5455                           	opt callstack 16
  5456  001C8C  0012               	return		;funcret
  5457  001C8E                     __end_of_TMR0_DefaultInterruptHandler:
  5458                           	opt callstack 0
  5459                           
  5460                           	psect	text46
  5461  000000                     __ptext46:
  5462                           	opt callstack 0
  5463  000000                     
  5464                           	psect	rparam
  5465  0000                     
  5466                           	psect	temp
  5467  000056                     btemp:
  5468                           	opt callstack 0
  5469  000056                     	ds	1
  5470  0000                     int$flags	set	btemp
  5471  0000                     wtemp8	set	btemp+1
  5472  0000                     ttemp5	set	btemp+1
  5473  0000                     ttemp6	set	btemp+4
  5474  0000                     ttemp7	set	btemp+8
  5475                           tosu	equ	0xFFF
  5476                           tosh	equ	0xFFE
  5477                           tosl	equ	0xFFD
  5478                           stkptr	equ	0xFFC
  5479                           pclatu	equ	0xFFB
  5480                           pclath	equ	0xFFA
  5481                           pcl	equ	0xFF9
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           indf0	equ	0xFEF
  5489                           postinc0	equ	0xFEE
  5490                           postdec0	equ	0xFED
  5491                           preinc0	equ	0xFEC
  5492                           plusw0	equ	0xFEB
  5493                           fsr0h	equ	0xFEA
  5494                           fsr0l	equ	0xFE9
  5495                           wreg	equ	0xFE8
  5496                           indf1	equ	0xFE7
  5497                           postinc1	equ	0xFE6
  5498                           postdec1	equ	0xFE5
  5499                           preinc1	equ	0xFE4
  5500                           plusw1	equ	0xFE3
  5501                           fsr1h	equ	0xFE2
  5502                           fsr1l	equ	0xFE1
  5503                           bsr	equ	0xFE0
  5504                           indf2	equ	0xFDF
  5505                           postinc2	equ	0xFDE
  5506                           postdec2	equ	0xFDD
  5507                           preinc2	equ	0xFDC
  5508                           plusw2	equ	0xFDB
  5509                           fsr2h	equ	0xFDA
  5510                           fsr2l	equ	0xFD9
  5511                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         70
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      85
    BANK0           160     38     108
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1617_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    serial_trama@data	PTR unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[3]), horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    print@a	PTR unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[2]), STR_5(CODE[2]), horas(BANK0[4]), minut(BANK0[4]), 
		 -> segun(BANK0[4]), STR_1(CODE[12]), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _setCursor->_comando
    _serial_trama->_serial_print
    _serial_begin->___aldiv
    _print->_caracter
    _caracter->_comando
    _ocultarcursor->_comando
    _begin->_comando
    _comando->_busdata
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13712
                                             36 BANK0      2     2      0
                  _SYSTEM_Initialize
                              _begin
                      _ocultarcursor
                              _print
                       _serial_begin
                       _serial_print
                       _serial_trama
                          _setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   10275
                                             20 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9423
                                             12 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    8896
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4829
                                             35 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              8 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              8 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1565
                                             15 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              8 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            7     6      1    1014
                                             11 COMRAM     7     6      1
                            _comando
 ---------------------------------------------------------------------------------
 (1) _serial_trama                                         6     4      2     416
                                              9 COMRAM     6     4      2
                       _serial_print
 ---------------------------------------------------------------------------------
 (2) _serial_print                                         1     1      0      22
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _serial_begin                                         8     4      4     725
                                             22 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              8 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _print                                                6     4      2     746
                                             14 COMRAM     6     4      2
                           _caracter
 ---------------------------------------------------------------------------------
 (2) _caracter                                             3     3      0     200
                                             11 COMRAM     3     3      0
                            _comando
 ---------------------------------------------------------------------------------
 (1) _ocultarcursor                                        0     0      0     110
                            _comando
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0     110
                            _comando
 ---------------------------------------------------------------------------------
 (2) _comando                                              2     2      0     110
                                              9 COMRAM     2     2      0
                            _busdata
 ---------------------------------------------------------------------------------
 (3) _busdata                                              1     1      0      88
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             10 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     196
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        5     5      0       0
                                              3 COMRAM     5     5      0
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (10) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                      3     3      0       0
                                              0 COMRAM     3     3      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _begin
     _comando
       _busdata
   _ocultarcursor
     _comando
       _busdata
   _print
     _caracter
       _comando
         _busdata
   _serial_begin
     ___aldiv
   _serial_print
   _serial_trama
     _serial_print
   _setCursor
     _comando
       _busdata
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _INTERRUPT_InterruptManagerLow (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     26      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      55       1       90.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1       6        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 07 05:49:52 2020

                                      l21 1AFA                                        l28 1C4C  
                                      l53 1C74                                        l72 1BCC  
                                      l66 1C6A                                        bsr 000FE0  
                     ___wmul@multiplicand 000B                           _timer0ReloadVal 0054  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l101 1C34  
                                     l104 1C56                                       l210 18A8  
                                     l202 1864                                       l204 187A  
                                     l220 10E2                                       l141 1A1C  
                                     l213 1C08                                       l221 1128  
                                     l206 1890                                       l223 116E  
                                     l208 18A6                                       l216 1996  
                                     l232 1778                                       l312 17EA  
                                     l226 1BEA                                       l410 184C  
                                     l315 1C0C                                       l219 109C  
                                     l403 0B5E                                       l172 1C60  
                                     l324 16FA                                       l413 1BA6  
                                     l318 1C1E                                       l249 1C42  
                                     l361 15C6                                       l409 1844  
                                     l356 154A                                       l366 0B96  
                                     l390 0908                                       l359 158C  
                                     l376 0D5E                                       l368 0B9E  
                                     l492 127A                                       l851 134A  
                                     l861 141A                                       l858 136A  
                                     l868 143A                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _pad 1506  
                                     tosl 000FFD                                       wreg 000FE8  
                           _INT1_CallBack 1B2C                                      l1112 0EE6  
                                    l1115 0EEE                                      l2101 188A  
                                    l1141 1504                                      l1118 1A8E  
                                    l1126 194C                                      l2103 1892  
                                    l2105 18A0                                      l3001 0EA6  
                                    l3003 0EB8                                      l3011 0816  
                                    l1156 18FA                                      l2301 1AC8  
                                    l3005 0ECA                                      l1149 19DA  
                                    l1165 1AC4                                      l3021 086A  
                                    l3013 083A                                      l2311 1AF6  
                                    l2303 1AD0                                      l1159 1C86  
                                    l3023 086C                                      l3015 0848  
                                    l3111 17EC                                      l2321 1BA8  
                                    l2305 1AE6                                      l2401 123A  
                                    l3041 0896                                      l3033 088A  
                                    l3025 087E                                      l3017 0858  
                                    l3113 17F4                                      l3121 18BC  
                                    l2331 1BCA                                      l2323 1BAC  
                                    l2307 1AE8                                      l2091 1850  
                                    l2403 1244                                      l3051 0918  
                                    l3019 085C                                      l3115 1802  
                                    l3123 18C4                                      l3131 0EF0  
                                    l2325 1BB8                                      l2333 1C58  
                                    l2341 1A1A                                      l2309 1AEA  
                                    l2093 185E                                      l2405 124A  
                                    l3061 09AE                                      l3053 093C  
                                    l3045 08A2                                      l3037 0890  
                                    l3029 0884                                      l3117 1828  
                                    l3125 18CC                                      l3141 0EFE  
                                    l3133 0EF4                                      l2327 1BBA  
                                    l2343 1C4E                                      l2335 19DC  
                                    l2431 1C20                                      l2095 1866  
                                    l2191 1BEE                                      l2351 1BDC  
                                    l2407 125A                                      l2511 16BE  
                                    l3071 0A3A                                      l3063 09BC  
                                    l3055 0972                                      l3047 08F6  
                                    l3127 18E8                                      l3119 18AA  
                                    l3151 0F32                                      l3143 0F04  
                                    l3135 0EF6                                      l2329 1BBC  
                                    l2337 19F4                                      l2185 1C44  
                                    l2433 1C24                                      l2097 1874  
                                    l2193 1BF2                                      l2441 194E  
                                    l2353 1BE2                                      l2345 1BD0  
                                    l2409 126A                                      l2505 167E  
                                    l3081 0AEE                                      l3073 0A84  
                                    l3057 0980                                      l3049 0916  
                                    l3161 0FA2                                      l3153 0F50  
                                    l3145 0F18                                      l3137 0EF8  
                                    l2187 1C6C                                      l2339 19F6  
                                    l2435 1C28                                      l2099 187C  
                                    l2195 1BF8                                      l2355 1BE8  
                                    l2347 1BD6                                      l2371 1174  
                                    l2507 168A                                      l2451 10AE  
                                    l2443 1058                                      l3083 0B02  
                                    l3067 0A04                                      l3059 098E  
                                    l3171 0FD8                                      l3163 0FAC  
                                    l3155 0F6E                                      l3147 0F1C  
                                    l3139 0EFA                                      l2189 1C62  
                                    l2437 1C2C                                      l2197 1C06  
                                    l2349 1BDA                                      l2381 11B4  
                                    l2373 1182                                      l2357 1C0C  
                                    l2509 16BA                                      l2461 1122  
                                    l2453 10D6                                      l2445 1068  
                                    l3077 0ABC                                      l3069 0A16  
                                    l3261 08C8                                      l3093 0B28  
                                    l3181 100C                                      l3173 0FE4  
                                    l3165 0FB8                                      l3157 0F8C  
                                    l3149 0F26                                      l2439 1C30  
                                    l2471 1708                                      l2391 11F2  
                                    l2383 11B8                                      l2375 1192  
                                    l2359 1C1A                                      l2463 113A  
                                    l2455 10DC                                      l2447 1090  
                                    l3263 0E1C                                      l3095 0B4C  
                                    l3079 0AE0                                      l3087 0B0E  
                                    l3183 1018                                      l3175 0FEE  
                                    l3167 0FC2                                      l3159 0F96  
                                    l2473 1738                                      l2393 1200  
                                    l2385 11C8                                      l2377 1196  
                                    l2369 1170                                      l2481 1784  
                                    l2465 1162                                      l2457 10F4  
                                    l2449 1096                                      l3089 0B1C  
                                    l3185 101E                                      l3177 0FFA  
                                    l3169 0FCE                                      l2299 1AC6  
                                    l2475 173C                                      l2395 120A  
                                    l2387 11DE                                      l2379 11A4  
                                    l2491 17E8                                      l2483 17E0  
                                    l2467 1168                                      l2459 111C  
                                    l3187 102A                                      l3179 1006  
                                    l2477 1C36                                      l2469 16FC  
                                    l2397 1228                                      l2389 11E6  
                                    l2485 17E2                                      l2901 1332  
                                    l2821 144E                                      l3189 1036  
                                    l2399 1238                                      l2487 17E4  
                                    l2479 177A                                      l2903 1344  
                                    l2911 13A6                                      l2823 1460  
                                    l2489 17E6                                      l2921 18FC  
                                    l2913 13B4                                      l2905 136C  
                                    l2825 146A                                      l2833 1998  
                                    l2841 1A90                                      l2923 1900  
                                    l2915 13E2                                      l2907 138A  
                                    l2827 1488                                      l2819 143C  
                                    l2835 19A4                                      l2843 1A9C  
                                    l2851 1506                                      l2925 1914  
                                    l2917 1402                                      l2909 1392  
                                    l2829 14BE                                      l2837 19B6  
                                    l2845 1AA0                                      l2861 1556  
                                    l2853 1514                                      l2941 0BC6  
                                    l2933 0B60                                      ?_pad 0019  
                                    l2927 1942                                      l2919 1414  
                                    l2839 19BA                                      l2847 1AB8  
                                    l2863 156A                                      l2855 1528  
                                    l2951 0C5A                                      l2943 0BCE  
                                    l2935 0B6E                                      l2873 1A58  
                                    l2929 1946                                      l2865 156E  
                                    l2857 1536                                      l2961 0D0E  
                                    l2953 0C60                                      l2945 0BD8  
                                    l2937 0B70                                      l2971 0D74  
                                    l2891 12C2                                      l2883 127C  
                                    l2867 159A                                      l2859 1542  
                                    l2963 0D28                                      l2947 0BDE  
                                    l2955 0CC4                                      l2939 0B8A  
                                    l2877 1B82                                      l2981 0DD2  
                                    l2973 0D78                                      l2893 12D0  
                                    l2885 1288                                      l2869 15AE  
                                    l2957 0CD6                                      l2965 0D36  
                                    l2949 0C54                                      l2879 1B9E  
                                    l2991 0DFE                                      l2975 0D7C  
                                    l2895 12E2                                      l2887 12A6  
                                    l2959 0CF4                                      l2993 0E32  
                                    l2985 0DD8                                      l2977 0D98  
                                    l2969 0D60                                      l2897 1310  
                                    l2889 12AE                                      l2987 0DEE  
                                    l2979 0DCE                                      l2899 1330  
                                    l2997 0E68                                      l2989 0DF6  
                                    STR_1 0801                                      STR_2 080D  
                                    STR_3 080D                                      STR_4 080D  
                                    STR_5 080B                                      STR_6 080B  
                                    STR_7 0812                                      u2000 13B4  
                                    u2001 13B0                                      u1130 185E  
                                    u2010 13E2                                      u1131 185A  
                                    u2011 13DE                                      u1140 1874  
                                    u2020 1914                                      u2100 0D36  
                                    u1141 1870                                      u2021 1910  
                                    u2101 0D32                                      u1150 188A  
                                    u2030 1942                                      u2110 0D98  
                                    u1151 1886                                      u2031 193E  
                                    u2111 0D94                                      u1160 18A0  
                                    u2120 0DCE                                      u2040 0B6E  
                                    u2200 0916                                      u1161 189C  
                                    u2121 0DCA                                      u2041 0B6A  
                                    u2201 0912                                      u2130 0DEA  
                                    u2050 0B8A                                      u2210 093C  
                                    u2131 0DE6                                      u2051 0B86  
                                    u2211 0938                                      u1500 1200  
                                    u2140 0EA0                                      u2060 0CD6  
                                    u2220 0980                                      u1501 11FC  
                                    u2141 0E9A                                      u2061 0CD2  
                                    u2221 097C                                      _LATA 000F89  
                                    u1510 1228                                      u2150 0EA2  
                                    u2070 0CF4                                      u2230 09FC  
                                    _LATB 000F8A                                      u1511 1224  
                                    u2071 0CF0                                      u2231 09F6  
                                    _LATC 000F8B                                      u1520 125A  
                                    u2160 0EB8                                      u2080 0D0E  
                                    u2240 09FE                                      _LATD 000F8C  
                                    u1521 1256                                      u2161 0EB4  
                                    u2081 0D0A                                      _LATE 000F8D  
                                    u1450 1C1A                                      u1610 113A  
                                    u2170 0ECA                                      u2090 0D28  
                                    u2250 0A16                                      u2307 1BFE  
                                    u1451 1C16                                      u1611 1136  
                                    u2171 0EC6                                      u2091 0D24  
                                    u2251 0A12                                      u2260 0A3A  
                                    u2180 083A                                      u1605 110C  
                                    u2261 0A36                                      u2181 0836  
                                    u1630 1734                                      u1470 1182  
                                    u1550 1068                                      u2270 0AE0  
                                    u2190 0908                                      u1471 117E  
                                    u1551 1064                                      u2271 0ADC  
                                    u2191 0904                                      u1640 1768  
                                    u1480 11A4                                      u2280 1844  
                                    u1481 11A0                                      u1625 1152  
                                    u2281 1840                                      u1650 1778  
                                    u1490 11DE                                      u1570 10AE  
                                    u1651 1774                                      u1491 11DA  
                                    u1571 10AA                                      u1660 16B6  
                                    u1900 1536                                      u1637 172A  
                                    u1565 1080                                      u1901 1532  
                                    u1670 16EA                                      u1590 10F4  
                                    u1830 144E                                      u1910 158C  
                                    u1647 175E                                      u1591 10F0  
                                    u1831 144A                                      u1911 1588  
                                    u1680 16FA                                      u1840 1460  
                                    u1920 159A                                      u1681 16F6  
                                    u1585 10C6                                      u1841 145C  
                                    u1921 1596                                      u2297 1042  
                                    u1930 1A88                                      u1850 1488  
                                    u1667 16AC                                      u1931 1A82  
                                    u1851 1484                                      u1940 1A8A  
                                    u1860 14BE                                      u1677 16E0  
                                    u1861 14BA                                      u1870 19DA  
                                    u1951 1282                                      u1871 19D6  
                                    u1960 12A6                                      u1880 1AB8  
                                    u1961 12A2                                      u1881 1AB4  
                                    u1970 12D0                                      u1890 1514  
                                    u1971 12CC                                      u1891 1510  
                                    u1980 1310                                      u1981 130C  
                                    u1990 138A                                      u1991 1386  
                                    i1l50 1B5A                                      i1l46 1C84  
                                    i2l31 1C8C                                      i1l63 1B2A  
                                    i1l56 1C8A                                      i2l25 1A56  
                                    i1l59 1C7C                                      i1l69 1C88  
                                    _WPUB 000F85                             _INT2_CallBack 1AFC  
                                    _dbuf 0074                                      _atoi 0D60  
                                    _cont 0072                                      _main 0EF0  
                                    _hora 0060                                      _prec 0050  
                                    _nout 006C                                      pad@i 0020  
                                    pad@p 001D                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 0022                                      fsr2l 000FD9  
                                    btemp 0056                                      _utoa 0B60  
                           __CFG_BORV$190 000000         __size_of_INT2_SetInterruptHandler 000A  
               ?_INT2_SetInterruptHandler 0009                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                           __CFG_IESO$OFF 000000                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                                     ??_pad 001F  
                 __end_of_TMR0_Initialize 1AFC                          __end_of_INT1_ISR 1C86  
                        __end_of_INT2_ISR 1C7E            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 000A             __end_of_OSCILLATOR_Initialize 1C58  
                         __end_of___aldiv 127C                                     ?_atoi 0010  
                                   ?_main 0001                     __end_of_ocultarcursor 1C44  
                                   ?_utoa 0024                                     _T0CON 000FD5  
                         __end_of___lodiv 136C                           __end_of___lomod 143C  
                          __CFG_DEBUG$OFF 000000                                     i1l193 00B4  
                                   i1l187 0074                                     i2l182 1672  
                            vfpfcnvrt@fmt 0046                                     _TMR0H 000FD7  
                            vfpfcnvrt@llu 00A0                                     _TMR0L 000FD6  
                                   _SPBRG 000FAF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0009                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                           __end_of_comando 1C0A  
                        __end_of_TMR0_ISR 1A58                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          ?_INT1_CallBack 0001                                     _begin 194E  
                          __CFG_EBTRB$OFF 000000                           __end_of_busdata 18AA  
                        serial_trama@data 000A                                     _cont1 0070  
                                   _cont2 006E                                     _flags 0052  
          ??_INT1_DefaultInterruptHandler 0004                                     _horas 0094  
                                   _fputc 143C                                     _fputs 1998  
                         __end_of_isdigit 1A90                                     _minut 0098  
                                   _segun 009C                                     _print 16FC  
                                   atoi@n 001D                                     pad@fp 0019  
                                   atoi@s 0010                                     _width 004E  
                                   _putch 1C86                            ?_INT2_CallBack 0001  
                         __end_of_isspace 194E                  _INT1_SetInterruptHandler 1C6C  
                                   pclath 000FFA                                     tablat 000FF5  
                                   ttemp5 0057                                     ttemp6 005A  
                                   ttemp7 005E                                     utoa@d 0026  
                                   utoa@i 0042                                     utoa@n 003A  
                                   utoa@p 0036                                     utoa@w 0038  
                                   status 000FD8                            __CFG_T3CMX$RC0 000000  
                                   wtemp8 0057                           __end_of_sprintf 18FC  
                        ___lodiv@dividend 0009                            __CFG_ICPRT$OFF 000000  
          ?_INTERRUPT_InterruptManagerLow 0001                            __CFG_PBADEN$ON 000000  
                         __initialization 1B5C                              __end_of_atoi 0EF0  
                            __end_of_main 1056                              __end_of_utoa 0D60  
                          __CFG_PCLKEN$ON 000000                                    ??_atoi 0012  
                                  ??_main 00C4                                    ??_utoa 002E  
                           __activetblptr 000002                          ___lodiv@quotient 0019  
                          __CFG_SDOMX$RB3 000000                           __CFG_CCP2MX$RC1 000000  
                                  ?_begin 0001                                    ?_fputc 0009  
                                  ?_fputs 0012                                    ?_print 000F  
                                  _ANSELA 000F5B                                    ?_putch 0001  
                                  _ANSELB 000F5C                                    _ANSELC 000F5D  
                                  _ANSELD 000F5E                                    _ANSELE 000F5F  
                                  i1l2313 1B2C                                    i1l2315 1B40  
                                  i1l2317 1AFC                                    i1l2423 1C7E  
                                  i1l2319 1B10                                    i1l2425 1C80  
                                  i1l2427 1C76                                    i1l2429 1C78  
                                  i1l2541 003C                                    i1l2551 0082  
                                  i1l2543 004A                                    i1l2553 0090  
                                  i1l2545 004E                                    i1l2555 0094  
                                  i1l2547 0054                                    i1l2539 002E  
                                  i1l2557 009C                                    i1l2549 0068  
                                  i2l2421 1A3C                                    i2l2413 1A1E  
                                  i2l2415 1A20                                    i2l2417 1A24  
                                  i2l2521 15F6                                    i2l2513 15D0  
                                  i2l2419 1A28                                    i2l2531 1632  
                                  i2l2523 160A                                    i2l2515 15DE  
                                  i2l2533 1636                                    i2l2525 1612  
                                  i2l2517 15EC                            __CFG_WDTEN$OFF 000000  
                                  i2l2535 164A                                    i2l2527 1616  
                                  i2l2519 15F0                                    i2l2537 1652  
                                  i2l2529 162A                                    _RCREG1 000FAE  
                                  _OSCCON 000FD3                             vfpfcnvrt@done 00A8  
                        __end_of_caracter 1BEC                                    _TXREG1 000FAD  
                          __CFG_XINST$OFF 000000                              vfprintf@cfmt 00B2  
                               ??___aldiv 0011                                    ___wmul 1B82  
                          __CFG_STVREN$ON 000000                                 ??___lodiv 0019  
                               ??___lomod 0019                          ?_TMR0_Initialize 0001  
                                  clear_0 1B62                                    pad@buf 001B  
                               ??_comando 000A                                    _strlen 1A90  
                               ??_busdata 0009                                    fputc@c 0009  
    __end_of_INT2_DefaultInterruptHandler 1C8A     __size_of_INT2_DefaultInterruptHandler 0002  
            _INT2_DefaultInterruptHandler 1C88                                    fputs@c 0016  
                                  fputs@i 0017                                    fputs@s 0012  
                               ??_isdigit 000B                           ??_INT1_CallBack 0004  
                            __mediumconst 0000                                 ??_isspace 000B  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                    print@a 000F  
                                  print@k 0013                                    putch@c 0001  
                         ??_INT2_CallBack 0004                          __end_of_vfprintf 184E  
                                  utoa@fp 0024  INT2_SetInterruptHandler@InterruptHandler 0009  
INT1_SetInterruptHandler@InterruptHandler 0009  TMR0_SetInterruptHandler@InterruptHandler 0009  
                               ??_sprintf 004E             __size_of_INTERRUPT_Initialize 000A  
                    __CFG_LS48MHZ$SYS24X4 000000          ??_INTERRUPT_InterruptManagerHigh 0001  
         ?_INTERRUPT_InterruptManagerHigh 0001                         _SYSTEM_Initialize 1C20  
                              __accesstop 0060                   __end_of__initialization 1B74  
                               ?_INT1_ISR 0001                                 ?_INT2_ISR 0001  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                          __CFG_nPWRTEN$OFF 000000  
                     ??_SYSTEM_Initialize 000D                             __end_of_begin 1998  
                               ?_TMR0_ISR 0001                             __end_of_fputc 1506  
                           __end_of_fputs 19DC                             __end_of_print 177A  
                           __end_of_putch 1C88               __size_of_EXT_INT_Initialize 0026  
                     serial_begin@baudios 0017          __end_of_INT2_SetInterruptHandler 1C6C  
         fp__INT2_DefaultInterruptHandler 0000             ?_INT2_DefaultInterruptHandler 0001  
                                 ??_begin 000C                                   ??_fputc 000D  
               __end_of_SYSTEM_Initialize 1C36                                   ??_fputs 0016  
                                 ??_print 0011                                   ??_putch 0009  
                              __pbssBANK0 0060                                ??_INT1_ISR 0004  
                              ??_INT2_ISR 0004                                __pnvCOMRAM 0054  
                       __CFG_PLLSEL$PLL4X 000000          __end_of_TMR0_SetInterruptHandler 1C4E  
                                 ?___wmul 0009                                ??_TMR0_ISR 0001  
                      __size_of_setCursor 011A                                   ?_strlen 0009  
              ??_INT1_SetInterruptHandler 000B                                 ?_caracter 0001  
                                 _OSCCON2 000FD2                        __size_of_vfpfcnvrt 034A  
                        ___lomod@dividend 0009                                   __Hparam 0000  
                                 __Lparam 0000                             ?_serial_begin 0017  
                           ?_serial_print 0001                             ?_serial_trama 000A  
                                 ___aldiv 1170                           __size_of___wmul 0026  
                                 ___lodiv 127C                                   ___lomod 136C  
                               ?_vfprintf 00AC                              __psmallconst 0800  
                                 __pcinit 1B5C                                   __ramtop 0800  
                                 __ptext0 0EF0                                   __ptext1 18AA  
                                 __ptext2 17EC                                   __ptext3 0816  
                                 __ptext4 0B60                                   __ptext5 1506  
                                 __ptext6 1A90                                   __ptext7 1998  
                                 __ptext8 143C                                   __ptext9 1C86  
                                 _comando 1BEC                                 _T0CONbits 000FD5  
                         __size_of_strlen 0036                                   _busdata 184E  
                   _OSCILLATOR_Initialize 1C4E                              __size_of_pad 00C2  
                                 _isdigit 1A58                                ??_caracter 000C  
                        ___aldiv@dividend 0009                  ??_PIN_MANAGER_Initialize 0009  
                                 _isspace 18FC                                   atoi@neg 0016  
              __size_of_SYSTEM_Initialize 0016                                   _sprintf 18AA  
                          __pintcode_body 15C8                      end_of_initialization 1B74  
                       __end_of_setCursor 1170                  _INT2_SetInterruptHandler 1C62  
          ??_INT2_DefaultInterruptHandler 0004                                   fputc@fp 000B  
                           __Lmediumconst 0000                                   int_func 15C8  
                                 fputs@fp 0014                    __size_of_ocultarcursor 000E  
                          ??_serial_begin 001B                            ??_serial_print 0009  
                          ??_serial_trama 000C                         __end_of_vfpfcnvrt 0B60  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 0013  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                              ??_vfprintf 004E                                   strlen@a 000B  
                                 strlen@s 0009                  _TMR0_SetInterruptHandler 1C44  
                   _INT1_InterruptHandler 00C8                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                                 _TRISCbits 000F94  
                               _TXSTAbits 000FAC                         __size_of_INT1_ISR 0008  
                       __size_of_INT2_ISR 0008              __end_of_INTERRUPT_Initialize 1C62  
                             vfpfcnvrt@ap 0048                               vfpfcnvrt@fp 0044  
                          __end_of___wmul 1BA8                               _BAUDCONbits 000FB8  
                       __size_of_TMR0_ISR 003A                    ?_OSCILLATOR_Initialize 0001  
                           _ocultarcursor 1C36                            __end_of_strlen 1AC6  
                     start_initialization 1B5C                           ___lodiv@divisor 0011  
                         ___lodiv@counter 0021                  __size_of_TMR0_Initialize 0036  
         __size_of_PIN_MANAGER_Initialize 0042                     __end_of_INT1_CallBack 1B5C  
                             __end_of_pad 15C8                      serial_print@caracter 0009  
                   __end_of_INT2_CallBack 1B2C                           __CFG_nLPBOR$OFF 000000  
                             vfprintf@fmt 00AE                                  ??___wmul 000D  
              __end_of_EXT_INT_Initialize 1BCE                            ?_ocultarcursor 0001  
                                ??_strlen 000B                               __pbssCOMRAM 004E  
                           __pcstackBANK0 00A0                      __end_of_serial_begin 17EC  
                       __size_of_caracter 001E                      __end_of_serial_print 1C20  
                    __end_of_serial_trama 16FC                     _INT2_InterruptHandler 00C6  
                               _atoi$1595 0018                                 _atoi$1596 001C  
                               _atoi$1597 001A                     _TMR0_InterruptHandler 00CA  
                               __pnvBANK0 00C6                    _PIN_MANAGER_Initialize 19DC  
                               __pintcode 0008                                  ?___aldiv 0009  
                                ?___lodiv 0009                                  ?___lomod 0009  
                              setCursor@m 0010                                setCursor@n 0011  
                              setCursor@x 0012                                setCursor@y 000C  
                             __pintcodelo 0018                         __size_of_vfprintf 0062  
                                ?_comando 0001                           ___lomod@divisor 0011  
                                ?_busdata 0001                               __smallconst 0800  
                         ___lomod@counter 0019                ??_INT2_SetInterruptHandler 000B  
                                ?_isdigit 0009                                  ?_isspace 0009  
                               caracter@a 000E                                 caracter@m 000C  
                               caracter@n 000D                            __size_of_begin 004A  
                                ?_sprintf 00B4                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                            __size_of_print 007E  
                          __size_of_putch 0002                      _INTERRUPT_Initialize 1C58  
                         ___aldiv@divisor 000D                         ??_TMR0_Initialize 000B  
                         ___aldiv@counter 0011                                  _INT1_ISR 1C7E  
                                _INT2_ISR 1C76                            ___wmul@product 000D  
       __size_of_INT1_SetInterruptHandler 000A                                 _setCursor 1056  
               ?_INT1_SetInterruptHandler 0009                                  i1u141_20 1B40  
                                i1u141_21 1B3C                                  i1u142_28 1B46  
                                i1u143_20 1B10                                  i1u142_29 1B5A  
                                i1u143_21 1B0C                                  i1u144_28 1B16  
                                i1u144_29 1B2A                                  i1u180_20 00B0  
                                i1u180_21 00AC                                  i1u175_20 003C  
                                i1u175_21 0038                                  i1u176_20 004A  
                                i1u176_21 0046                                  i1u177_20 0068  
                                i1u177_21 0064                                  i1u178_20 0082  
                                i1u178_21 007E                                  i1u179_20 0090  
                                i1u179_21 008C                                  i2u153_40 1A3C  
                                i2u153_41 1A38                                  i2u170_40 15EC  
                                i2u170_41 15E8                                  i2u154_48 1A42  
                                i2u171_40 160A                                  i2u154_49 1A56  
                                i2u171_41 1606                                  i2u172_40 162A  
                                i2u172_41 1626                                  i2u173_40 164A  
              ??_TMR0_SetInterruptHandler 000B                                  i2u173_41 1646  
                                i2u174_40 1662                                  i2u174_41 165C  
                       _serial_begin$1909 001B                                  i2u174_46 1664  
                                i2u169_40 15DE                                  i2u169_41 15DA  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 1A1E                           ??_ocultarcursor 000C  
                               _vfpfcnvrt 0816                         ___wmul@multiplier 0009  
                           serial_trama@k 000E                         __CFG_CFGPLLEN$OFF 000000  
                            _isspace$1613 000F                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                     ?_INTERRUPT_Initialize 0001  
                              ?_setCursor 000C                                  __Hrparam 0000  
                              vfprintf@ap 00B0                                  __Lrparam 0000  
                              vfprintf@fp 00AC                        __CFG_BOREN$SBORDIS 000000  
                 ??_OSCILLATOR_Initialize 0009                          __size_of___aldiv 010C  
                        __size_of___lodiv 00F0                          __size_of___lomod 00D0  
                              ?_vfpfcnvrt 0044                     __size_of_serial_begin 0072  
                   __size_of_serial_print 0016                     __size_of_serial_trama 007E  
                        __size_of_comando 001E                                sprintf@fmt 00B6  
                                _caracter 1BCE                          __size_of_busdata 005C  
         ??_INTERRUPT_InterruptManagerLow 0004                          __size_of_isdigit 0038  
                        __size_of_isspace 0052                                  __ptext10 136C  
                                __ptext11 127C                                  __ptext20 1170  
                                __ptext12 0D60                                  __ptext21 16FC  
                                __ptext13 18FC                                  __ptext30 19DC  
                                __ptext22 1BCE                                  __ptext14 1A58  
                                __ptext31 1C4E                                  __ptext23 1C36  
                                __ptext15 1B82                                  __ptext40 1C7E  
                                __ptext32 1C58                                  __ptext24 194E  
                                __ptext16 1056                                  __ptext41 1B2C  
                                __ptext33 1BA8                                  __ptext25 1BEC  
                                __ptext17 167E                                  __ptext42 1C8A  
                                __ptext34 1C62                                  __ptext26 184E  
                                __ptext18 1C0A                                  __ptext35 1C6C  
                                __ptext27 1C20                                  __ptext19 177A  
                                __ptext44 1A1E                                  __ptext28 1AC6  
                                __ptext45 1C8C                                  __ptext37 1C76  
                                __ptext29 1C44                                  __ptext46 0000  
                                __ptext38 1AFC                                  __ptext39 1C88  
                        __size_of_sprintf 0052                             __size_of_atoi 0190  
                           __size_of_main 0166                             __size_of_utoa 0200  
    __end_of_TMR0_DefaultInterruptHandler 1C8E     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 1C8C                              _serial_begin 177A  
                            _serial_print 1C0A                                  int$flags 0056  
                            _serial_trama 167E                                  comando@a 000B  
                                _vfprintf 17EC      __end_of_INT1_DefaultInterruptHandler 1C8C  
   __size_of_INT1_DefaultInterruptHandler 0002              _INT1_DefaultInterruptHandler 1C8A  
                                busdata@a 0009                            _vfpfcnvrt$1140 00AA  
                              _INTCONbits 000FF2                                  isdigit@c 0009  
                  ??_INTERRUPT_Initialize 0009                        _EXT_INT_Initialize 1BA8  
                                intlevel1 0000                                  intlevel2 0000  
                               sprintf@ap 00BC                                  isspace@c 0009  
                 ?_PIN_MANAGER_Initialize 0001                               ??_setCursor 000D  
                     ?_EXT_INT_Initialize 0001           fp__TMR0_DefaultInterruptHandler 0000  
           ?_TMR0_DefaultInterruptHandler 0001                    __size_of_INT1_CallBack 0030  
                    __CFG_CPUDIV$NOCLKDIV 000000                               ??_vfpfcnvrt 004A  
                  __size_of_INT2_CallBack 0030    __end_of_INTERRUPT_InterruptManagerHigh 167E  
 __size_of_INTERRUPT_InterruptManagerHigh 1676            _INTERRUPT_InterruptManagerHigh 0008  
                    ??_EXT_INT_Initialize 000B                                  sprintf@f 00BE  
                                sprintf@s 00B4           fp__INT1_DefaultInterruptHandler 0000  
           ?_INT1_DefaultInterruptHandler 0001                           _TMR0_Initialize 1AC6  
        __end_of_INT1_SetInterruptHandler 1C76                              ___aldiv@sign 0012  
   __end_of_INTERRUPT_InterruptManagerLow 00CC    __size_of_INTERRUPT_InterruptManagerLow 00B4  
           _INTERRUPT_InterruptManagerLow 0018                        __CFG_FOSC$INTOSCIO 000000  
          __end_of_PIN_MANAGER_Initialize 1A1E  
