

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Oct 17 02:00:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F45K50 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  001430                     __pidataCOMRAM:
    80                           	opt callstack 0
    81                           
    82                           ;initializer for _a
    83  001430  0002               	dw	2
    84  0000                     _ANSELB	set	3932
    85  0000                     _ANSELA	set	3931
    86  0000                     _ANSELE	set	3935
    87  0000                     _ANSELD	set	3934
    88  0000                     _INTCON3bits	set	4080
    89  0000                     _INTCON2bits	set	4081
    90  0000                     _INTCONbits	set	4082
    91  0000                     _TRISBbits	set	3987
    92  0000                     _OSCCON2	set	4050
    93  0000                     _OSCCON	set	4051
    94  0000                     _PORTAbits	set	3968
    95  0000                     _TRISB	set	3987
    96  0000                     _TRISA	set	3986
    97  0000                     _TRISE	set	3990
    98  0000                     _TRISD	set	3989
    99  0000                     _PORTEbits	set	3972
   100  0000                     _PORTDbits	set	3971
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	opt callstack 0
   105  000800  00                 	db	0
   106  000801                     STR_15:
   107  000801  52                 	db	82	;'R'
   108  000802  45                 	db	69	;'E'
   109  000803  56                 	db	86	;'V'
   110  000804  49                 	db	73	;'I'
   111  000805  53                 	db	83	;'S'
   112  000806  49                 	db	73	;'I'
   113  000807  4F                 	db	79	;'O'
   114  000808  4E                 	db	78	;'N'
   115  000809  20                 	db	32
   116  00080A  31                 	db	49	;'1'
   117  00080B  00                 	db	0
   118  00080C                     STR_16:
   119  00080C  52                 	db	82	;'R'
   120  00080D  45                 	db	69	;'E'
   121  00080E  56                 	db	86	;'V'
   122  00080F  49                 	db	73	;'I'
   123  000810  53                 	db	83	;'S'
   124  000811  49                 	db	73	;'I'
   125  000812  4F                 	db	79	;'O'
   126  000813  4E                 	db	78	;'N'
   127  000814  20                 	db	32
   128  000815  32                 	db	50	;'2'
   129  000816  00                 	db	0
   130  000817                     STR_17:
   131  000817  52                 	db	82	;'R'
   132  000818  45                 	db	69	;'E'
   133  000819  56                 	db	86	;'V'
   134  00081A  49                 	db	73	;'I'
   135  00081B  53                 	db	83	;'S'
   136  00081C  49                 	db	73	;'I'
   137  00081D  4F                 	db	79	;'O'
   138  00081E  4E                 	db	78	;'N'
   139  00081F  20                 	db	32
   140  000820  33                 	db	51	;'3'
   141  000821  00                 	db	0
   142  000822                     STR_5:
   143  000822  48                 	db	72	;'H'
   144  000823  49                 	db	73	;'I'
   145  000824  53                 	db	83	;'S'
   146  000825  54                 	db	84	;'T'
   147  000826  4F                 	db	79	;'O'
   148  000827  52                 	db	82	;'R'
   149  000828  49                 	db	73	;'I'
   150  000829  41                 	db	65	;'A'
   151  00082A  4C                 	db	76	;'L'
   152  00082B  00                 	db	0
   153  00082C                     STR_9:
   154  00082C  43                 	db	67	;'C'
   155  00082D  4F                 	db	79	;'O'
   156  00082E  4E                 	db	78	;'N'
   157  00082F  46                 	db	70	;'F'
   158  000830  49                 	db	73	;'I'
   159  000831  52                 	db	82	;'R'
   160  000832  4D                 	db	77	;'M'
   161  000833  41                 	db	65	;'A'
   162  000834  52                 	db	82	;'R'
   163  000835  00                 	db	0
   164  000836                     STR_11:
   165  000836  50                 	db	80	;'P'
   166  000837  52                 	db	82	;'R'
   167  000838  4F                 	db	79	;'O'
   168  000839  42                 	db	66	;'B'
   169  00083A  4C                 	db	76	;'L'
   170  00083B  45                 	db	69	;'E'
   171  00083C  4D                 	db	77	;'M'
   172  00083D  41                 	db	65	;'A'
   173  00083E  53                 	db	83	;'S'
   174  00083F  00                 	db	0
   175  000840                     STR_8:
   176  000840  43                 	db	67	;'C'
   177  000841  41                 	db	65	;'A'
   178  000842  4E                 	db	78	;'N'
   179  000843  54                 	db	84	;'T'
   180  000844  49                 	db	73	;'I'
   181  000845  44                 	db	68	;'D'
   182  000846  41                 	db	65	;'A'
   183  000847  44                 	db	68	;'D'
   184  000848  00                 	db	0
   185  000849                     STR_7:
   186  000849  50                 	db	80	;'P'
   187  00084A  45                 	db	69	;'E'
   188  00084B  52                 	db	82	;'R'
   189  00084C  53                 	db	83	;'S'
   190  00084D  4F                 	db	79	;'O'
   191  00084E  4E                 	db	78	;'N'
   192  00084F  41                 	db	65	;'A'
   193  000850  00                 	db	0
   194  000851                     STR_3:
   195  000851  47                 	db	71	;'G'
   196  000852  4C                 	db	76	;'L'
   197  000853  55                 	db	85	;'U'
   198  000854  43                 	db	67	;'C'
   199  000855  4F                 	db	79	;'O'
   200  000856  53                 	db	83	;'S'
   201  000857  41                 	db	65	;'A'
   202  000858  00                 	db	0
   203  000859                     STR_4:
   204  000859  44                 	db	68	;'D'
   205  00085A  4F                 	db	79	;'O'
   206  00085B  53                 	db	83	;'S'
   207  00085C  49                 	db	73	;'I'
   208  00085D  53                 	db	83	;'S'
   209  00085E  00                 	db	0
   210  00085F                     STR_2:
   211  00085F  25                 	db	37
   212  000860  31                 	db	49	;'1'
   213  000861  30                 	db	48	;'0'
   214  000862  30                 	db	48	;'0'
   215  000863  00                 	db	0
   216  000864                     STR_1:
   217  000864  4D                 	db	77	;'M'
   218  000865  45                 	db	69	;'E'
   219  000866  4E                 	db	78	;'N'
   220  000867  55                 	db	85	;'U'
   221  000868  00                 	db	0
   222  000869                     STR_18:
   223  000869  20                 	db	32
   224  00086A  00                 	db	0
   225  0000                     
   226                           ; #config settings
   227  00086B  00                 	db	0	; dummy byte at the end
   228  0000                     
   229                           	psect	cinit
   230  0012BE                     __pcinit:
   231                           	opt callstack 0
   232  0012BE                     start_initialization:
   233                           	opt callstack 0
   234  0012BE                     __initialization:
   235                           	opt callstack 0
   236                           
   237                           ; Initialize objects allocated to COMRAM (2 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239  0012BE  0E30               	movlw	low __pidataCOMRAM
   240  0012C0  6EF6               	movwf	tblptrl,c
   241  0012C2  0E14               	movlw	high __pidataCOMRAM
   242  0012C4  6EF7               	movwf	tblptrh,c
   243  0012C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244  0012C8  6EF8               	movwf	tblptru,c
   245  0012CA  0009               	tblrd		*+	;fetch initializer
   246  0012CC  CFF5 F02A          	movff	tablat,__pdataCOMRAM
   247  0012D0  0009               	tblrd		*+	;fetch initializer
   248  0012D2  CFF5 F02B          	movff	tablat,__pdataCOMRAM+1
   249                           
   250                           ; Clear objects allocated to COMRAM (2 bytes)
   251  0012D6  6A29               	clrf	(__pbssCOMRAM+1)& (0+255),c
   252  0012D8  6A28               	clrf	__pbssCOMRAM& (0+255),c
   253  0012DA                     end_of_initialization:
   254                           	opt callstack 0
   255  0012DA                     __end_of__initialization:
   256                           	opt callstack 0
   257  0012DA  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   258  0012DC  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   259  0012DE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   260  0012E0  6EF8               	movwf	tblptru,c
   261  0012E2  0E08               	movlw	high __Lsmallconst
   262  0012E4  6EF7               	movwf	tblptrh,c
   263  0012E6  0100               	movlb	0
   264  0012E8  EF25  F005         	goto	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMRAM
   267  000028                     __pbssCOMRAM:
   268                           	opt callstack 0
   269  000028                     _cont:
   270                           	opt callstack 0
   271  000028                     	ds	2
   272                           
   273                           	psect	dataCOMRAM
   274  00002A                     __pdataCOMRAM:
   275                           	opt callstack 0
   276  00002A                     _a:
   277                           	opt callstack 0
   278  00002A                     	ds	2
   279                           
   280                           	psect	cstackCOMRAM
   281  000001                     __pcstackCOMRAM:
   282                           	opt callstack 0
   283  000001                     i2busdata@a:
   284                           	opt callstack 0
   285                           
   286                           ; 1 bytes @ 0x0
   287  000001                     	ds	1
   288  000002                     i2comando@a:
   289                           	opt callstack 0
   290                           
   291                           ; 1 bytes @ 0x1
   292  000002                     	ds	1
   293  000003                     i2setCursor@y:
   294                           	opt callstack 0
   295  000003                     i2caracter@m:
   296                           	opt callstack 0
   297  000003                     i2writecaracter@a:
   298                           	opt callstack 0
   299                           
   300                           ; 1 bytes @ 0x2
   301  000003                     	ds	1
   302  000004                     ??i2_setCursor:
   303  000004                     i2caracter@n:
   304                           	opt callstack 0
   305                           
   306                           ; 1 bytes @ 0x3
   307  000004                     	ds	1
   308  000005                     i2caracter@a:
   309                           	opt callstack 0
   310                           
   311                           ; 1 bytes @ 0x4
   312  000005                     	ds	1
   313  000006                     i2print@a:
   314                           	opt callstack 0
   315                           
   316                           ; 2 bytes @ 0x5
   317  000006                     	ds	1
   318  000007                     i2setCursor@m:
   319                           	opt callstack 0
   320                           
   321                           ; 1 bytes @ 0x6
   322  000007                     	ds	1
   323  000008                     ??i2_print:
   324  000008                     i2setCursor@n:
   325                           	opt callstack 0
   326                           
   327                           ; 1 bytes @ 0x7
   328  000008                     	ds	1
   329  000009                     i2setCursor@x:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0x8
   333  000009                     	ds	1
   334  00000A                     i2print@k:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x9
   338  00000A                     	ds	2
   339  00000C                     ??_menu_dosis:
   340  00000C                     ??_menu_glucosa:
   341  00000C                     ??_menu_historial:
   342  00000C                     ??i2_menu_principal:
   343  00000C                     i2seleccion_up@a:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0xB
   347  00000C                     	ds	2
   348  00000E                     ??_first_int:
   349  00000E                     
   350                           ; 1 bytes @ 0xD
   351  00000E                     	ds	5
   352  000013                     busdata@a:
   353                           	opt callstack 0
   354                           
   355                           ; 1 bytes @ 0x12
   356  000013                     	ds	1
   357  000014                     comando@a:
   358                           	opt callstack 0
   359                           
   360                           ; 1 bytes @ 0x13
   361  000014                     	ds	1
   362  000015                     setCursor@y:
   363                           	opt callstack 0
   364  000015                     caracter@m:
   365                           	opt callstack 0
   366  000015                     create@b:
   367                           	opt callstack 0
   368  000015                     writecaracter@a:
   369                           	opt callstack 0
   370                           
   371                           ; 1 bytes @ 0x14
   372  000015                     	ds	1
   373  000016                     ??_setCursor:
   374  000016                     caracter@n:
   375                           	opt callstack 0
   376  000016                     create@c:
   377                           	opt callstack 0
   378                           
   379                           ; 1 bytes @ 0x15
   380  000016                     	ds	1
   381  000017                     caracter@a:
   382                           	opt callstack 0
   383  000017                     create@d:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0x16
   387  000017                     	ds	1
   388  000018                     create@e:
   389                           	opt callstack 0
   390  000018                     print@a:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x17
   394  000018                     	ds	1
   395  000019                     setCursor@m:
   396                           	opt callstack 0
   397  000019                     create@f:
   398                           	opt callstack 0
   399                           
   400                           ; 1 bytes @ 0x18
   401  000019                     	ds	1
   402  00001A                     ??_print:
   403  00001A                     setCursor@n:
   404                           	opt callstack 0
   405  00001A                     create@g:
   406                           	opt callstack 0
   407                           
   408                           ; 1 bytes @ 0x19
   409  00001A                     	ds	1
   410  00001B                     setCursor@x:
   411                           	opt callstack 0
   412  00001B                     create@h:
   413                           	opt callstack 0
   414                           
   415                           ; 1 bytes @ 0x1A
   416  00001B                     	ds	1
   417  00001C                     create@i:
   418                           	opt callstack 0
   419  00001C                     print@k:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x1B
   423  00001C                     	ds	1
   424  00001D                     ??_create:
   425                           
   426                           ; 1 bytes @ 0x1C
   427  00001D                     	ds	1
   428  00001E                     ??_menu_principal:
   429  00001E                     create@a:
   430                           	opt callstack 0
   431  00001E                     seleccion_down@a:
   432                           	opt callstack 0
   433  00001E                     seleccion_up@a:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x1D
   437  00001E                     	ds	1
   438  00001F                     create@m:
   439                           	opt callstack 0
   440                           
   441                           ; 1 bytes @ 0x1E
   442  00001F                     	ds	1
   443  000020                     create@n:
   444                           	opt callstack 0
   445                           
   446                           ; 1 bytes @ 0x1F
   447  000020                     	ds	1
   448  000021                     create@m_172:
   449                           	opt callstack 0
   450                           
   451                           ; 1 bytes @ 0x20
   452  000021                     	ds	1
   453  000022                     create@n_173:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x21
   457  000022                     	ds	1
   458  000023                     
   459                           ; 2 bytes @ 0x22
   460  000023                     	ds	2
   461  000025                     
   462                           ; 3 bytes @ 0x24
   463  000025                     	ds	3
   464  000028                     
   465                           ; 1 bytes @ 0x27
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 34 in file "main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  argc            2   34[COMRAM] int 
   474 ;;  argv            3   36[COMRAM] PTR PTR unsigned char 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  2   34[COMRAM] int 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   486 ;;      Params:         5       0       0       0       0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0       0       0
   489 ;;      Totals:         5       0       0       0       0       0       0       0       0
   490 ;;Total ram usage:        5 bytes
   491 ;; Hardware stack levels required when called:   11
   492 ;; This function calls:
   493 ;;		_begin
   494 ;;		_conf
   495 ;;		_create
   496 ;;		_menu_principal
   497 ;;		_ocultarcursor
   498 ;;		_oscilador
   499 ;;		_seleccion_down
   500 ;;		_seleccion_up
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text0
   507  000A4A                     __ptext0:
   508                           	opt callstack 0
   509  000A4A                     _main:
   510                           	opt callstack 20
   511  000A4A                     
   512                           ;main.c: 36:     conf();
   513  000A4A  ECFC  F009         	call	_conf	;wreg free
   514  000A4E                     
   515                           ;main.c: 37:     oscilador();
   516  000A4E  EC13  F00A         	call	_oscilador	;wreg free
   517                           
   518                           ;main.c: 38:     ANSELD=0;
   519  000A52  0E00               	movlw	0
   520  000A54  010F               	movlb	15	; () banked
   521  000A56  6F5E               	movwf	94,b	;volatile
   522                           
   523                           ;main.c: 39:     ANSELE=0;
   524  000A58  0E00               	movlw	0
   525  000A5A  6F5F               	movwf	95,b	;volatile
   526                           
   527                           ;main.c: 40:     ANSELA=0;
   528  000A5C  0E00               	movlw	0
   529  000A5E  6F5B               	movwf	91,b	;volatile
   530                           
   531                           ;main.c: 41:     ANSELB=0;
   532  000A60  0E00               	movlw	0
   533  000A62  6F5C               	movwf	92,b	;volatile
   534                           
   535                           ;main.c: 43:     TRISD=0;
   536  000A64  0E00               	movlw	0
   537  000A66  6E95               	movwf	149,c	;volatile
   538                           
   539                           ;main.c: 44:     TRISE=0;
   540  000A68  0E00               	movlw	0
   541  000A6A  6E96               	movwf	150,c	;volatile
   542                           
   543                           ;main.c: 45:     TRISA=1;
   544  000A6C  0E01               	movlw	1
   545  000A6E  6E92               	movwf	146,c	;volatile
   546                           
   547                           ;main.c: 46:     TRISB=0;
   548  000A70  0E00               	movlw	0
   549  000A72  6E93               	movwf	147,c	;volatile
   550  000A74                     
   551                           ; BSR set to: 15
   552                           ;main.c: 48:     begin();
   553  000A74  EC3A  F009         	call	_begin	;wreg free
   554  000A78                     
   555                           ;main.c: 49:     create(1,0x08,0x0C,0x0E,0x0F,0x0E,0x0C,0x08,0x00);
   556  000A78  0E08               	movlw	8
   557  000A7A  6E15               	movwf	create@b^0,c
   558  000A7C  0E0C               	movlw	12
   559  000A7E  6E16               	movwf	create@c^0,c
   560  000A80  0E0E               	movlw	14
   561  000A82  6E17               	movwf	create@d^0,c
   562  000A84  0E0F               	movlw	15
   563  000A86  6E18               	movwf	create@e^0,c
   564  000A88  0E0E               	movlw	14
   565  000A8A  6E19               	movwf	create@f^0,c
   566  000A8C  0E0C               	movlw	12
   567  000A8E  6E1A               	movwf	create@g^0,c
   568  000A90  0E08               	movlw	8
   569  000A92  6E1B               	movwf	create@h^0,c
   570  000A94  0E00               	movlw	0
   571  000A96  6E1C               	movwf	create@i^0,c
   572  000A98  0E01               	movlw	1
   573  000A9A  EC36  F004         	call	_create
   574  000A9E                     
   575                           ;main.c: 50:     create(2,0x0E,0x0E,0x0F,0x1F,0x1F,0x1F,0x1F,0x1F);
   576  000A9E  0E0E               	movlw	14
   577  000AA0  6E15               	movwf	create@b^0,c
   578  000AA2  0E0E               	movlw	14
   579  000AA4  6E16               	movwf	create@c^0,c
   580  000AA6  0E0F               	movlw	15
   581  000AA8  6E17               	movwf	create@d^0,c
   582  000AAA  0E1F               	movlw	31
   583  000AAC  6E18               	movwf	create@e^0,c
   584  000AAE  0E1F               	movlw	31
   585  000AB0  6E19               	movwf	create@f^0,c
   586  000AB2  0E1F               	movlw	31
   587  000AB4  6E1A               	movwf	create@g^0,c
   588  000AB6  0E1F               	movlw	31
   589  000AB8  6E1B               	movwf	create@h^0,c
   590  000ABA  0E1F               	movlw	31
   591  000ABC  6E1C               	movwf	create@i^0,c
   592  000ABE  0E02               	movlw	2
   593  000AC0  EC36  F004         	call	_create
   594  000AC4                     
   595                           ;main.c: 52:     menu_principal();
   596  000AC4  EC13  F007         	call	_menu_principal	;wreg free
   597  000AC8                     
   598                           ;main.c: 53:     ocultarcursor();
   599  000AC8  EC05  F00A         	call	_ocultarcursor	;wreg free
   600  000ACC                     
   601                           ;main.c: 54:     seleccion_down(a);
   602  000ACC  C02A  F01E         	movff	_a,seleccion_down@a
   603  000AD0  C02B  F01F         	movff	_a+1,seleccion_down@a+1
   604  000AD4  EC8A  F009         	call	_seleccion_down	;wreg free
   605  000AD8                     l1764:
   606                           
   607                           ;main.c: 57:         if (PORTAbits.RA1==1){
   608  000AD8  A280               	btfss	128,1,c	;volatile
   609  000ADA  EF71  F005         	goto	u661
   610  000ADE  EF73  F005         	goto	u660
   611  000AE2                     u661:
   612  000AE2  EFB0  F005         	goto	l1784
   613  000AE6                     u660:
   614  000AE6                     l123:
   615  000AE6  B280               	btfsc	128,1,c	;volatile
   616  000AE8  EF78  F005         	goto	u671
   617  000AEC  EF7A  F005         	goto	u670
   618  000AF0                     u671:
   619  000AF0  EF73  F005         	goto	l123
   620  000AF4                     u670:
   621  000AF4                     
   622                           ;main.c: 59:             a++;
   623  000AF4  4A2A               	infsnz	_a^0,f,c
   624  000AF6  2A2B               	incf	(_a+1)^0,f,c
   625  000AF8                     
   626                           ;main.c: 60:             if(a>4){
   627  000AF8  BE2B               	btfsc	(_a+1)^0,7,c
   628  000AFA  EF88  F005         	goto	u681
   629  000AFE  502B               	movf	(_a+1)^0,w,c
   630  000B00  E109               	bnz	u680
   631  000B02  0E05               	movlw	5
   632  000B04  5C2A               	subwf	_a^0,w,c
   633  000B06  A0D8               	btfss	status,0,c
   634  000B08  EF88  F005         	goto	u681
   635  000B0C  EF8A  F005         	goto	u680
   636  000B10                     u681:
   637  000B10  EF96  F005         	goto	l1776
   638  000B14                     u680:
   639  000B14                     
   640                           ;main.c: 61:                 a=4;
   641  000B14  0E00               	movlw	0
   642  000B16  6E2B               	movwf	(_a+1)^0,c
   643  000B18  0E04               	movlw	4
   644  000B1A  6E2A               	movwf	_a^0,c
   645  000B1C                     l1774:
   646                           
   647                           ;main.c: 62:                 seleccion_down(a);
   648  000B1C  C02A  F01E         	movff	_a,seleccion_down@a
   649  000B20  C02B  F01F         	movff	_a+1,seleccion_down@a+1
   650  000B24  EC8A  F009         	call	_seleccion_down	;wreg free
   651                           
   652                           ;main.c: 63:             }
   653  000B28  EFAA  F005         	goto	l1782
   654  000B2C                     l1776:
   655  000B2C  BE2B               	btfsc	(_a+1)^0,7,c
   656  000B2E  EFA4  F005         	goto	u690
   657  000B32  502B               	movf	(_a+1)^0,w,c
   658  000B34  E107               	bnz	u691
   659  000B36  0E02               	movlw	2
   660  000B38  5C2A               	subwf	_a^0,w,c
   661  000B3A  B0D8               	btfsc	status,0,c
   662  000B3C  EFA2  F005         	goto	u691
   663  000B40  EFA4  F005         	goto	u690
   664  000B44                     u691:
   665  000B44  EFAA  F005         	goto	l1782
   666  000B48                     u690:
   667  000B48                     
   668                           ;main.c: 65:                 a=2;
   669  000B48  0E00               	movlw	0
   670  000B4A  6E2B               	movwf	(_a+1)^0,c
   671  000B4C  0E02               	movlw	2
   672  000B4E  6E2A               	movwf	_a^0,c
   673  000B50  EF8E  F005         	goto	l1774
   674  000B54                     l1782:
   675                           
   676                           ;main.c: 68:             seleccion_down(a);
   677  000B54  C02A  F01E         	movff	_a,seleccion_down@a
   678  000B58  C02B  F01F         	movff	_a+1,seleccion_down@a+1
   679  000B5C  EC8A  F009         	call	_seleccion_down	;wreg free
   680  000B60                     l1784:
   681                           
   682                           ;main.c: 70:         if (PORTAbits.RA0==1){
   683  000B60  A080               	btfss	128,0,c	;volatile
   684  000B62  EFB5  F005         	goto	u701
   685  000B66  EFB7  F005         	goto	u700
   686  000B6A                     u701:
   687  000B6A  EF6C  F005         	goto	l1764
   688  000B6E                     u700:
   689  000B6E                     l130:
   690  000B6E  B080               	btfsc	128,0,c	;volatile
   691  000B70  EFBC  F005         	goto	u711
   692  000B74  EFBE  F005         	goto	u710
   693  000B78                     u711:
   694  000B78  EFB7  F005         	goto	l130
   695  000B7C                     u710:
   696  000B7C                     
   697                           ;main.c: 72:             a--;
   698  000B7C  062A               	decf	_a^0,f,c
   699  000B7E  A0D8               	btfss	status,0,c
   700  000B80  062B               	decf	(_a+1)^0,f,c
   701  000B82                     
   702                           ;main.c: 73:             if(a>4){
   703  000B82  BE2B               	btfsc	(_a+1)^0,7,c
   704  000B84  EFCD  F005         	goto	u721
   705  000B88  502B               	movf	(_a+1)^0,w,c
   706  000B8A  E109               	bnz	u720
   707  000B8C  0E05               	movlw	5
   708  000B8E  5C2A               	subwf	_a^0,w,c
   709  000B90  A0D8               	btfss	status,0,c
   710  000B92  EFCD  F005         	goto	u721
   711  000B96  EFCF  F005         	goto	u720
   712  000B9A                     u721:
   713  000B9A  EFDB  F005         	goto	l1796
   714  000B9E                     u720:
   715  000B9E                     
   716                           ;main.c: 74:                 a=4;
   717  000B9E  0E00               	movlw	0
   718  000BA0  6E2B               	movwf	(_a+1)^0,c
   719  000BA2  0E04               	movlw	4
   720  000BA4  6E2A               	movwf	_a^0,c
   721  000BA6                     l1794:
   722                           
   723                           ;main.c: 75:                 seleccion_up(a);
   724  000BA6  C02A  F01E         	movff	_a,seleccion_up@a
   725  000BAA  C02B  F01F         	movff	_a+1,seleccion_up@a+1
   726  000BAE  EC76  F009         	call	_seleccion_up	;wreg free
   727                           
   728                           ;main.c: 76:             }
   729  000BB2  EFEF  F005         	goto	l1802
   730  000BB6                     l1796:
   731  000BB6  BE2B               	btfsc	(_a+1)^0,7,c
   732  000BB8  EFE9  F005         	goto	u730
   733  000BBC  502B               	movf	(_a+1)^0,w,c
   734  000BBE  E107               	bnz	u731
   735  000BC0  0E02               	movlw	2
   736  000BC2  5C2A               	subwf	_a^0,w,c
   737  000BC4  B0D8               	btfsc	status,0,c
   738  000BC6  EFE7  F005         	goto	u731
   739  000BCA  EFE9  F005         	goto	u730
   740  000BCE                     u731:
   741  000BCE  EFEF  F005         	goto	l1802
   742  000BD2                     u730:
   743  000BD2                     
   744                           ;main.c: 78:                 a=2;
   745  000BD2  0E00               	movlw	0
   746  000BD4  6E2B               	movwf	(_a+1)^0,c
   747  000BD6  0E02               	movlw	2
   748  000BD8  6E2A               	movwf	_a^0,c
   749  000BDA  EFD3  F005         	goto	l1794
   750  000BDE                     l1802:
   751                           
   752                           ;main.c: 81:             seleccion_up(a);
   753  000BDE  C02A  F01E         	movff	_a,seleccion_up@a
   754  000BE2  C02B  F01F         	movff	_a+1,seleccion_up@a+1
   755  000BE6  EC76  F009         	call	_seleccion_up	;wreg free
   756  000BEA  EF6C  F005         	goto	l1764
   757  000BEE  EF8A  F000         	goto	start
   758  000BF2                     __end_of_main:
   759                           	opt callstack 0
   760                           
   761 ;; *************** function _seleccion_up *****************
   762 ;; Defined at:
   763 ;;		line 168 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  a               2   29[COMRAM] int 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   777 ;;      Params:         2       0       0       0       0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0
   780 ;;      Totals:         2       0       0       0       0       0       0       0       0
   781 ;;Total ram usage:        2 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:   10
   784 ;; This function calls:
   785 ;;		_print
   786 ;;		_setCursor
   787 ;;		_writecaracter
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text1
   794  0012EC                     __ptext1:
   795                           	opt callstack 0
   796  0012EC                     _seleccion_up:
   797                           	opt callstack 20
   798  0012EC                     
   799                           ;main.c: 169:     setCursor(1,a+1);
   800  0012EC  281E               	incf	seleccion_up@a^0,w,c
   801  0012EE  6E15               	movwf	setCursor@y^0,c
   802  0012F0  0E01               	movlw	1
   803  0012F2  ECF9  F005         	call	_setCursor
   804  0012F6                     
   805                           ;main.c: 170:     print(" ");
   806  0012F6  0E69               	movlw	low STR_18
   807  0012F8  6E18               	movwf	print@a^0,c
   808  0012FA  0E08               	movlw	high STR_18
   809  0012FC  6E19               	movwf	(print@a+1)^0,c
   810  0012FE  ECE4  F008         	call	_print	;wreg free
   811  001302                     
   812                           ;main.c: 171:     setCursor(1,a);
   813  001302  C01E  F015         	movff	seleccion_up@a,setCursor@y
   814  001306  0E01               	movlw	1
   815  001308  ECF9  F005         	call	_setCursor
   816  00130C                     
   817                           ;main.c: 172:     writecaracter(1);
   818  00130C  0E01               	movlw	1
   819  00130E  ECE8  F009         	call	_writecaracter
   820  001312  0012               	return		;funcret
   821  001314                     __end_of_seleccion_up:
   822                           	opt callstack 0
   823                           
   824 ;; *************** function _seleccion_down *****************
   825 ;; Defined at:
   826 ;;		line 162 in file "main.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  a               2   29[COMRAM] int 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   840 ;;      Params:         2       0       0       0       0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0       0
   843 ;;      Totals:         2       0       0       0       0       0       0       0       0
   844 ;;Total ram usage:        2 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:   10
   847 ;; This function calls:
   848 ;;		_print
   849 ;;		_setCursor
   850 ;;		_writecaracter
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text2
   857  001314                     __ptext2:
   858                           	opt callstack 0
   859  001314                     _seleccion_down:
   860                           	opt callstack 20
   861  001314                     
   862                           ;main.c: 163:     setCursor(1,a-1);
   863  001314  041E               	decf	seleccion_down@a^0,w,c
   864  001316  6E15               	movwf	setCursor@y^0,c
   865  001318  0E01               	movlw	1
   866  00131A  ECF9  F005         	call	_setCursor
   867  00131E                     
   868                           ;main.c: 164:     print(" ");
   869  00131E  0E69               	movlw	low STR_18
   870  001320  6E18               	movwf	print@a^0,c
   871  001322  0E08               	movlw	high STR_18
   872  001324  6E19               	movwf	(print@a+1)^0,c
   873  001326  ECE4  F008         	call	_print	;wreg free
   874  00132A                     
   875                           ;main.c: 165:     setCursor(1,a);
   876  00132A  C01E  F015         	movff	seleccion_down@a,setCursor@y
   877  00132E  0E01               	movlw	1
   878  001330  ECF9  F005         	call	_setCursor
   879  001334                     
   880                           ;main.c: 166:     writecaracter(1);
   881  001334  0E01               	movlw	1
   882  001336  ECE8  F009         	call	_writecaracter
   883  00133A  0012               	return		;funcret
   884  00133C                     __end_of_seleccion_down:
   885                           	opt callstack 0
   886                           
   887 ;; *************** function _oscilador *****************
   888 ;; Defined at:
   889 ;;		line 87 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   903 ;;      Params:         0       0       0       0       0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0
   906 ;;      Totals:         0       0       0       0       0       0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    6
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text3
   918  001426                     __ptext3:
   919                           	opt callstack 0
   920  001426                     _oscilador:
   921                           	opt callstack 24
   922  001426                     
   923                           ;main.c: 88:     OSCCON=0X40;
   924  001426  0E40               	movlw	64
   925  001428  6ED3               	movwf	211,c	;volatile
   926                           
   927                           ;main.c: 89:     OSCCON2=0X00;
   928  00142A  0E00               	movlw	0
   929  00142C  6ED2               	movwf	210,c	;volatile
   930  00142E  0012               	return		;funcret
   931  001430                     __end_of_oscilador:
   932                           	opt callstack 0
   933                           
   934 ;; *************** function _ocultarcursor *****************
   935 ;; Defined at:
   936 ;;		line 207 in file "LCD.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   950 ;;      Params:         0       0       0       0       0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    8
   957 ;; This function calls:
   958 ;;		_comando
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text4
   965  00140A                     __ptext4:
   966                           	opt callstack 0
   967  00140A                     _ocultarcursor:
   968                           	opt callstack 22
   969  00140A                     
   970                           ;LCD.c: 208:     comando(0x00);
   971  00140A  0E00               	movlw	0
   972  00140C  ECD0  F009         	call	_comando
   973                           
   974                           ;LCD.c: 209:     comando(0x0c);
   975  001410  0E0C               	movlw	12
   976  001412  ECD0  F009         	call	_comando
   977  001416  0012               	return		;funcret
   978  001418                     __end_of_ocultarcursor:
   979                           	opt callstack 0
   980                           
   981 ;; *************** function _menu_principal *****************
   982 ;; Defined at:
   983 ;;		line 104 in file "main.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   997 ;;      Params:         0       0       0       0       0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0
   999 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1000 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1001 ;;Total ram usage:        1 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:   10
  1004 ;; This function calls:
  1005 ;;		_print
  1006 ;;		_setCursor
  1007 ;;		_writecaracter
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text5
  1014  000E26                     __ptext5:
  1015                           	opt callstack 0
  1016  000E26                     _menu_principal:
  1017                           	opt callstack 20
  1018  000E26                     
  1019                           ;main.c: 105:     setCursor(2,1);
  1020  000E26  0E01               	movlw	1
  1021  000E28  6E15               	movwf	setCursor@y^0,c
  1022  000E2A  0E02               	movlw	2
  1023  000E2C  ECF9  F005         	call	_setCursor
  1024  000E30                     
  1025                           ;main.c: 106:     print("MENU");
  1026  000E30  0E64               	movlw	low STR_1
  1027  000E32  6E18               	movwf	print@a^0,c
  1028  000E34  0E08               	movlw	high STR_1
  1029  000E36  6E19               	movwf	(print@a+1)^0,c
  1030  000E38  ECE4  F008         	call	_print	;wreg free
  1031  000E3C                     
  1032                           ;main.c: 107:     setCursor(15,1);
  1033  000E3C  0E01               	movlw	1
  1034  000E3E  6E15               	movwf	setCursor@y^0,c
  1035  000E40  0E0F               	movlw	15
  1036  000E42  ECF9  F005         	call	_setCursor
  1037  000E46                     
  1038                           ;main.c: 108:     writecaracter(2);
  1039  000E46  0E02               	movlw	2
  1040  000E48  ECE8  F009         	call	_writecaracter
  1041  000E4C                     
  1042                           ;main.c: 109:     print("%100");
  1043  000E4C  0E5F               	movlw	low STR_2
  1044  000E4E  6E18               	movwf	print@a^0,c
  1045  000E50  0E08               	movlw	high STR_2
  1046  000E52  6E19               	movwf	(print@a+1)^0,c
  1047  000E54  ECE4  F008         	call	_print	;wreg free
  1048  000E58                     
  1049                           ;main.c: 110:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  1050  000E58  0E41               	movlw	65
  1051  000E5A  6E1E               	movwf	??_menu_principal^0,c
  1052  000E5C  0EEE               	movlw	238
  1053  000E5E                     u797:
  1054  000E5E  2EE8               	decfsz	wreg,f,c
  1055  000E60  D7FE               	bra	u797
  1056  000E62  2E1E               	decfsz	??_menu_principal^0,f,c
  1057  000E64  D7FC               	bra	u797
  1058  000E66  D000               	nop2	
  1059  000E68                     
  1060                           ;main.c: 111:     setCursor(2,2);
  1061  000E68  0E02               	movlw	2
  1062  000E6A  6E15               	movwf	setCursor@y^0,c
  1063  000E6C  0E02               	movlw	2
  1064  000E6E  ECF9  F005         	call	_setCursor
  1065  000E72                     
  1066                           ;main.c: 112:     print("GLUCOSA");
  1067  000E72  0E51               	movlw	low STR_3
  1068  000E74  6E18               	movwf	print@a^0,c
  1069  000E76  0E08               	movlw	high STR_3
  1070  000E78  6E19               	movwf	(print@a+1)^0,c
  1071  000E7A  ECE4  F008         	call	_print	;wreg free
  1072  000E7E                     
  1073                           ;main.c: 113:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  1074  000E7E  0E41               	movlw	65
  1075  000E80  6E1E               	movwf	??_menu_principal^0,c
  1076  000E82  0EEE               	movlw	238
  1077  000E84                     u807:
  1078  000E84  2EE8               	decfsz	wreg,f,c
  1079  000E86  D7FE               	bra	u807
  1080  000E88  2E1E               	decfsz	??_menu_principal^0,f,c
  1081  000E8A  D7FC               	bra	u807
  1082  000E8C  D000               	nop2	
  1083  000E8E                     
  1084                           ;main.c: 114:     setCursor(2,3);
  1085  000E8E  0E03               	movlw	3
  1086  000E90  6E15               	movwf	setCursor@y^0,c
  1087  000E92  0E02               	movlw	2
  1088  000E94  ECF9  F005         	call	_setCursor
  1089  000E98                     
  1090                           ;main.c: 115:     print("DOSIS");
  1091  000E98  0E59               	movlw	low STR_4
  1092  000E9A  6E18               	movwf	print@a^0,c
  1093  000E9C  0E08               	movlw	high STR_4
  1094  000E9E  6E19               	movwf	(print@a+1)^0,c
  1095  000EA0  ECE4  F008         	call	_print	;wreg free
  1096  000EA4                     
  1097                           ;main.c: 116:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  1098  000EA4  0E41               	movlw	65
  1099  000EA6  6E1E               	movwf	??_menu_principal^0,c
  1100  000EA8  0EEE               	movlw	238
  1101  000EAA                     u817:
  1102  000EAA  2EE8               	decfsz	wreg,f,c
  1103  000EAC  D7FE               	bra	u817
  1104  000EAE  2E1E               	decfsz	??_menu_principal^0,f,c
  1105  000EB0  D7FC               	bra	u817
  1106  000EB2  D000               	nop2	
  1107  000EB4                     
  1108                           ;main.c: 117:     setCursor(2,4);
  1109  000EB4  0E04               	movlw	4
  1110  000EB6  6E15               	movwf	setCursor@y^0,c
  1111  000EB8  0E02               	movlw	2
  1112  000EBA  ECF9  F005         	call	_setCursor
  1113  000EBE                     
  1114                           ;main.c: 118:     print("HISTORIAL");
  1115  000EBE  0E22               	movlw	low STR_5
  1116  000EC0  6E18               	movwf	print@a^0,c
  1117  000EC2  0E08               	movlw	high STR_5
  1118  000EC4  6E19               	movwf	(print@a+1)^0,c
  1119  000EC6  ECE4  F008         	call	_print	;wreg free
  1120  000ECA  0012               	return		;funcret
  1121  000ECC                     __end_of_menu_principal:
  1122                           	opt callstack 0
  1123                           
  1124 ;; *************** function _writecaracter *****************
  1125 ;; Defined at:
  1126 ;;		line 190 in file "LCD.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  a               1    wreg     unsigned char 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  a               1   20[COMRAM] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0
  1141 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1143 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1144 ;;Total ram usage:        1 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    8
  1147 ;; This function calls:
  1148 ;;		_comando
  1149 ;; This function is called by:
  1150 ;;		_menu_principal
  1151 ;;		_seleccion_down
  1152 ;;		_seleccion_up
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text6
  1157  0013D0                     __ptext6:
  1158                           	opt callstack 0
  1159  0013D0                     _writecaracter:
  1160                           	opt callstack 21
  1161                           
  1162                           ;incstack = 0
  1163                           ;writecaracter@a stored from wreg
  1164  0013D0  6E15               	movwf	writecaracter@a^0,c
  1165  0013D2                     
  1166                           ;LCD.c: 191:     PORTEbits.RE0=1;
  1167  0013D2  8084               	bsf	132,0,c	;volatile
  1168  0013D4                     
  1169                           ;LCD.c: 192:     comando(0x00);
  1170  0013D4  0E00               	movlw	0
  1171  0013D6  ECD0  F009         	call	_comando
  1172  0013DA                     
  1173                           ;LCD.c: 193:     comando(a-1);
  1174  0013DA  0415               	decf	writecaracter@a^0,w,c
  1175  0013DC  ECD0  F009         	call	_comando
  1176  0013E0                     
  1177                           ;LCD.c: 194:     PORTEbits.RE0=0;
  1178  0013E0  9084               	bcf	132,0,c	;volatile
  1179  0013E2  0012               	return		;funcret
  1180  0013E4                     __end_of_writecaracter:
  1181                           	opt callstack 0
  1182                           
  1183 ;; *************** function _setCursor *****************
  1184 ;; Defined at:
  1185 ;;		line 56 in file "LCD.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  x               1    wreg     unsigned char 
  1188 ;;  y               1   20[COMRAM] unsigned char 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  x               1   26[COMRAM] unsigned char 
  1191 ;;  n               1   25[COMRAM] unsigned char 
  1192 ;;  m               1   24[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         1       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        7 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    8
  1209 ;; This function calls:
  1210 ;;		_comando
  1211 ;; This function is called by:
  1212 ;;		_menu_principal
  1213 ;;		_seleccion_down
  1214 ;;		_seleccion_up
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text7
  1219  000BF2                     __ptext7:
  1220                           	opt callstack 0
  1221  000BF2                     _setCursor:
  1222                           	opt callstack 21
  1223                           
  1224                           ;incstack = 0
  1225                           ;setCursor@x stored from wreg
  1226  000BF2  6E1B               	movwf	setCursor@x^0,c
  1227  000BF4                     
  1228                           ;LCD.c: 57:     char m;;LCD.c: 58:     char n;;LCD.c: 59:     if(y==1){
  1229  000BF4  0415               	decf	setCursor@y^0,w,c
  1230  000BF6  A4D8               	btfss	status,2,c
  1231  000BF8  EF00  F006         	goto	u461
  1232  000BFC  EF02  F006         	goto	u460
  1233  000C00                     u461:
  1234  000C00  EF1C  F006         	goto	l26
  1235  000C04                     u460:
  1236  000C04                     
  1237                           ;LCD.c: 60:         m=0x80 + x;
  1238  000C04  501B               	movf	setCursor@x^0,w,c
  1239  000C06  0F80               	addlw	128
  1240  000C08  6E19               	movwf	setCursor@m^0,c
  1241                           
  1242                           ;LCD.c: 61:         n=(0x80 + x) >> 4;
  1243  000C0A  501B               	movf	setCursor@x^0,w,c
  1244  000C0C  6E16               	movwf	??_setCursor^0,c
  1245  000C0E  6A17               	clrf	(??_setCursor+1)^0,c
  1246  000C10  0E80               	movlw	128
  1247  000C12  2616               	addwf	??_setCursor^0,f,c
  1248  000C14  0E00               	movlw	0
  1249  000C16  2217               	addwfc	(??_setCursor+1)^0,f,c
  1250  000C18  0E04               	movlw	4
  1251  000C1A  6E18               	movwf	(??_setCursor+2)^0,c
  1252  000C1C                     u475:
  1253  000C1C  3417               	rlcf	(??_setCursor+1)^0,w,c
  1254  000C1E  3217               	rrcf	(??_setCursor+1)^0,f,c
  1255  000C20  3216               	rrcf	??_setCursor^0,f,c
  1256  000C22  2E18               	decfsz	(??_setCursor+2)^0,f,c
  1257  000C24  EF0E  F006         	goto	u475
  1258  000C28  5016               	movf	??_setCursor^0,w,c
  1259  000C2A  6E1A               	movwf	setCursor@n^0,c
  1260  000C2C                     
  1261                           ;LCD.c: 62:         comando(n);
  1262  000C2C  501A               	movf	setCursor@n^0,w,c
  1263  000C2E  ECD0  F009         	call	_comando
  1264  000C32                     
  1265                           ;LCD.c: 63:         comando(m);
  1266  000C32  5019               	movf	setCursor@m^0,w,c
  1267  000C34  ECD0  F009         	call	_comando
  1268  000C38                     l26:
  1269                           
  1270                           ;LCD.c: 65:     if(y==2){
  1271  000C38  0E02               	movlw	2
  1272  000C3A  1815               	xorwf	setCursor@y^0,w,c
  1273  000C3C  A4D8               	btfss	status,2,c
  1274  000C3E  EF23  F006         	goto	u481
  1275  000C42  EF25  F006         	goto	u480
  1276  000C46                     u481:
  1277  000C46  EF3F  F006         	goto	l27
  1278  000C4A                     u480:
  1279  000C4A                     
  1280                           ;LCD.c: 66:         m=0xC0 + x;
  1281  000C4A  501B               	movf	setCursor@x^0,w,c
  1282  000C4C  0FC0               	addlw	192
  1283  000C4E  6E19               	movwf	setCursor@m^0,c
  1284                           
  1285                           ;LCD.c: 67:         n=(0xC0 + x) >> 4;
  1286  000C50  501B               	movf	setCursor@x^0,w,c
  1287  000C52  6E16               	movwf	??_setCursor^0,c
  1288  000C54  6A17               	clrf	(??_setCursor+1)^0,c
  1289  000C56  0EC0               	movlw	192
  1290  000C58  2616               	addwf	??_setCursor^0,f,c
  1291  000C5A  0E00               	movlw	0
  1292  000C5C  2217               	addwfc	(??_setCursor+1)^0,f,c
  1293  000C5E  0E04               	movlw	4
  1294  000C60  6E18               	movwf	(??_setCursor+2)^0,c
  1295  000C62                     u495:
  1296  000C62  3417               	rlcf	(??_setCursor+1)^0,w,c
  1297  000C64  3217               	rrcf	(??_setCursor+1)^0,f,c
  1298  000C66  3216               	rrcf	??_setCursor^0,f,c
  1299  000C68  2E18               	decfsz	(??_setCursor+2)^0,f,c
  1300  000C6A  EF31  F006         	goto	u495
  1301  000C6E  5016               	movf	??_setCursor^0,w,c
  1302  000C70  6E1A               	movwf	setCursor@n^0,c
  1303  000C72                     
  1304                           ;LCD.c: 68:         comando(n);
  1305  000C72  501A               	movf	setCursor@n^0,w,c
  1306  000C74  ECD0  F009         	call	_comando
  1307  000C78                     
  1308                           ;LCD.c: 69:         comando(m);
  1309  000C78  5019               	movf	setCursor@m^0,w,c
  1310  000C7A  ECD0  F009         	call	_comando
  1311  000C7E                     l27:
  1312                           
  1313                           ;LCD.c: 71:     if(y==3){
  1314  000C7E  0E03               	movlw	3
  1315  000C80  1815               	xorwf	setCursor@y^0,w,c
  1316  000C82  A4D8               	btfss	status,2,c
  1317  000C84  EF46  F006         	goto	u501
  1318  000C88  EF48  F006         	goto	u500
  1319  000C8C                     u501:
  1320  000C8C  EF62  F006         	goto	l28
  1321  000C90                     u500:
  1322  000C90                     
  1323                           ;LCD.c: 72:         m=0x80 +20+ x;
  1324  000C90  501B               	movf	setCursor@x^0,w,c
  1325  000C92  0F94               	addlw	148
  1326  000C94  6E19               	movwf	setCursor@m^0,c
  1327                           
  1328                           ;LCD.c: 73:         n=(0x80+20 + x) >> 4;
  1329  000C96  501B               	movf	setCursor@x^0,w,c
  1330  000C98  6E16               	movwf	??_setCursor^0,c
  1331  000C9A  6A17               	clrf	(??_setCursor+1)^0,c
  1332  000C9C  0E94               	movlw	148
  1333  000C9E  2616               	addwf	??_setCursor^0,f,c
  1334  000CA0  0E00               	movlw	0
  1335  000CA2  2217               	addwfc	(??_setCursor+1)^0,f,c
  1336  000CA4  0E04               	movlw	4
  1337  000CA6  6E18               	movwf	(??_setCursor+2)^0,c
  1338  000CA8                     u515:
  1339  000CA8  3417               	rlcf	(??_setCursor+1)^0,w,c
  1340  000CAA  3217               	rrcf	(??_setCursor+1)^0,f,c
  1341  000CAC  3216               	rrcf	??_setCursor^0,f,c
  1342  000CAE  2E18               	decfsz	(??_setCursor+2)^0,f,c
  1343  000CB0  EF54  F006         	goto	u515
  1344  000CB4  5016               	movf	??_setCursor^0,w,c
  1345  000CB6  6E1A               	movwf	setCursor@n^0,c
  1346  000CB8                     
  1347                           ;LCD.c: 74:         comando(n);
  1348  000CB8  501A               	movf	setCursor@n^0,w,c
  1349  000CBA  ECD0  F009         	call	_comando
  1350  000CBE                     
  1351                           ;LCD.c: 75:         comando(m);
  1352  000CBE  5019               	movf	setCursor@m^0,w,c
  1353  000CC0  ECD0  F009         	call	_comando
  1354  000CC4                     l28:
  1355                           
  1356                           ;LCD.c: 77:     if(y==4){
  1357  000CC4  0E04               	movlw	4
  1358  000CC6  1815               	xorwf	setCursor@y^0,w,c
  1359  000CC8  A4D8               	btfss	status,2,c
  1360  000CCA  EF69  F006         	goto	u521
  1361  000CCE  EF6B  F006         	goto	u520
  1362  000CD2                     u521:
  1363  000CD2  EF85  F006         	goto	l30
  1364  000CD6                     u520:
  1365  000CD6                     
  1366                           ;LCD.c: 78:         m=0xC0 +20+ x;
  1367  000CD6  501B               	movf	setCursor@x^0,w,c
  1368  000CD8  0FD4               	addlw	212
  1369  000CDA  6E19               	movwf	setCursor@m^0,c
  1370                           
  1371                           ;LCD.c: 79:         n=(0xC0 + 20+ x) >> 4;
  1372  000CDC  501B               	movf	setCursor@x^0,w,c
  1373  000CDE  6E16               	movwf	??_setCursor^0,c
  1374  000CE0  6A17               	clrf	(??_setCursor+1)^0,c
  1375  000CE2  0ED4               	movlw	212
  1376  000CE4  2616               	addwf	??_setCursor^0,f,c
  1377  000CE6  0E00               	movlw	0
  1378  000CE8  2217               	addwfc	(??_setCursor+1)^0,f,c
  1379  000CEA  0E04               	movlw	4
  1380  000CEC  6E18               	movwf	(??_setCursor+2)^0,c
  1381  000CEE                     u535:
  1382  000CEE  3417               	rlcf	(??_setCursor+1)^0,w,c
  1383  000CF0  3217               	rrcf	(??_setCursor+1)^0,f,c
  1384  000CF2  3216               	rrcf	??_setCursor^0,f,c
  1385  000CF4  2E18               	decfsz	(??_setCursor+2)^0,f,c
  1386  000CF6  EF77  F006         	goto	u535
  1387  000CFA  5016               	movf	??_setCursor^0,w,c
  1388  000CFC  6E1A               	movwf	setCursor@n^0,c
  1389  000CFE                     
  1390                           ;LCD.c: 80:         comando(n);
  1391  000CFE  501A               	movf	setCursor@n^0,w,c
  1392  000D00  ECD0  F009         	call	_comando
  1393  000D04                     
  1394                           ;LCD.c: 81:         comando(m);
  1395  000D04  5019               	movf	setCursor@m^0,w,c
  1396  000D06  ECD0  F009         	call	_comando
  1397  000D0A                     l30:
  1398  000D0A  0012               	return		;funcret
  1399  000D0C                     __end_of_setCursor:
  1400                           	opt callstack 0
  1401                           
  1402 ;; *************** function _print *****************
  1403 ;; Defined at:
  1404 ;;		line 95 in file "LCD.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  a               2   23[COMRAM] PTR unsigned char 
  1407 ;;		 -> STR_19(2), STR_18(2), STR_17(11), STR_16(11), 
  1408 ;;		 -> STR_15(11), STR_14(10), STR_13(10), STR_12(9), 
  1409 ;;		 -> STR_11(10), STR_10(8), STR_9(10), STR_8(9), 
  1410 ;;		 -> STR_7(8), STR_6(6), STR_5(10), STR_4(6), 
  1411 ;;		 -> STR_3(8), STR_2(5), STR_1(5), 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  k               2   27[COMRAM] int 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1423 ;;      Params:         2       0       0       0       0       0       0       0       0
  1424 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1425 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1426 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1427 ;;Total ram usage:        6 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    9
  1430 ;; This function calls:
  1431 ;;		_caracter
  1432 ;; This function is called by:
  1433 ;;		_menu_principal
  1434 ;;		_seleccion_down
  1435 ;;		_seleccion_up
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text8
  1440  0011C8                     __ptext8:
  1441                           	opt callstack 0
  1442  0011C8                     _print:
  1443                           	opt callstack 20
  1444  0011C8                     
  1445                           ;LCD.c: 96:     for (int k=0;a[k]!='\0';k++){
  1446  0011C8  0E00               	movlw	0
  1447  0011CA  6E1D               	movwf	(print@k+1)^0,c
  1448  0011CC  0E00               	movlw	0
  1449  0011CE  6E1C               	movwf	print@k^0,c
  1450  0011D0  EFFA  F008         	goto	l1452
  1451  0011D4                     l1448:
  1452                           
  1453                           ;LCD.c: 97:         caracter(a[k]);
  1454  0011D4  501C               	movf	print@k^0,w,c
  1455  0011D6  2418               	addwf	print@a^0,w,c
  1456  0011D8  6E1A               	movwf	??_print^0,c
  1457  0011DA  501D               	movf	(print@k+1)^0,w,c
  1458  0011DC  2019               	addwfc	(print@a+1)^0,w,c
  1459  0011DE  6E1B               	movwf	(??_print+1)^0,c
  1460  0011E0  C01A  FFF6         	movff	??_print,tblptrl
  1461  0011E4  C01B  FFF7         	movff	??_print+1,tblptrh
  1462  0011E8                     	if	0	;tblptru may be non-zero
  1463  0011E8                     	endif
  1464  0011E8                     	if	0	;tblptru may be non-zero
  1465  0011E8                     	endif
  1466  0011E8  0008               	tblrd		*
  1467  0011EA  50F5               	movf	tablat,w,c
  1468  0011EC  ECB2  F009         	call	_caracter
  1469  0011F0                     
  1470                           ;LCD.c: 98:     }
  1471  0011F0  4A1C               	infsnz	print@k^0,f,c
  1472  0011F2  2A1D               	incf	(print@k+1)^0,f,c
  1473  0011F4                     l1452:
  1474  0011F4  501C               	movf	print@k^0,w,c
  1475  0011F6  2418               	addwf	print@a^0,w,c
  1476  0011F8  6E1A               	movwf	??_print^0,c
  1477  0011FA  501D               	movf	(print@k+1)^0,w,c
  1478  0011FC  2019               	addwfc	(print@a+1)^0,w,c
  1479  0011FE  6E1B               	movwf	(??_print+1)^0,c
  1480  001200  C01A  FFF6         	movff	??_print,tblptrl
  1481  001204  C01B  FFF7         	movff	??_print+1,tblptrh
  1482  001208                     	if	0	;tblptru may be non-zero
  1483  001208                     	endif
  1484  001208                     	if	0	;tblptru may be non-zero
  1485  001208                     	endif
  1486  001208  0008               	tblrd		*
  1487  00120A  50F5               	movf	tablat,w,c
  1488  00120C  0900               	iorlw	0
  1489  00120E  A4D8               	btfss	status,2,c
  1490  001210  EF0C  F009         	goto	u541
  1491  001214  EF0E  F009         	goto	u540
  1492  001218                     u541:
  1493  001218  EFEA  F008         	goto	l1448
  1494  00121C                     u540:
  1495  00121C  0012               	return		;funcret
  1496  00121E                     __end_of_print:
  1497                           	opt callstack 0
  1498                           
  1499 ;; *************** function _caracter *****************
  1500 ;; Defined at:
  1501 ;;		line 85 in file "LCD.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  a               1    wreg     unsigned char 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  a               1   22[COMRAM] unsigned char 
  1506 ;;  n               1   21[COMRAM] unsigned char 
  1507 ;;  m               1   20[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0
  1518 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1520 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1521 ;;Total ram usage:        3 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    8
  1524 ;; This function calls:
  1525 ;;		_comando
  1526 ;; This function is called by:
  1527 ;;		_print
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text9
  1532  001364                     __ptext9:
  1533                           	opt callstack 0
  1534  001364                     _caracter:
  1535                           	opt callstack 20
  1536                           
  1537                           ;incstack = 0
  1538                           ;caracter@a stored from wreg
  1539  001364  6E17               	movwf	caracter@a^0,c
  1540  001366                     
  1541                           ;LCD.c: 86:     char m,n;;LCD.c: 87:     m=a>>4;
  1542  001366  3817               	swapf	caracter@a^0,w,c
  1543  001368  0B0F               	andlw	15
  1544  00136A  6E15               	movwf	caracter@m^0,c
  1545  00136C                     
  1546                           ;LCD.c: 88:     n=a;
  1547  00136C  C017  F016         	movff	caracter@a,caracter@n
  1548  001370                     
  1549                           ;LCD.c: 89:     PORTEbits.RE0=1;
  1550  001370  8084               	bsf	132,0,c	;volatile
  1551  001372                     
  1552                           ;LCD.c: 90:     comando(m);
  1553  001372  5015               	movf	caracter@m^0,w,c
  1554  001374  ECD0  F009         	call	_comando
  1555  001378                     
  1556                           ;LCD.c: 91:     comando(n);
  1557  001378  5016               	movf	caracter@n^0,w,c
  1558  00137A  ECD0  F009         	call	_comando
  1559  00137E                     
  1560                           ;LCD.c: 92:     PORTEbits.RE0=0;
  1561  00137E  9084               	bcf	132,0,c	;volatile
  1562  001380  0012               	return		;funcret
  1563  001382                     __end_of_caracter:
  1564                           	opt callstack 0
  1565                           
  1566 ;; *************** function _create *****************
  1567 ;; Defined at:
  1568 ;;		line 101 in file "LCD.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  a               1    wreg     unsigned char 
  1571 ;;  b               1   20[COMRAM] unsigned char 
  1572 ;;  c               1   21[COMRAM] unsigned char 
  1573 ;;  d               1   22[COMRAM] unsigned char 
  1574 ;;  e               1   23[COMRAM] unsigned char 
  1575 ;;  f               1   24[COMRAM] unsigned char 
  1576 ;;  g               1   25[COMRAM] unsigned char 
  1577 ;;  h               1   26[COMRAM] unsigned char 
  1578 ;;  i               1   27[COMRAM] unsigned char 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  a               1   29[COMRAM] unsigned char 
  1581 ;;  n               1   33[COMRAM] unsigned char 
  1582 ;;  m               1   32[COMRAM] unsigned char 
  1583 ;;  n               1   31[COMRAM] unsigned char 
  1584 ;;  m               1   30[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1594 ;;      Params:         8       0       0       0       0       0       0       0       0
  1595 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1596 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1597 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1598 ;;Total ram usage:       14 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    8
  1601 ;; This function calls:
  1602 ;;		_comando
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text10
  1609  00086C                     __ptext10:
  1610                           	opt callstack 0
  1611  00086C                     _create:
  1612                           	opt callstack 22
  1613                           
  1614                           ;incstack = 0
  1615                           ;create@a stored from wreg
  1616  00086C  6E1E               	movwf	create@a^0,c
  1617  00086E                     
  1618                           ;LCD.c: 102:     if(a==1){
  1619  00086E  041E               	decf	create@a^0,w,c
  1620  000870  A4D8               	btfss	status,2,c
  1621  000872  EF3D  F004         	goto	u641
  1622  000876  EF3F  F004         	goto	u640
  1623  00087A                     u641:
  1624  00087A  EFAD  F004         	goto	l1554
  1625  00087E                     u640:
  1626  00087E                     
  1627                           ;LCD.c: 103:         comando(0x04);
  1628  00087E  0E04               	movlw	4
  1629  000880  ECD0  F009         	call	_comando
  1630                           
  1631                           ;LCD.c: 104:         comando(0x00);
  1632  000884  0E00               	movlw	0
  1633  000886  ECD0  F009         	call	_comando
  1634  00088A                     
  1635                           ;LCD.c: 105:         PORTEbits.RE0=1;
  1636  00088A  8084               	bsf	132,0,c	;volatile
  1637  00088C                     
  1638                           ;LCD.c: 106:         char m,n;;LCD.c: 107:         m=b>>4;
  1639  00088C  3815               	swapf	create@b^0,w,c
  1640  00088E  0B0F               	andlw	15
  1641  000890  6E1F               	movwf	create@m^0,c
  1642  000892                     
  1643                           ;LCD.c: 108:         n=b;
  1644  000892  C015  F020         	movff	create@b,create@n
  1645  000896                     
  1646                           ;LCD.c: 109:         comando(m);
  1647  000896  501F               	movf	create@m^0,w,c
  1648  000898  ECD0  F009         	call	_comando
  1649  00089C                     
  1650                           ;LCD.c: 110:         comando(n);
  1651  00089C  5020               	movf	create@n^0,w,c
  1652  00089E  ECD0  F009         	call	_comando
  1653  0008A2                     
  1654                           ;LCD.c: 111:         m=c>>4;
  1655  0008A2  3816               	swapf	create@c^0,w,c
  1656  0008A4  0B0F               	andlw	15
  1657  0008A6  6E1F               	movwf	create@m^0,c
  1658  0008A8                     
  1659                           ;LCD.c: 112:         n=c;
  1660  0008A8  C016  F020         	movff	create@c,create@n
  1661                           
  1662                           ;LCD.c: 113:         comando(m);
  1663  0008AC  501F               	movf	create@m^0,w,c
  1664  0008AE  ECD0  F009         	call	_comando
  1665                           
  1666                           ;LCD.c: 114:         comando(n);
  1667  0008B2  5020               	movf	create@n^0,w,c
  1668  0008B4  ECD0  F009         	call	_comando
  1669  0008B8                     
  1670                           ;LCD.c: 115:         m=d>>4;
  1671  0008B8  3817               	swapf	create@d^0,w,c
  1672  0008BA  0B0F               	andlw	15
  1673  0008BC  6E1F               	movwf	create@m^0,c
  1674  0008BE                     
  1675                           ;LCD.c: 116:         n=d;
  1676  0008BE  C017  F020         	movff	create@d,create@n
  1677  0008C2                     
  1678                           ;LCD.c: 117:         comando(m);
  1679  0008C2  501F               	movf	create@m^0,w,c
  1680  0008C4  ECD0  F009         	call	_comando
  1681  0008C8                     
  1682                           ;LCD.c: 118:         comando(n);
  1683  0008C8  5020               	movf	create@n^0,w,c
  1684  0008CA  ECD0  F009         	call	_comando
  1685  0008CE                     
  1686                           ;LCD.c: 119:         m=e>>4;
  1687  0008CE  3818               	swapf	create@e^0,w,c
  1688  0008D0  0B0F               	andlw	15
  1689  0008D2  6E1F               	movwf	create@m^0,c
  1690  0008D4                     
  1691                           ;LCD.c: 120:         n=e;
  1692  0008D4  C018  F020         	movff	create@e,create@n
  1693                           
  1694                           ;LCD.c: 121:         comando(m);
  1695  0008D8  501F               	movf	create@m^0,w,c
  1696  0008DA  ECD0  F009         	call	_comando
  1697                           
  1698                           ;LCD.c: 122:         comando(n);
  1699  0008DE  5020               	movf	create@n^0,w,c
  1700  0008E0  ECD0  F009         	call	_comando
  1701  0008E4                     
  1702                           ;LCD.c: 123:         m=f>>4;
  1703  0008E4  3819               	swapf	create@f^0,w,c
  1704  0008E6  0B0F               	andlw	15
  1705  0008E8  6E1F               	movwf	create@m^0,c
  1706  0008EA                     
  1707                           ;LCD.c: 124:         n=f;
  1708  0008EA  C019  F020         	movff	create@f,create@n
  1709  0008EE                     
  1710                           ;LCD.c: 125:         comando(m);
  1711  0008EE  501F               	movf	create@m^0,w,c
  1712  0008F0  ECD0  F009         	call	_comando
  1713  0008F4                     
  1714                           ;LCD.c: 126:         comando(n);
  1715  0008F4  5020               	movf	create@n^0,w,c
  1716  0008F6  ECD0  F009         	call	_comando
  1717  0008FA                     
  1718                           ;LCD.c: 127:         m=g>>4;
  1719  0008FA  381A               	swapf	create@g^0,w,c
  1720  0008FC  0B0F               	andlw	15
  1721  0008FE  6E1F               	movwf	create@m^0,c
  1722  000900                     
  1723                           ;LCD.c: 128:         n=g;
  1724  000900  C01A  F020         	movff	create@g,create@n
  1725                           
  1726                           ;LCD.c: 129:         comando(m);
  1727  000904  501F               	movf	create@m^0,w,c
  1728  000906  ECD0  F009         	call	_comando
  1729                           
  1730                           ;LCD.c: 130:         comando(n);
  1731  00090A  5020               	movf	create@n^0,w,c
  1732  00090C  ECD0  F009         	call	_comando
  1733  000910                     
  1734                           ;LCD.c: 131:         m=h>>4;
  1735  000910  381B               	swapf	create@h^0,w,c
  1736  000912  0B0F               	andlw	15
  1737  000914  6E1F               	movwf	create@m^0,c
  1738  000916                     
  1739                           ;LCD.c: 132:         n=h;
  1740  000916  C01B  F020         	movff	create@h,create@n
  1741  00091A                     
  1742                           ;LCD.c: 133:         comando(m);
  1743  00091A  501F               	movf	create@m^0,w,c
  1744  00091C  ECD0  F009         	call	_comando
  1745  000920                     
  1746                           ;LCD.c: 134:         comando(n);
  1747  000920  5020               	movf	create@n^0,w,c
  1748  000922  ECD0  F009         	call	_comando
  1749  000926                     
  1750                           ;LCD.c: 135:         m=i>>4;
  1751  000926  381C               	swapf	create@i^0,w,c
  1752  000928  0B0F               	andlw	15
  1753  00092A  6E1F               	movwf	create@m^0,c
  1754  00092C                     
  1755                           ;LCD.c: 136:         n=i;
  1756  00092C  C01C  F020         	movff	create@i,create@n
  1757                           
  1758                           ;LCD.c: 137:         comando(m);
  1759  000930  501F               	movf	create@m^0,w,c
  1760  000932  ECD0  F009         	call	_comando
  1761                           
  1762                           ;LCD.c: 138:         comando(n);
  1763  000936  5020               	movf	create@n^0,w,c
  1764  000938  ECD0  F009         	call	_comando
  1765  00093C                     
  1766                           ;LCD.c: 139:         PORTEbits.RE0=0;
  1767  00093C  9084               	bcf	132,0,c	;volatile
  1768                           
  1769                           ;LCD.c: 140:         comando(0x00);
  1770  00093E  0E00               	movlw	0
  1771  000940  ECD0  F009         	call	_comando
  1772                           
  1773                           ;LCD.c: 141:         comando(0x01);
  1774  000944  0E01               	movlw	1
  1775  000946  ECD0  F009         	call	_comando
  1776  00094A                     
  1777                           ;LCD.c: 142:         _delay((unsigned long)((100)*(2000000UL/4000.0)));
  1778  00094A  0E41               	movlw	65
  1779  00094C  6E1D               	movwf	??_create^0,c
  1780  00094E  0EEE               	movlw	238
  1781  000950                     u827:
  1782  000950  2EE8               	decfsz	wreg,f,c
  1783  000952  D7FE               	bra	u827
  1784  000954  2E1D               	decfsz	??_create^0,f,c
  1785  000956  D7FC               	bra	u827
  1786  000958  D000               	nop2	
  1787  00095A                     l1554:
  1788                           
  1789                           ;LCD.c: 144:     if(a==2){
  1790  00095A  0E02               	movlw	2
  1791  00095C  181E               	xorwf	create@a^0,w,c
  1792  00095E  A4D8               	btfss	status,2,c
  1793  000960  EFB4  F004         	goto	u651
  1794  000964  EFB6  F004         	goto	u650
  1795  000968                     u651:
  1796  000968  EF24  F005         	goto	l44
  1797  00096C                     u650:
  1798  00096C                     
  1799                           ;LCD.c: 145:         comando(0x04);
  1800  00096C  0E04               	movlw	4
  1801  00096E  ECD0  F009         	call	_comando
  1802                           
  1803                           ;LCD.c: 146:         comando(0x08);
  1804  000972  0E08               	movlw	8
  1805  000974  ECD0  F009         	call	_comando
  1806  000978                     
  1807                           ;LCD.c: 147:         PORTEbits.RE0=1;
  1808  000978  8084               	bsf	132,0,c	;volatile
  1809  00097A                     
  1810                           ;LCD.c: 148:         char m,n;;LCD.c: 149:         m=b>>4;
  1811  00097A  3815               	swapf	create@b^0,w,c
  1812  00097C  0B0F               	andlw	15
  1813  00097E  6E21               	movwf	create@m_172^0,c
  1814  000980                     
  1815                           ;LCD.c: 150:         n=b;
  1816  000980  C015  F022         	movff	create@b,create@n_173
  1817  000984                     
  1818                           ;LCD.c: 151:         comando(m);
  1819  000984  5021               	movf	create@m_172^0,w,c
  1820  000986  ECD0  F009         	call	_comando
  1821  00098A                     
  1822                           ;LCD.c: 152:         comando(n);
  1823  00098A  5022               	movf	create@n_173^0,w,c
  1824  00098C  ECD0  F009         	call	_comando
  1825  000990                     
  1826                           ;LCD.c: 153:         m=c>>4;
  1827  000990  3816               	swapf	create@c^0,w,c
  1828  000992  0B0F               	andlw	15
  1829  000994  6E21               	movwf	create@m_172^0,c
  1830  000996                     
  1831                           ;LCD.c: 154:         n=c;
  1832  000996  C016  F022         	movff	create@c,create@n_173
  1833                           
  1834                           ;LCD.c: 155:         comando(m);
  1835  00099A  5021               	movf	create@m_172^0,w,c
  1836  00099C  ECD0  F009         	call	_comando
  1837                           
  1838                           ;LCD.c: 156:         comando(n);
  1839  0009A0  5022               	movf	create@n_173^0,w,c
  1840  0009A2  ECD0  F009         	call	_comando
  1841  0009A6                     
  1842                           ;LCD.c: 157:         m=d>>4;
  1843  0009A6  3817               	swapf	create@d^0,w,c
  1844  0009A8  0B0F               	andlw	15
  1845  0009AA  6E21               	movwf	create@m_172^0,c
  1846  0009AC                     
  1847                           ;LCD.c: 158:         n=d;
  1848  0009AC  C017  F022         	movff	create@d,create@n_173
  1849  0009B0                     
  1850                           ;LCD.c: 159:         comando(m);
  1851  0009B0  5021               	movf	create@m_172^0,w,c
  1852  0009B2  ECD0  F009         	call	_comando
  1853  0009B6                     
  1854                           ;LCD.c: 160:         comando(n);
  1855  0009B6  5022               	movf	create@n_173^0,w,c
  1856  0009B8  ECD0  F009         	call	_comando
  1857  0009BC                     
  1858                           ;LCD.c: 161:         m=e>>4;
  1859  0009BC  3818               	swapf	create@e^0,w,c
  1860  0009BE  0B0F               	andlw	15
  1861  0009C0  6E21               	movwf	create@m_172^0,c
  1862  0009C2                     
  1863                           ;LCD.c: 162:         n=e;
  1864  0009C2  C018  F022         	movff	create@e,create@n_173
  1865                           
  1866                           ;LCD.c: 163:         comando(m);
  1867  0009C6  5021               	movf	create@m_172^0,w,c
  1868  0009C8  ECD0  F009         	call	_comando
  1869                           
  1870                           ;LCD.c: 164:         comando(n);
  1871  0009CC  5022               	movf	create@n_173^0,w,c
  1872  0009CE  ECD0  F009         	call	_comando
  1873  0009D2                     
  1874                           ;LCD.c: 165:         m=f>>4;
  1875  0009D2  3819               	swapf	create@f^0,w,c
  1876  0009D4  0B0F               	andlw	15
  1877  0009D6  6E21               	movwf	create@m_172^0,c
  1878  0009D8                     
  1879                           ;LCD.c: 166:         n=f;
  1880  0009D8  C019  F022         	movff	create@f,create@n_173
  1881  0009DC                     
  1882                           ;LCD.c: 167:         comando(m);
  1883  0009DC  5021               	movf	create@m_172^0,w,c
  1884  0009DE  ECD0  F009         	call	_comando
  1885  0009E2                     
  1886                           ;LCD.c: 168:         comando(n);
  1887  0009E2  5022               	movf	create@n_173^0,w,c
  1888  0009E4  ECD0  F009         	call	_comando
  1889  0009E8                     
  1890                           ;LCD.c: 169:         m=g>>4;
  1891  0009E8  381A               	swapf	create@g^0,w,c
  1892  0009EA  0B0F               	andlw	15
  1893  0009EC  6E21               	movwf	create@m_172^0,c
  1894  0009EE                     
  1895                           ;LCD.c: 170:         n=g;
  1896  0009EE  C01A  F022         	movff	create@g,create@n_173
  1897                           
  1898                           ;LCD.c: 171:         comando(m);
  1899  0009F2  5021               	movf	create@m_172^0,w,c
  1900  0009F4  ECD0  F009         	call	_comando
  1901                           
  1902                           ;LCD.c: 172:         comando(n);
  1903  0009F8  5022               	movf	create@n_173^0,w,c
  1904  0009FA  ECD0  F009         	call	_comando
  1905  0009FE                     
  1906                           ;LCD.c: 173:         m=h>>4;
  1907  0009FE  381B               	swapf	create@h^0,w,c
  1908  000A00  0B0F               	andlw	15
  1909  000A02  6E21               	movwf	create@m_172^0,c
  1910  000A04                     
  1911                           ;LCD.c: 174:         n=h;
  1912  000A04  C01B  F022         	movff	create@h,create@n_173
  1913  000A08                     
  1914                           ;LCD.c: 175:         comando(m);
  1915  000A08  5021               	movf	create@m_172^0,w,c
  1916  000A0A  ECD0  F009         	call	_comando
  1917  000A0E                     
  1918                           ;LCD.c: 176:         comando(n);
  1919  000A0E  5022               	movf	create@n_173^0,w,c
  1920  000A10  ECD0  F009         	call	_comando
  1921  000A14                     
  1922                           ;LCD.c: 177:         m=i>>4;
  1923  000A14  381C               	swapf	create@i^0,w,c
  1924  000A16  0B0F               	andlw	15
  1925  000A18  6E21               	movwf	create@m_172^0,c
  1926  000A1A                     
  1927                           ;LCD.c: 178:         n=i;
  1928  000A1A  C01C  F022         	movff	create@i,create@n_173
  1929                           
  1930                           ;LCD.c: 179:         comando(m);
  1931  000A1E  5021               	movf	create@m_172^0,w,c
  1932  000A20  ECD0  F009         	call	_comando
  1933                           
  1934                           ;LCD.c: 180:         comando(n);
  1935  000A24  5022               	movf	create@n_173^0,w,c
  1936  000A26  ECD0  F009         	call	_comando
  1937  000A2A                     
  1938                           ;LCD.c: 181:         PORTEbits.RE0=0;
  1939  000A2A  9084               	bcf	132,0,c	;volatile
  1940                           
  1941                           ;LCD.c: 182:         comando(0x00);
  1942  000A2C  0E00               	movlw	0
  1943  000A2E  ECD0  F009         	call	_comando
  1944                           
  1945                           ;LCD.c: 183:         comando(0x01);
  1946  000A32  0E01               	movlw	1
  1947  000A34  ECD0  F009         	call	_comando
  1948  000A38                     
  1949                           ;LCD.c: 184:         _delay((unsigned long)((100)*(2000000UL/4000.0)));
  1950  000A38  0E41               	movlw	65
  1951  000A3A  6E1D               	movwf	??_create^0,c
  1952  000A3C  0EEE               	movlw	238
  1953  000A3E                     u837:
  1954  000A3E  2EE8               	decfsz	wreg,f,c
  1955  000A40  D7FE               	bra	u837
  1956  000A42  2E1D               	decfsz	??_create^0,f,c
  1957  000A44  D7FC               	bra	u837
  1958  000A46  D000               	nop2	
  1959  000A48                     l44:
  1960  000A48  0012               	return		;funcret
  1961  000A4A                     __end_of_create:
  1962                           	opt callstack 0
  1963                           
  1964 ;; *************** function _conf *****************
  1965 ;; Defined at:
  1966 ;;		line 92 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		None
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    6
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text11
  1995  0013F8                     __ptext11:
  1996                           	opt callstack 0
  1997  0013F8                     _conf:
  1998                           	opt callstack 24
  1999  0013F8                     
  2000                           ;main.c: 93:     TRISBbits.RB0=1;
  2001  0013F8  8093               	bsf	147,0,c	;volatile
  2002                           
  2003                           ;main.c: 94:     INTCONbits.INT0IE=1;
  2004  0013FA  88F2               	bsf	242,4,c	;volatile
  2005                           
  2006                           ;main.c: 95:     INTCONbits.INT0IF=0;
  2007  0013FC  92F2               	bcf	242,1,c	;volatile
  2008                           
  2009                           ;main.c: 96:     INTCON2bits.INTEDG0=0;
  2010  0013FE  9CF1               	bcf	241,6,c	;volatile
  2011                           
  2012                           ;main.c: 97:     INTCONbits.GIE=1;
  2013  001400  8EF2               	bsf	242,7,c	;volatile
  2014                           
  2015                           ;main.c: 99:     INTCON3bits.INT1IE=0;
  2016  001402  96F0               	bcf	240,3,c	;volatile
  2017                           
  2018                           ;main.c: 100:     INTCON3bits.INT1IF=0;
  2019  001404  90F0               	bcf	240,0,c	;volatile
  2020                           
  2021                           ;main.c: 101:     INTCON2bits.INTEDG1=0;
  2022  001406  9AF1               	bcf	241,5,c	;volatile
  2023  001408  0012               	return		;funcret
  2024  00140A                     __end_of_conf:
  2025                           	opt callstack 0
  2026                           
  2027 ;; *************** function _begin *****************
  2028 ;; Defined at:
  2029 ;;		line 41 in file "LCD.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    8
  2050 ;; This function calls:
  2051 ;;		_comando
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text12
  2058  001274                     __ptext12:
  2059                           	opt callstack 0
  2060  001274                     _begin:
  2061                           	opt callstack 22
  2062  001274                     
  2063                           ;LCD.c: 42:     comando(0x03);
  2064  001274  0E03               	movlw	3
  2065  001276  ECD0  F009         	call	_comando
  2066                           
  2067                           ;LCD.c: 43:     comando(0x03);
  2068  00127A  0E03               	movlw	3
  2069  00127C  ECD0  F009         	call	_comando
  2070                           
  2071                           ;LCD.c: 44:     comando(0x03);
  2072  001280  0E03               	movlw	3
  2073  001282  ECD0  F009         	call	_comando
  2074                           
  2075                           ;LCD.c: 45:     comando(0x02);
  2076  001286  0E02               	movlw	2
  2077  001288  ECD0  F009         	call	_comando
  2078                           
  2079                           ;LCD.c: 46:     comando(0x02);
  2080  00128C  0E02               	movlw	2
  2081  00128E  ECD0  F009         	call	_comando
  2082                           
  2083                           ;LCD.c: 47:     comando(0x08);
  2084  001292  0E08               	movlw	8
  2085  001294  ECD0  F009         	call	_comando
  2086                           
  2087                           ;LCD.c: 48:     comando(0x00);
  2088  001298  0E00               	movlw	0
  2089  00129A  ECD0  F009         	call	_comando
  2090                           
  2091                           ;LCD.c: 49:     comando(0x08);
  2092  00129E  0E08               	movlw	8
  2093  0012A0  ECD0  F009         	call	_comando
  2094                           
  2095                           ;LCD.c: 50:     comando(0x00);
  2096  0012A4  0E00               	movlw	0
  2097  0012A6  ECD0  F009         	call	_comando
  2098                           
  2099                           ;LCD.c: 51:     comando(0x01);
  2100  0012AA  0E01               	movlw	1
  2101  0012AC  ECD0  F009         	call	_comando
  2102                           
  2103                           ;LCD.c: 52:     comando(0x00);
  2104  0012B0  0E00               	movlw	0
  2105  0012B2  ECD0  F009         	call	_comando
  2106                           
  2107                           ;LCD.c: 53:     comando(0x0D);
  2108  0012B6  0E0D               	movlw	13
  2109  0012B8  ECD0  F009         	call	_comando
  2110  0012BC  0012               	return		;funcret
  2111  0012BE                     __end_of_begin:
  2112                           	opt callstack 0
  2113                           
  2114 ;; *************** function _comando *****************
  2115 ;; Defined at:
  2116 ;;		line 32 in file "LCD.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  a               1    wreg     unsigned char 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  a               1   19[COMRAM] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0
  2131 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2133 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2134 ;;Total ram usage:        1 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    7
  2137 ;; This function calls:
  2138 ;;		_busdata
  2139 ;; This function is called by:
  2140 ;;		_begin
  2141 ;;		_setCursor
  2142 ;;		_caracter
  2143 ;;		_create
  2144 ;;		_writecaracter
  2145 ;;		_ocultarcursor
  2146 ;;		_home
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text13
  2151  0013A0                     __ptext13:
  2152                           	opt callstack 0
  2153  0013A0                     _comando:
  2154                           	opt callstack 21
  2155                           
  2156                           ;incstack = 0
  2157                           ;comando@a stored from wreg
  2158  0013A0  6E14               	movwf	comando@a^0,c
  2159  0013A2                     
  2160                           ;LCD.c: 33:     PORTEbits.RE2=0;
  2161  0013A2  9484               	bcf	132,2,c	;volatile
  2162                           
  2163                           ;LCD.c: 34:     PORTEbits.RE2=1;
  2164  0013A4  8484               	bsf	132,2,c	;volatile
  2165  0013A6                     
  2166                           ;LCD.c: 36:     busdata(a);
  2167  0013A6  5014               	movf	comando@a^0,w,c
  2168  0013A8  EC88  F008         	call	_busdata
  2169  0013AC                     
  2170                           ;LCD.c: 37:     _delay((unsigned long)((1)*(2000000UL/4000.0)));
  2171  0013AC  0EA6               	movlw	166
  2172  0013AE                     u847:
  2173  0013AE  2EE8               	decfsz	wreg,f,c
  2174  0013B0  D7FE               	bra	u847
  2175  0013B2  D000               	nop2	
  2176  0013B4                     
  2177                           ;LCD.c: 38:     PORTEbits.RE2=0;
  2178  0013B4  9484               	bcf	132,2,c	;volatile
  2179  0013B6  0012               	return		;funcret
  2180  0013B8                     __end_of_comando:
  2181                           	opt callstack 0
  2182                           
  2183 ;; *************** function _busdata *****************
  2184 ;; Defined at:
  2185 ;;		line 4 in file "LCD.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  a               1    wreg     unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  a               1   18[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0
  2200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2202 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2203 ;;Total ram usage:        1 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    6
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_comando
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text14
  2214  001110                     __ptext14:
  2215                           	opt callstack 0
  2216  001110                     _busdata:
  2217                           	opt callstack 21
  2218                           
  2219                           ;incstack = 0
  2220                           ;busdata@a stored from wreg
  2221  001110  6E13               	movwf	busdata@a^0,c
  2222  001112                     
  2223                           ;LCD.c: 5:     if (a & 0x01){
  2224  001112  A013               	btfss	busdata@a^0,0,c
  2225  001114  EF8E  F008         	goto	u11
  2226  001118  EF90  F008         	goto	u10
  2227  00111C                     u11:
  2228  00111C  EF93  F008         	goto	l9
  2229  001120                     u10:
  2230  001120                     
  2231                           ;LCD.c: 6:         PORTDbits.RD4=1;
  2232  001120  8883               	bsf	131,4,c	;volatile
  2233                           
  2234                           ;LCD.c: 7:     }
  2235  001122  EF94  F008         	goto	l854
  2236  001126                     l9:
  2237                           
  2238                           ;LCD.c: 9:         PORTDbits.RD4=0;
  2239  001126  9883               	bcf	131,4,c	;volatile
  2240  001128                     l854:
  2241                           
  2242                           ;LCD.c: 11:     if (a & 0x02){
  2243  001128  A213               	btfss	busdata@a^0,1,c
  2244  00112A  EF99  F008         	goto	u21
  2245  00112E  EF9B  F008         	goto	u20
  2246  001132                     u21:
  2247  001132  EF9E  F008         	goto	l11
  2248  001136                     u20:
  2249  001136                     
  2250                           ;LCD.c: 12:         PORTDbits.RD5=1;
  2251  001136  8A83               	bsf	131,5,c	;volatile
  2252                           
  2253                           ;LCD.c: 13:     }
  2254  001138  EF9F  F008         	goto	l858
  2255  00113C                     l11:
  2256                           
  2257                           ;LCD.c: 15:         PORTDbits.RD5=0;
  2258  00113C  9A83               	bcf	131,5,c	;volatile
  2259  00113E                     l858:
  2260                           
  2261                           ;LCD.c: 17:     if (a & 0x04){
  2262  00113E  A413               	btfss	busdata@a^0,2,c
  2263  001140  EFA4  F008         	goto	u31
  2264  001144  EFA6  F008         	goto	u30
  2265  001148                     u31:
  2266  001148  EFA9  F008         	goto	l13
  2267  00114C                     u30:
  2268  00114C                     
  2269                           ;LCD.c: 18:         PORTDbits.RD6=1;
  2270  00114C  8C83               	bsf	131,6,c	;volatile
  2271                           
  2272                           ;LCD.c: 19:     }
  2273  00114E  EFAA  F008         	goto	l862
  2274  001152                     l13:
  2275                           
  2276                           ;LCD.c: 21:         PORTDbits.RD6=0;
  2277  001152  9C83               	bcf	131,6,c	;volatile
  2278  001154                     l862:
  2279                           
  2280                           ;LCD.c: 23:     if (a & 0x08){
  2281  001154  A613               	btfss	busdata@a^0,3,c
  2282  001156  EFAF  F008         	goto	u41
  2283  00115A  EFB1  F008         	goto	u40
  2284  00115E                     u41:
  2285  00115E  EFB4  F008         	goto	l15
  2286  001162                     u40:
  2287  001162                     
  2288                           ;LCD.c: 24:         PORTDbits.RD7=1;
  2289  001162  8E83               	bsf	131,7,c	;volatile
  2290                           
  2291                           ;LCD.c: 25:     }
  2292  001164  EFB5  F008         	goto	l17
  2293  001168                     l15:
  2294                           
  2295                           ;LCD.c: 27:         PORTDbits.RD7=0;
  2296  001168  9E83               	bcf	131,7,c	;volatile
  2297  00116A                     l17:
  2298  00116A  0012               	return		;funcret
  2299  00116C                     __end_of_busdata:
  2300                           	opt callstack 0
  2301                           
  2302 ;; *************** function _first_int *****************
  2303 ;; Defined at:
  2304 ;;		line 174 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2318 ;;      Params:         0       0       0       0       0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2320 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2321 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2322 ;;Total ram usage:        5 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    5
  2325 ;; This function calls:
  2326 ;;		_clear
  2327 ;;		_menu_dosis
  2328 ;;		_menu_glucosa
  2329 ;;		_menu_historial
  2330 ;;		i2_menu_principal
  2331 ;;		i2_seleccion_up
  2332 ;; This function is called by:
  2333 ;;		Interrupt level 2
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	intcode
  2338  000008                     __pintcode:
  2339                           	opt callstack 0
  2340  000008                     _first_int:
  2341                           	opt callstack 20
  2342                           
  2343                           ;incstack = 0
  2344  000008  822C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2345  00000A  CFF6 F00F          	movff	tblptrl,??_first_int+1
  2346  00000E  CFF7 F010          	movff	tblptrh,??_first_int+2
  2347  000012  CFF8 F011          	movff	tblptru,??_first_int+3
  2348  000016  CFF5 F012          	movff	tablat,??_first_int+4
  2349  00001A                     
  2350                           ;main.c: 175:     if(INTCONbits.INT0IF==1){
  2351  00001A  A2F2               	btfss	242,1,c	;volatile
  2352  00001C  EF12  F000         	goto	i2u74_41
  2353  000020  EF14  F000         	goto	i2u74_40
  2354  000024                     i2u74_41:
  2355  000024  EF58  F000         	goto	i2l1844
  2356  000028                     i2u74_40:
  2357  000028                     
  2358                           ;main.c: 176:         if(a==2){
  2359  000028  0E02               	movlw	2
  2360  00002A  182A               	xorwf	_a^0,w,c
  2361  00002C  102B               	iorwf	(_a+1)^0,w,c
  2362  00002E  A4D8               	btfss	status,2,c
  2363  000030  EF1C  F000         	goto	i2u75_41
  2364  000034  EF1E  F000         	goto	i2u75_40
  2365  000038                     i2u75_41:
  2366  000038  EF31  F000         	goto	i2l1816
  2367  00003C                     i2u75_40:
  2368  00003C                     
  2369                           ;main.c: 177:             clear();
  2370  00003C  EC0C  F00A         	call	_clear	;wreg free
  2371  000040                     
  2372                           ;main.c: 178:             menu_glucosa();
  2373  000040  ECFE  F007         	call	_menu_glucosa	;wreg free
  2374  000044                     i2l1812:
  2375                           
  2376                           ;main.c: 179:             seleccion_up(2);
  2377  000044  0E00               	movlw	0
  2378  000046  6E0D               	movwf	(i2seleccion_up@a+1)^0,c
  2379  000048  0E02               	movlw	2
  2380  00004A  6E0C               	movwf	i2seleccion_up@a^0,c
  2381  00004C  EC9E  F009         	call	i2_seleccion_up	;wreg free
  2382  000050                     
  2383                           ;main.c: 180:             _delay((unsigned long)((200)*(2000000UL/4000.0)));
  2384  000050  0E82               	movlw	130
  2385  000052  6E0E               	movwf	??_first_int^0,c
  2386  000054  0EDE               	movlw	222
  2387  000056                     i2u85_47:
  2388  000056  2EE8               	decfsz	wreg,f,c
  2389  000058  D7FE               	bra	i2u85_47
  2390  00005A  2E0E               	decfsz	??_first_int^0,f,c
  2391  00005C  D7FC               	bra	i2u85_47
  2392                           
  2393                           ;main.c: 181:         }
  2394  00005E  EF51  F000         	goto	i2l1836
  2395  000062                     i2l1816:
  2396  000062  0E03               	movlw	3
  2397  000064  182A               	xorwf	_a^0,w,c
  2398  000066  102B               	iorwf	(_a+1)^0,w,c
  2399  000068  A4D8               	btfss	status,2,c
  2400  00006A  EF39  F000         	goto	i2u76_41
  2401  00006E  EF3B  F000         	goto	i2u76_40
  2402  000072                     i2u76_41:
  2403  000072  EF41  F000         	goto	i2l1826
  2404  000076                     i2u76_40:
  2405  000076                     
  2406                           ;main.c: 183:             clear();
  2407  000076  EC0C  F00A         	call	_clear	;wreg free
  2408  00007A                     
  2409                           ;main.c: 184:             menu_dosis();
  2410  00007A  EC43  F008         	call	_menu_dosis	;wreg free
  2411  00007E  EF22  F000         	goto	i2l1812
  2412  000082                     i2l1826:
  2413  000082  0E04               	movlw	4
  2414  000084  182A               	xorwf	_a^0,w,c
  2415  000086  102B               	iorwf	(_a+1)^0,w,c
  2416  000088  A4D8               	btfss	status,2,c
  2417  00008A  EF49  F000         	goto	i2u77_41
  2418  00008E  EF4B  F000         	goto	i2u77_40
  2419  000092                     i2u77_41:
  2420  000092  EF51  F000         	goto	i2l1836
  2421  000096                     i2u77_40:
  2422  000096                     
  2423                           ;main.c: 189:             clear();
  2424  000096  EC0C  F00A         	call	_clear	;wreg free
  2425  00009A                     
  2426                           ;main.c: 190:             menu_historial();
  2427  00009A  ECB9  F007         	call	_menu_historial	;wreg free
  2428  00009E  EF22  F000         	goto	i2l1812
  2429  0000A2                     i2l1836:
  2430                           
  2431                           ;main.c: 194:         INTCONbits.INT0IF=0;
  2432  0000A2  92F2               	bcf	242,1,c	;volatile
  2433  0000A4                     
  2434                           ;main.c: 195:         INTCONbits.INT0IE=0;
  2435  0000A4  98F2               	bcf	242,4,c	;volatile
  2436  0000A6                     
  2437                           ;main.c: 196:         INTCON3bits.INT1IE=1;
  2438  0000A6  86F0               	bsf	240,3,c	;volatile
  2439  0000A8                     
  2440                           ;main.c: 197:         a=2;
  2441  0000A8  0E00               	movlw	0
  2442  0000AA  6E2B               	movwf	(_a+1)^0,c
  2443  0000AC  0E02               	movlw	2
  2444  0000AE  6E2A               	movwf	_a^0,c
  2445  0000B0                     i2l1844:
  2446                           
  2447                           ;main.c: 200:     if(INTCON3bits.INT1IF==1){
  2448  0000B0  A0F0               	btfss	240,0,c	;volatile
  2449  0000B2  EF5D  F000         	goto	i2u78_41
  2450  0000B6  EF5F  F000         	goto	i2u78_40
  2451  0000BA                     i2u78_41:
  2452  0000BA  EF80  F000         	goto	i2l174
  2453  0000BE                     i2u78_40:
  2454  0000BE                     
  2455                           ;main.c: 201:         _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2456  0000BE  0E41               	movlw	65
  2457  0000C0  6E0E               	movwf	??_first_int^0,c
  2458  0000C2  0EEE               	movlw	238
  2459  0000C4                     i2u86_47:
  2460  0000C4  2EE8               	decfsz	wreg,f,c
  2461  0000C6  D7FE               	bra	i2u86_47
  2462  0000C8  2E0E               	decfsz	??_first_int^0,f,c
  2463  0000CA  D7FC               	bra	i2u86_47
  2464  0000CC  D000               	nop2	
  2465  0000CE                     
  2466                           ;main.c: 202:         clear();
  2467  0000CE  EC0C  F00A         	call	_clear	;wreg free
  2468  0000D2                     
  2469                           ;main.c: 203:         _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2470  0000D2  0E41               	movlw	65
  2471  0000D4  6E0E               	movwf	??_first_int^0,c
  2472  0000D6  0EEE               	movlw	238
  2473  0000D8                     i2u87_47:
  2474  0000D8  2EE8               	decfsz	wreg,f,c
  2475  0000DA  D7FE               	bra	i2u87_47
  2476  0000DC  2E0E               	decfsz	??_first_int^0,f,c
  2477  0000DE  D7FC               	bra	i2u87_47
  2478  0000E0  D000               	nop2	
  2479  0000E2                     
  2480                           ;main.c: 204:         menu_principal();
  2481  0000E2  EC66  F007         	call	i2_menu_principal	;wreg free
  2482  0000E6                     
  2483                           ;main.c: 205:         seleccion_up(2);
  2484  0000E6  0E00               	movlw	0
  2485  0000E8  6E0D               	movwf	(i2seleccion_up@a+1)^0,c
  2486  0000EA  0E02               	movlw	2
  2487  0000EC  6E0C               	movwf	i2seleccion_up@a^0,c
  2488  0000EE  EC9E  F009         	call	i2_seleccion_up	;wreg free
  2489  0000F2                     
  2490                           ;main.c: 207:         INTCON3bits.INT1IF=0;
  2491  0000F2  90F0               	bcf	240,0,c	;volatile
  2492  0000F4                     
  2493                           ;main.c: 208:         INTCON3bits.INT1IE=0;
  2494  0000F4  96F0               	bcf	240,3,c	;volatile
  2495  0000F6                     
  2496                           ;main.c: 209:         INTCONbits.INT0IE=1;
  2497  0000F6  88F2               	bsf	242,4,c	;volatile
  2498  0000F8                     
  2499                           ;main.c: 211:         a=2;
  2500  0000F8  0E00               	movlw	0
  2501  0000FA  6E2B               	movwf	(_a+1)^0,c
  2502  0000FC  0E02               	movlw	2
  2503  0000FE  6E2A               	movwf	_a^0,c
  2504  000100                     i2l174:
  2505  000100  C012  FFF5         	movff	??_first_int+4,tablat
  2506  000104  C011  FFF8         	movff	??_first_int+3,tblptru
  2507  000108  C010  FFF7         	movff	??_first_int+2,tblptrh
  2508  00010C  C00F  FFF6         	movff	??_first_int+1,tblptrl
  2509  000110  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2510  000112  0011               	retfie		f
  2511  000114                     __end_of_first_int:
  2512                           	opt callstack 0
  2513                           
  2514 ;; *************** function i2_seleccion_up *****************
  2515 ;; Defined at:
  2516 ;;		line 168 in file "main.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  a               2   11[COMRAM] int 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2530 ;;      Params:         2       0       0       0       0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2533 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2534 ;;Total ram usage:        2 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    4
  2537 ;; This function calls:
  2538 ;;		i2_print
  2539 ;;		i2_setCursor
  2540 ;;		i2_writecaracter
  2541 ;; This function is called by:
  2542 ;;		_first_int
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text16
  2547  00133C                     __ptext16:
  2548                           	opt callstack 0
  2549  00133C                     i2_seleccion_up:
  2550                           	opt callstack 20
  2551  00133C                     
  2552                           ;main.c: 169:     setCursor(1,a+1);
  2553  00133C  280C               	incf	i2seleccion_up@a^0,w,c
  2554  00133E  6E03               	movwf	i2setCursor@y^0,c
  2555  001340  0E01               	movlw	1
  2556  001342  EC86  F006         	call	i2_setCursor
  2557  001346                     
  2558                           ;main.c: 170:     print(" ");
  2559  001346  0E69               	movlw	low STR_18
  2560  001348  6E06               	movwf	i2print@a^0,c
  2561  00134A  0E08               	movlw	high STR_18
  2562  00134C  6E07               	movwf	(i2print@a+1)^0,c
  2563  00134E  EC0F  F009         	call	i2_print	;wreg free
  2564  001352                     
  2565                           ;main.c: 171:     setCursor(1,a);
  2566  001352  C00C  F003         	movff	i2seleccion_up@a,i2setCursor@y
  2567  001356  0E01               	movlw	1
  2568  001358  EC86  F006         	call	i2_setCursor
  2569  00135C                     
  2570                           ;main.c: 172:     writecaracter(1);
  2571  00135C  0E01               	movlw	1
  2572  00135E  ECF2  F009         	call	i2_writecaracter
  2573  001362  0012               	return		;funcret
  2574  001364                     __end_ofi2_seleccion_up:
  2575                           	opt callstack 0
  2576                           
  2577 ;; *************** function i2_menu_principal *****************
  2578 ;; Defined at:
  2579 ;;		line 104 in file "main.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2593 ;;      Params:         0       0       0       0       0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2595 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2596 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2597 ;;Total ram usage:        1 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    4
  2600 ;; This function calls:
  2601 ;;		i2_print
  2602 ;;		i2_setCursor
  2603 ;;		i2_writecaracter
  2604 ;; This function is called by:
  2605 ;;		_first_int
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text17
  2610  000ECC                     __ptext17:
  2611                           	opt callstack 0
  2612  000ECC                     i2_menu_principal:
  2613                           	opt callstack 20
  2614  000ECC                     
  2615                           ;main.c: 105:     setCursor(2,1);
  2616  000ECC  0E01               	movlw	1
  2617  000ECE  6E03               	movwf	i2setCursor@y^0,c
  2618  000ED0  0E02               	movlw	2
  2619  000ED2  EC86  F006         	call	i2_setCursor
  2620  000ED6                     
  2621                           ;main.c: 106:     print("MENU");
  2622  000ED6  0E64               	movlw	low STR_1
  2623  000ED8  6E06               	movwf	i2print@a^0,c
  2624  000EDA  0E08               	movlw	high STR_1
  2625  000EDC  6E07               	movwf	(i2print@a+1)^0,c
  2626  000EDE  EC0F  F009         	call	i2_print	;wreg free
  2627  000EE2                     
  2628                           ;main.c: 107:     setCursor(15,1);
  2629  000EE2  0E01               	movlw	1
  2630  000EE4  6E03               	movwf	i2setCursor@y^0,c
  2631  000EE6  0E0F               	movlw	15
  2632  000EE8  EC86  F006         	call	i2_setCursor
  2633  000EEC                     
  2634                           ;main.c: 108:     writecaracter(2);
  2635  000EEC  0E02               	movlw	2
  2636  000EEE  ECF2  F009         	call	i2_writecaracter
  2637  000EF2                     
  2638                           ;main.c: 109:     print("%100");
  2639  000EF2  0E5F               	movlw	low STR_2
  2640  000EF4  6E06               	movwf	i2print@a^0,c
  2641  000EF6  0E08               	movlw	high STR_2
  2642  000EF8  6E07               	movwf	(i2print@a+1)^0,c
  2643  000EFA  EC0F  F009         	call	i2_print	;wreg free
  2644  000EFE                     
  2645                           ;main.c: 110:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2646  000EFE  0E41               	movlw	65
  2647  000F00  6E0C               	movwf	??i2_menu_principal^0,c
  2648  000F02  0EEE               	movlw	238
  2649  000F04                     i2u88_47:
  2650  000F04  2EE8               	decfsz	wreg,f,c
  2651  000F06  D7FE               	bra	i2u88_47
  2652  000F08  2E0C               	decfsz	??i2_menu_principal^0,f,c
  2653  000F0A  D7FC               	bra	i2u88_47
  2654  000F0C  D000               	nop2	
  2655  000F0E                     
  2656                           ;main.c: 111:     setCursor(2,2);
  2657  000F0E  0E02               	movlw	2
  2658  000F10  6E03               	movwf	i2setCursor@y^0,c
  2659  000F12  0E02               	movlw	2
  2660  000F14  EC86  F006         	call	i2_setCursor
  2661  000F18                     
  2662                           ;main.c: 112:     print("GLUCOSA");
  2663  000F18  0E51               	movlw	low STR_3
  2664  000F1A  6E06               	movwf	i2print@a^0,c
  2665  000F1C  0E08               	movlw	high STR_3
  2666  000F1E  6E07               	movwf	(i2print@a+1)^0,c
  2667  000F20  EC0F  F009         	call	i2_print	;wreg free
  2668  000F24                     
  2669                           ;main.c: 113:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2670  000F24  0E41               	movlw	65
  2671  000F26  6E0C               	movwf	??i2_menu_principal^0,c
  2672  000F28  0EEE               	movlw	238
  2673  000F2A                     i2u89_47:
  2674  000F2A  2EE8               	decfsz	wreg,f,c
  2675  000F2C  D7FE               	bra	i2u89_47
  2676  000F2E  2E0C               	decfsz	??i2_menu_principal^0,f,c
  2677  000F30  D7FC               	bra	i2u89_47
  2678  000F32  D000               	nop2	
  2679  000F34                     
  2680                           ;main.c: 114:     setCursor(2,3);
  2681  000F34  0E03               	movlw	3
  2682  000F36  6E03               	movwf	i2setCursor@y^0,c
  2683  000F38  0E02               	movlw	2
  2684  000F3A  EC86  F006         	call	i2_setCursor
  2685  000F3E                     
  2686                           ;main.c: 115:     print("DOSIS");
  2687  000F3E  0E59               	movlw	low STR_4
  2688  000F40  6E06               	movwf	i2print@a^0,c
  2689  000F42  0E08               	movlw	high STR_4
  2690  000F44  6E07               	movwf	(i2print@a+1)^0,c
  2691  000F46  EC0F  F009         	call	i2_print	;wreg free
  2692  000F4A                     
  2693                           ;main.c: 116:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2694  000F4A  0E41               	movlw	65
  2695  000F4C  6E0C               	movwf	??i2_menu_principal^0,c
  2696  000F4E  0EEE               	movlw	238
  2697  000F50                     i2u90_47:
  2698  000F50  2EE8               	decfsz	wreg,f,c
  2699  000F52  D7FE               	bra	i2u90_47
  2700  000F54  2E0C               	decfsz	??i2_menu_principal^0,f,c
  2701  000F56  D7FC               	bra	i2u90_47
  2702  000F58  D000               	nop2	
  2703  000F5A                     
  2704                           ;main.c: 117:     setCursor(2,4);
  2705  000F5A  0E04               	movlw	4
  2706  000F5C  6E03               	movwf	i2setCursor@y^0,c
  2707  000F5E  0E02               	movlw	2
  2708  000F60  EC86  F006         	call	i2_setCursor
  2709  000F64                     
  2710                           ;main.c: 118:     print("HISTORIAL");
  2711  000F64  0E22               	movlw	low STR_5
  2712  000F66  6E06               	movwf	i2print@a^0,c
  2713  000F68  0E08               	movlw	high STR_5
  2714  000F6A  6E07               	movwf	(i2print@a+1)^0,c
  2715  000F6C  EC0F  F009         	call	i2_print	;wreg free
  2716  000F70  0012               	return		;funcret
  2717  000F72                     __end_ofi2_menu_principal:
  2718                           	opt callstack 0
  2719                           
  2720 ;; *************** function i2_writecaracter *****************
  2721 ;; Defined at:
  2722 ;;		line 190 in file "LCD.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  a               1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  a               1    2[COMRAM] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2736 ;;      Params:         0       0       0       0       0       0       0       0       0
  2737 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2739 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2740 ;;Total ram usage:        1 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    2
  2743 ;; This function calls:
  2744 ;;		i2_comando
  2745 ;; This function is called by:
  2746 ;;		i2_menu_principal
  2747 ;;		i2_seleccion_up
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text18
  2752  0013E4                     __ptext18:
  2753                           	opt callstack 0
  2754  0013E4                     i2_writecaracter:
  2755                           	opt callstack 21
  2756                           
  2757                           ;incstack = 0
  2758                           ;i2writecaracter@a stored from wreg
  2759  0013E4  6E03               	movwf	i2writecaracter@a^0,c
  2760  0013E6                     
  2761                           ;LCD.c: 191:     PORTEbits.RE0=1;
  2762  0013E6  8084               	bsf	132,0,c	;volatile
  2763  0013E8                     
  2764                           ;LCD.c: 192:     comando(0x00);
  2765  0013E8  0E00               	movlw	0
  2766  0013EA  ECDC  F009         	call	i2_comando
  2767  0013EE                     
  2768                           ;LCD.c: 193:     comando(a-1);
  2769  0013EE  0403               	decf	i2writecaracter@a^0,w,c
  2770  0013F0  ECDC  F009         	call	i2_comando
  2771  0013F4                     
  2772                           ;LCD.c: 194:     PORTEbits.RE0=0;
  2773  0013F4  9084               	bcf	132,0,c	;volatile
  2774  0013F6  0012               	return		;funcret
  2775  0013F8                     __end_ofi2_writecaracter:
  2776                           	opt callstack 0
  2777                           
  2778 ;; *************** function _menu_historial *****************
  2779 ;; Defined at:
  2780 ;;		line 147 in file "main.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2796 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2797 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2798 ;;Total ram usage:        1 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    4
  2801 ;; This function calls:
  2802 ;;		i2_print
  2803 ;;		i2_setCursor
  2804 ;; This function is called by:
  2805 ;;		_first_int
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text19
  2810  000F72                     __ptext19:
  2811                           	opt callstack 0
  2812  000F72                     _menu_historial:
  2813                           	opt callstack 20
  2814  000F72                     
  2815                           ;main.c: 148:     setCursor(2,1);
  2816  000F72  0E01               	movlw	1
  2817  000F74  6E03               	movwf	i2setCursor@y^0,c
  2818  000F76  0E02               	movlw	2
  2819  000F78  EC86  F006         	call	i2_setCursor
  2820  000F7C                     
  2821                           ;main.c: 149:     print("HISTORIAL");
  2822  000F7C  0E22               	movlw	low STR_5
  2823  000F7E  6E06               	movwf	i2print@a^0,c
  2824  000F80  0E08               	movlw	high STR_5
  2825  000F82  6E07               	movwf	(i2print@a+1)^0,c
  2826  000F84  EC0F  F009         	call	i2_print	;wreg free
  2827  000F88                     
  2828                           ;main.c: 150:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2829  000F88  0E41               	movlw	65
  2830  000F8A  6E0C               	movwf	??_menu_historial^0,c
  2831  000F8C  0EEE               	movlw	238
  2832  000F8E                     i2u91_47:
  2833  000F8E  2EE8               	decfsz	wreg,f,c
  2834  000F90  D7FE               	bra	i2u91_47
  2835  000F92  2E0C               	decfsz	??_menu_historial^0,f,c
  2836  000F94  D7FC               	bra	i2u91_47
  2837  000F96  D000               	nop2	
  2838  000F98                     
  2839                           ;main.c: 151:     setCursor(2,2);
  2840  000F98  0E02               	movlw	2
  2841  000F9A  6E03               	movwf	i2setCursor@y^0,c
  2842  000F9C  0E02               	movlw	2
  2843  000F9E  EC86  F006         	call	i2_setCursor
  2844  000FA2                     
  2845                           ;main.c: 152:     print("REVISION 1");
  2846  000FA2  0E01               	movlw	low STR_15
  2847  000FA4  6E06               	movwf	i2print@a^0,c
  2848  000FA6  0E08               	movlw	high STR_15
  2849  000FA8  6E07               	movwf	(i2print@a+1)^0,c
  2850  000FAA  EC0F  F009         	call	i2_print	;wreg free
  2851                           
  2852                           ;main.c: 153:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2853  000FAE  0E41               	movlw	65
  2854  000FB0  6E0C               	movwf	??_menu_historial^0,c
  2855  000FB2  0EEE               	movlw	238
  2856  000FB4                     i2u92_47:
  2857  000FB4  2EE8               	decfsz	wreg,f,c
  2858  000FB6  D7FE               	bra	i2u92_47
  2859  000FB8  2E0C               	decfsz	??_menu_historial^0,f,c
  2860  000FBA  D7FC               	bra	i2u92_47
  2861  000FBC  D000               	nop2	
  2862  000FBE                     
  2863                           ;main.c: 154:     setCursor(2,3);
  2864  000FBE  0E03               	movlw	3
  2865  000FC0  6E03               	movwf	i2setCursor@y^0,c
  2866  000FC2  0E02               	movlw	2
  2867  000FC4  EC86  F006         	call	i2_setCursor
  2868  000FC8                     
  2869                           ;main.c: 155:     print("REVISION 2");
  2870  000FC8  0E0C               	movlw	low STR_16
  2871  000FCA  6E06               	movwf	i2print@a^0,c
  2872  000FCC  0E08               	movlw	high STR_16
  2873  000FCE  6E07               	movwf	(i2print@a+1)^0,c
  2874  000FD0  EC0F  F009         	call	i2_print	;wreg free
  2875  000FD4                     
  2876                           ;main.c: 156:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2877  000FD4  0E41               	movlw	65
  2878  000FD6  6E0C               	movwf	??_menu_historial^0,c
  2879  000FD8  0EEE               	movlw	238
  2880  000FDA                     i2u93_47:
  2881  000FDA  2EE8               	decfsz	wreg,f,c
  2882  000FDC  D7FE               	bra	i2u93_47
  2883  000FDE  2E0C               	decfsz	??_menu_historial^0,f,c
  2884  000FE0  D7FC               	bra	i2u93_47
  2885  000FE2  D000               	nop2	
  2886  000FE4                     
  2887                           ;main.c: 157:     setCursor(2,4);
  2888  000FE4  0E04               	movlw	4
  2889  000FE6  6E03               	movwf	i2setCursor@y^0,c
  2890  000FE8  0E02               	movlw	2
  2891  000FEA  EC86  F006         	call	i2_setCursor
  2892                           
  2893                           ;main.c: 158:     print("REVISION 3");
  2894  000FEE  0E17               	movlw	low STR_17
  2895  000FF0  6E06               	movwf	i2print@a^0,c
  2896  000FF2  0E08               	movlw	high STR_17
  2897  000FF4  6E07               	movwf	(i2print@a+1)^0,c
  2898  000FF6  EC0F  F009         	call	i2_print	;wreg free
  2899  000FFA  0012               	return		;funcret
  2900  000FFC                     __end_of_menu_historial:
  2901                           	opt callstack 0
  2902                           
  2903 ;; *************** function _menu_glucosa *****************
  2904 ;; Defined at:
  2905 ;;		line 134 in file "main.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2921 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2922 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2923 ;;Total ram usage:        1 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    4
  2926 ;; This function calls:
  2927 ;;		i2_print
  2928 ;;		i2_setCursor
  2929 ;; This function is called by:
  2930 ;;		_first_int
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text20
  2935  000FFC                     __ptext20:
  2936                           	opt callstack 0
  2937  000FFC                     _menu_glucosa:
  2938                           	opt callstack 20
  2939  000FFC                     
  2940                           ;main.c: 135:     setCursor(2,1);
  2941  000FFC  0E01               	movlw	1
  2942  000FFE  6E03               	movwf	i2setCursor@y^0,c
  2943  001000  0E02               	movlw	2
  2944  001002  EC86  F006         	call	i2_setCursor
  2945  001006                     
  2946                           ;main.c: 136:     print("GLUCOSA");
  2947  001006  0E51               	movlw	low STR_3
  2948  001008  6E06               	movwf	i2print@a^0,c
  2949  00100A  0E08               	movlw	high STR_3
  2950  00100C  6E07               	movwf	(i2print@a+1)^0,c
  2951  00100E  EC0F  F009         	call	i2_print	;wreg free
  2952  001012                     
  2953                           ;main.c: 137:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2954  001012  0E41               	movlw	65
  2955  001014  6E0C               	movwf	??_menu_glucosa^0,c
  2956  001016  0EEE               	movlw	238
  2957  001018                     i2u94_47:
  2958  001018  2EE8               	decfsz	wreg,f,c
  2959  00101A  D7FE               	bra	i2u94_47
  2960  00101C  2E0C               	decfsz	??_menu_glucosa^0,f,c
  2961  00101E  D7FC               	bra	i2u94_47
  2962  001020  D000               	nop2	
  2963  001022                     
  2964                           ;main.c: 138:     setCursor(2,2);
  2965  001022  0E02               	movlw	2
  2966  001024  6E03               	movwf	i2setCursor@y^0,c
  2967  001026  0E02               	movlw	2
  2968  001028  EC86  F006         	call	i2_setCursor
  2969  00102C                     
  2970                           ;main.c: 139:     print("PROBLEMAS");
  2971  00102C  0E36               	movlw	low STR_11
  2972  00102E  6E06               	movwf	i2print@a^0,c
  2973  001030  0E08               	movlw	high STR_11
  2974  001032  6E07               	movwf	(i2print@a+1)^0,c
  2975  001034  EC0F  F009         	call	i2_print	;wreg free
  2976                           
  2977                           ;main.c: 140:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  2978  001038  0E41               	movlw	65
  2979  00103A  6E0C               	movwf	??_menu_glucosa^0,c
  2980  00103C  0EEE               	movlw	238
  2981  00103E                     i2u95_47:
  2982  00103E  2EE8               	decfsz	wreg,f,c
  2983  001040  D7FE               	bra	i2u95_47
  2984  001042  2E0C               	decfsz	??_menu_glucosa^0,f,c
  2985  001044  D7FC               	bra	i2u95_47
  2986  001046  D000               	nop2	
  2987  001048                     
  2988                           ;main.c: 141:     setCursor(2,3);
  2989  001048  0E03               	movlw	3
  2990  00104A  6E03               	movwf	i2setCursor@y^0,c
  2991  00104C  0E02               	movlw	2
  2992  00104E  EC86  F006         	call	i2_setCursor
  2993  001052                     
  2994                           ;main.c: 142:     print("CANTIDAD");
  2995  001052  0E40               	movlw	low STR_8
  2996  001054  6E06               	movwf	i2print@a^0,c
  2997  001056  0E08               	movlw	high STR_8
  2998  001058  6E07               	movwf	(i2print@a+1)^0,c
  2999  00105A  EC0F  F009         	call	i2_print	;wreg free
  3000  00105E                     
  3001                           ;main.c: 143:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  3002  00105E  0E41               	movlw	65
  3003  001060  6E0C               	movwf	??_menu_glucosa^0,c
  3004  001062  0EEE               	movlw	238
  3005  001064                     i2u96_47:
  3006  001064  2EE8               	decfsz	wreg,f,c
  3007  001066  D7FE               	bra	i2u96_47
  3008  001068  2E0C               	decfsz	??_menu_glucosa^0,f,c
  3009  00106A  D7FC               	bra	i2u96_47
  3010  00106C  D000               	nop2	
  3011  00106E                     
  3012                           ;main.c: 144:     setCursor(2,4);
  3013  00106E  0E04               	movlw	4
  3014  001070  6E03               	movwf	i2setCursor@y^0,c
  3015  001072  0E02               	movlw	2
  3016  001074  EC86  F006         	call	i2_setCursor
  3017                           
  3018                           ;main.c: 145:     print("CONFIRMAR");
  3019  001078  0E2C               	movlw	low STR_9
  3020  00107A  6E06               	movwf	i2print@a^0,c
  3021  00107C  0E08               	movlw	high STR_9
  3022  00107E  6E07               	movwf	(i2print@a+1)^0,c
  3023  001080  EC0F  F009         	call	i2_print	;wreg free
  3024  001084  0012               	return		;funcret
  3025  001086                     __end_of_menu_glucosa:
  3026                           	opt callstack 0
  3027                           
  3028 ;; *************** function _menu_dosis *****************
  3029 ;; Defined at:
  3030 ;;		line 121 in file "main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3046 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3047 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        1 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    4
  3051 ;; This function calls:
  3052 ;;		i2_print
  3053 ;;		i2_setCursor
  3054 ;; This function is called by:
  3055 ;;		_first_int
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text21
  3060  001086                     __ptext21:
  3061                           	opt callstack 0
  3062  001086                     _menu_dosis:
  3063                           	opt callstack 20
  3064  001086                     
  3065                           ;main.c: 122:     setCursor(2,1);
  3066  001086  0E01               	movlw	1
  3067  001088  6E03               	movwf	i2setCursor@y^0,c
  3068  00108A  0E02               	movlw	2
  3069  00108C  EC86  F006         	call	i2_setCursor
  3070  001090                     
  3071                           ;main.c: 123:     print("DOSIS");
  3072  001090  0E59               	movlw	low STR_4
  3073  001092  6E06               	movwf	i2print@a^0,c
  3074  001094  0E08               	movlw	high STR_4
  3075  001096  6E07               	movwf	(i2print@a+1)^0,c
  3076  001098  EC0F  F009         	call	i2_print	;wreg free
  3077  00109C                     
  3078                           ;main.c: 124:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  3079  00109C  0E41               	movlw	65
  3080  00109E  6E0C               	movwf	??_menu_dosis^0,c
  3081  0010A0  0EEE               	movlw	238
  3082  0010A2                     i2u97_47:
  3083  0010A2  2EE8               	decfsz	wreg,f,c
  3084  0010A4  D7FE               	bra	i2u97_47
  3085  0010A6  2E0C               	decfsz	??_menu_dosis^0,f,c
  3086  0010A8  D7FC               	bra	i2u97_47
  3087  0010AA  D000               	nop2	
  3088  0010AC                     
  3089                           ;main.c: 125:     setCursor(2,2);
  3090  0010AC  0E02               	movlw	2
  3091  0010AE  6E03               	movwf	i2setCursor@y^0,c
  3092  0010B0  0E02               	movlw	2
  3093  0010B2  EC86  F006         	call	i2_setCursor
  3094  0010B6                     
  3095                           ;main.c: 126:     print("PERSONA");
  3096  0010B6  0E49               	movlw	low STR_7
  3097  0010B8  6E06               	movwf	i2print@a^0,c
  3098  0010BA  0E08               	movlw	high STR_7
  3099  0010BC  6E07               	movwf	(i2print@a+1)^0,c
  3100  0010BE  EC0F  F009         	call	i2_print	;wreg free
  3101                           
  3102                           ;main.c: 127:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  3103  0010C2  0E41               	movlw	65
  3104  0010C4  6E0C               	movwf	??_menu_dosis^0,c
  3105  0010C6  0EEE               	movlw	238
  3106  0010C8                     i2u98_47:
  3107  0010C8  2EE8               	decfsz	wreg,f,c
  3108  0010CA  D7FE               	bra	i2u98_47
  3109  0010CC  2E0C               	decfsz	??_menu_dosis^0,f,c
  3110  0010CE  D7FC               	bra	i2u98_47
  3111  0010D0  D000               	nop2	
  3112  0010D2                     
  3113                           ;main.c: 128:     setCursor(2,3);
  3114  0010D2  0E03               	movlw	3
  3115  0010D4  6E03               	movwf	i2setCursor@y^0,c
  3116  0010D6  0E02               	movlw	2
  3117  0010D8  EC86  F006         	call	i2_setCursor
  3118  0010DC                     
  3119                           ;main.c: 129:     print("CANTIDAD");
  3120  0010DC  0E40               	movlw	low STR_8
  3121  0010DE  6E06               	movwf	i2print@a^0,c
  3122  0010E0  0E08               	movlw	high STR_8
  3123  0010E2  6E07               	movwf	(i2print@a+1)^0,c
  3124  0010E4  EC0F  F009         	call	i2_print	;wreg free
  3125  0010E8                     
  3126                           ;main.c: 130:     _delay((unsigned long)((100)*(2000000UL/4000.0)));
  3127  0010E8  0E41               	movlw	65
  3128  0010EA  6E0C               	movwf	??_menu_dosis^0,c
  3129  0010EC  0EEE               	movlw	238
  3130  0010EE                     i2u99_47:
  3131  0010EE  2EE8               	decfsz	wreg,f,c
  3132  0010F0  D7FE               	bra	i2u99_47
  3133  0010F2  2E0C               	decfsz	??_menu_dosis^0,f,c
  3134  0010F4  D7FC               	bra	i2u99_47
  3135  0010F6  D000               	nop2	
  3136  0010F8                     
  3137                           ;main.c: 131:     setCursor(2,4);
  3138  0010F8  0E04               	movlw	4
  3139  0010FA  6E03               	movwf	i2setCursor@y^0,c
  3140  0010FC  0E02               	movlw	2
  3141  0010FE  EC86  F006         	call	i2_setCursor
  3142                           
  3143                           ;main.c: 132:     print("CONFIRMAR");
  3144  001102  0E2C               	movlw	low STR_9
  3145  001104  6E06               	movwf	i2print@a^0,c
  3146  001106  0E08               	movlw	high STR_9
  3147  001108  6E07               	movwf	(i2print@a+1)^0,c
  3148  00110A  EC0F  F009         	call	i2_print	;wreg free
  3149  00110E  0012               	return		;funcret
  3150  001110                     __end_of_menu_dosis:
  3151                           	opt callstack 0
  3152                           
  3153 ;; *************** function i2_setCursor *****************
  3154 ;; Defined at:
  3155 ;;		line 56 in file "LCD.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  x               1    wreg     unsigned char 
  3158 ;;  y               1    2[COMRAM] unsigned char 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  x               1    8[COMRAM] unsigned char 
  3161 ;;  setCursor       1    7[COMRAM] unsigned char 
  3162 ;;  setCursor       1    6[COMRAM] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         1       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3174 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3175 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        7 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    2
  3179 ;; This function calls:
  3180 ;;		i2_comando
  3181 ;; This function is called by:
  3182 ;;		_menu_dosis
  3183 ;;		_menu_glucosa
  3184 ;;		_menu_historial
  3185 ;;		i2_menu_principal
  3186 ;;		i2_seleccion_up
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text22
  3191  000D0C                     __ptext22:
  3192                           	opt callstack 0
  3193  000D0C                     i2_setCursor:
  3194                           	opt callstack 21
  3195                           
  3196                           ;incstack = 0
  3197                           ;i2setCursor@x stored from wreg
  3198  000D0C  6E09               	movwf	i2setCursor@x^0,c
  3199  000D0E                     
  3200                           ;LCD.c: 57:     char m;;LCD.c: 58:     char n;;LCD.c: 59:     if(y==1){
  3201  000D0E  0403               	decf	i2setCursor@y^0,w,c
  3202  000D10  A4D8               	btfss	status,2,c
  3203  000D12  EF8D  F006         	goto	i2u55_41
  3204  000D16  EF8F  F006         	goto	i2u55_40
  3205  000D1A                     i2u55_41:
  3206  000D1A  EFA9  F006         	goto	i2l26
  3207  000D1E                     i2u55_40:
  3208  000D1E                     
  3209                           ;LCD.c: 60:         m=0x80 + x;
  3210  000D1E  5009               	movf	i2setCursor@x^0,w,c
  3211  000D20  0F80               	addlw	128
  3212  000D22  6E07               	movwf	i2setCursor@m^0,c
  3213                           
  3214                           ;LCD.c: 61:         n=(0x80 + x) >> 4;
  3215  000D24  5009               	movf	i2setCursor@x^0,w,c
  3216  000D26  6E04               	movwf	??i2_setCursor^0,c
  3217  000D28  6A05               	clrf	(??i2_setCursor+1)^0,c
  3218  000D2A  0E80               	movlw	128
  3219  000D2C  2604               	addwf	??i2_setCursor^0,f,c
  3220  000D2E  0E00               	movlw	0
  3221  000D30  2205               	addwfc	(??i2_setCursor+1)^0,f,c
  3222  000D32  0E04               	movlw	4
  3223  000D34  6E06               	movwf	(??i2_setCursor+2)^0,c
  3224  000D36                     i2u56_45:
  3225  000D36  3405               	rlcf	(??i2_setCursor+1)^0,w,c
  3226  000D38  3205               	rrcf	(??i2_setCursor+1)^0,f,c
  3227  000D3A  3204               	rrcf	??i2_setCursor^0,f,c
  3228  000D3C  2E06               	decfsz	(??i2_setCursor+2)^0,f,c
  3229  000D3E  EF9B  F006         	goto	i2u56_45
  3230  000D42  5004               	movf	??i2_setCursor^0,w,c
  3231  000D44  6E08               	movwf	i2setCursor@n^0,c
  3232  000D46                     
  3233                           ;LCD.c: 62:         comando(n);
  3234  000D46  5008               	movf	i2setCursor@n^0,w,c
  3235  000D48  ECDC  F009         	call	i2_comando
  3236  000D4C                     
  3237                           ;LCD.c: 63:         comando(m);
  3238  000D4C  5007               	movf	i2setCursor@m^0,w,c
  3239  000D4E  ECDC  F009         	call	i2_comando
  3240  000D52                     i2l26:
  3241                           
  3242                           ;LCD.c: 65:     if(y==2){
  3243  000D52  0E02               	movlw	2
  3244  000D54  1803               	xorwf	i2setCursor@y^0,w,c
  3245  000D56  A4D8               	btfss	status,2,c
  3246  000D58  EFB0  F006         	goto	i2u57_41
  3247  000D5C  EFB2  F006         	goto	i2u57_40
  3248  000D60                     i2u57_41:
  3249  000D60  EFCC  F006         	goto	i2l27
  3250  000D64                     i2u57_40:
  3251  000D64                     
  3252                           ;LCD.c: 66:         m=0xC0 + x;
  3253  000D64  5009               	movf	i2setCursor@x^0,w,c
  3254  000D66  0FC0               	addlw	192
  3255  000D68  6E07               	movwf	i2setCursor@m^0,c
  3256                           
  3257                           ;LCD.c: 67:         n=(0xC0 + x) >> 4;
  3258  000D6A  5009               	movf	i2setCursor@x^0,w,c
  3259  000D6C  6E04               	movwf	??i2_setCursor^0,c
  3260  000D6E  6A05               	clrf	(??i2_setCursor+1)^0,c
  3261  000D70  0EC0               	movlw	192
  3262  000D72  2604               	addwf	??i2_setCursor^0,f,c
  3263  000D74  0E00               	movlw	0
  3264  000D76  2205               	addwfc	(??i2_setCursor+1)^0,f,c
  3265  000D78  0E04               	movlw	4
  3266  000D7A  6E06               	movwf	(??i2_setCursor+2)^0,c
  3267  000D7C                     i2u58_45:
  3268  000D7C  3405               	rlcf	(??i2_setCursor+1)^0,w,c
  3269  000D7E  3205               	rrcf	(??i2_setCursor+1)^0,f,c
  3270  000D80  3204               	rrcf	??i2_setCursor^0,f,c
  3271  000D82  2E06               	decfsz	(??i2_setCursor+2)^0,f,c
  3272  000D84  EFBE  F006         	goto	i2u58_45
  3273  000D88  5004               	movf	??i2_setCursor^0,w,c
  3274  000D8A  6E08               	movwf	i2setCursor@n^0,c
  3275  000D8C                     
  3276                           ;LCD.c: 68:         comando(n);
  3277  000D8C  5008               	movf	i2setCursor@n^0,w,c
  3278  000D8E  ECDC  F009         	call	i2_comando
  3279  000D92                     
  3280                           ;LCD.c: 69:         comando(m);
  3281  000D92  5007               	movf	i2setCursor@m^0,w,c
  3282  000D94  ECDC  F009         	call	i2_comando
  3283  000D98                     i2l27:
  3284                           
  3285                           ;LCD.c: 71:     if(y==3){
  3286  000D98  0E03               	movlw	3
  3287  000D9A  1803               	xorwf	i2setCursor@y^0,w,c
  3288  000D9C  A4D8               	btfss	status,2,c
  3289  000D9E  EFD3  F006         	goto	i2u59_41
  3290  000DA2  EFD5  F006         	goto	i2u59_40
  3291  000DA6                     i2u59_41:
  3292  000DA6  EFEF  F006         	goto	i2l28
  3293  000DAA                     i2u59_40:
  3294  000DAA                     
  3295                           ;LCD.c: 72:         m=0x80 +20+ x;
  3296  000DAA  5009               	movf	i2setCursor@x^0,w,c
  3297  000DAC  0F94               	addlw	148
  3298  000DAE  6E07               	movwf	i2setCursor@m^0,c
  3299                           
  3300                           ;LCD.c: 73:         n=(0x80+20 + x) >> 4;
  3301  000DB0  5009               	movf	i2setCursor@x^0,w,c
  3302  000DB2  6E04               	movwf	??i2_setCursor^0,c
  3303  000DB4  6A05               	clrf	(??i2_setCursor+1)^0,c
  3304  000DB6  0E94               	movlw	148
  3305  000DB8  2604               	addwf	??i2_setCursor^0,f,c
  3306  000DBA  0E00               	movlw	0
  3307  000DBC  2205               	addwfc	(??i2_setCursor+1)^0,f,c
  3308  000DBE  0E04               	movlw	4
  3309  000DC0  6E06               	movwf	(??i2_setCursor+2)^0,c
  3310  000DC2                     i2u60_45:
  3311  000DC2  3405               	rlcf	(??i2_setCursor+1)^0,w,c
  3312  000DC4  3205               	rrcf	(??i2_setCursor+1)^0,f,c
  3313  000DC6  3204               	rrcf	??i2_setCursor^0,f,c
  3314  000DC8  2E06               	decfsz	(??i2_setCursor+2)^0,f,c
  3315  000DCA  EFE1  F006         	goto	i2u60_45
  3316  000DCE  5004               	movf	??i2_setCursor^0,w,c
  3317  000DD0  6E08               	movwf	i2setCursor@n^0,c
  3318  000DD2                     
  3319                           ;LCD.c: 74:         comando(n);
  3320  000DD2  5008               	movf	i2setCursor@n^0,w,c
  3321  000DD4  ECDC  F009         	call	i2_comando
  3322  000DD8                     
  3323                           ;LCD.c: 75:         comando(m);
  3324  000DD8  5007               	movf	i2setCursor@m^0,w,c
  3325  000DDA  ECDC  F009         	call	i2_comando
  3326  000DDE                     i2l28:
  3327                           
  3328                           ;LCD.c: 77:     if(y==4){
  3329  000DDE  0E04               	movlw	4
  3330  000DE0  1803               	xorwf	i2setCursor@y^0,w,c
  3331  000DE2  A4D8               	btfss	status,2,c
  3332  000DE4  EFF6  F006         	goto	i2u61_41
  3333  000DE8  EFF8  F006         	goto	i2u61_40
  3334  000DEC                     i2u61_41:
  3335  000DEC  EF12  F007         	goto	i2l30
  3336  000DF0                     i2u61_40:
  3337  000DF0                     
  3338                           ;LCD.c: 78:         m=0xC0 +20+ x;
  3339  000DF0  5009               	movf	i2setCursor@x^0,w,c
  3340  000DF2  0FD4               	addlw	212
  3341  000DF4  6E07               	movwf	i2setCursor@m^0,c
  3342                           
  3343                           ;LCD.c: 79:         n=(0xC0 + 20+ x) >> 4;
  3344  000DF6  5009               	movf	i2setCursor@x^0,w,c
  3345  000DF8  6E04               	movwf	??i2_setCursor^0,c
  3346  000DFA  6A05               	clrf	(??i2_setCursor+1)^0,c
  3347  000DFC  0ED4               	movlw	212
  3348  000DFE  2604               	addwf	??i2_setCursor^0,f,c
  3349  000E00  0E00               	movlw	0
  3350  000E02  2205               	addwfc	(??i2_setCursor+1)^0,f,c
  3351  000E04  0E04               	movlw	4
  3352  000E06  6E06               	movwf	(??i2_setCursor+2)^0,c
  3353  000E08                     i2u62_45:
  3354  000E08  3405               	rlcf	(??i2_setCursor+1)^0,w,c
  3355  000E0A  3205               	rrcf	(??i2_setCursor+1)^0,f,c
  3356  000E0C  3204               	rrcf	??i2_setCursor^0,f,c
  3357  000E0E  2E06               	decfsz	(??i2_setCursor+2)^0,f,c
  3358  000E10  EF04  F007         	goto	i2u62_45
  3359  000E14  5004               	movf	??i2_setCursor^0,w,c
  3360  000E16  6E08               	movwf	i2setCursor@n^0,c
  3361  000E18                     
  3362                           ;LCD.c: 80:         comando(n);
  3363  000E18  5008               	movf	i2setCursor@n^0,w,c
  3364  000E1A  ECDC  F009         	call	i2_comando
  3365  000E1E                     
  3366                           ;LCD.c: 81:         comando(m);
  3367  000E1E  5007               	movf	i2setCursor@m^0,w,c
  3368  000E20  ECDC  F009         	call	i2_comando
  3369  000E24                     i2l30:
  3370  000E24  0012               	return		;funcret
  3371  000E26                     __end_ofi2_setCursor:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function i2_print *****************
  3375 ;; Defined at:
  3376 ;;		line 95 in file "LCD.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  a               2    5[COMRAM] PTR unsigned char 
  3379 ;;		 -> STR_19(2), STR_18(2), STR_17(11), STR_16(11), 
  3380 ;;		 -> STR_15(11), STR_14(10), STR_13(10), STR_12(9), 
  3381 ;;		 -> STR_11(10), STR_10(8), STR_9(10), STR_8(9), 
  3382 ;;		 -> STR_7(8), STR_6(6), STR_5(10), STR_4(6), 
  3383 ;;		 -> STR_3(8), STR_2(5), STR_1(5), 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  print           2    9[COMRAM] int 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3395 ;;      Params:         2       0       0       0       0       0       0       0       0
  3396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3397 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3398 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3399 ;;Total ram usage:        6 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    3
  3402 ;; This function calls:
  3403 ;;		i2_caracter
  3404 ;; This function is called by:
  3405 ;;		_menu_dosis
  3406 ;;		_menu_glucosa
  3407 ;;		_menu_historial
  3408 ;;		i2_menu_principal
  3409 ;;		i2_seleccion_up
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text23
  3414  00121E                     __ptext23:
  3415                           	opt callstack 0
  3416  00121E                     i2_print:
  3417                           	opt callstack 20
  3418  00121E                     
  3419                           ;LCD.c: 96:     for (int k=0;a[k]!='\0';k++){
  3420  00121E  0E00               	movlw	0
  3421  001220  6E0B               	movwf	(i2print@k+1)^0,c
  3422  001222  0E00               	movlw	0
  3423  001224  6E0A               	movwf	i2print@k^0,c
  3424  001226  EF25  F009         	goto	i2l1486
  3425  00122A                     i2l1482:
  3426                           
  3427                           ;LCD.c: 97:         caracter(a[k]);
  3428  00122A  500A               	movf	i2print@k^0,w,c
  3429  00122C  2406               	addwf	i2print@a^0,w,c
  3430  00122E  6E08               	movwf	??i2_print^0,c
  3431  001230  500B               	movf	(i2print@k+1)^0,w,c
  3432  001232  2007               	addwfc	(i2print@a+1)^0,w,c
  3433  001234  6E09               	movwf	(??i2_print+1)^0,c
  3434  001236  C008  FFF6         	movff	??i2_print,tblptrl
  3435  00123A  C009  FFF7         	movff	??i2_print+1,tblptrh
  3436  00123E                     	if	0	;tblptru may be non-zero
  3437  00123E                     	endif
  3438  00123E                     	if	0	;tblptru may be non-zero
  3439  00123E                     	endif
  3440  00123E  0008               	tblrd		*
  3441  001240  50F5               	movf	tablat,w,c
  3442  001242  ECC1  F009         	call	i2_caracter
  3443  001246                     
  3444                           ;LCD.c: 98:     }
  3445  001246  4A0A               	infsnz	i2print@k^0,f,c
  3446  001248  2A0B               	incf	(i2print@k+1)^0,f,c
  3447  00124A                     i2l1486:
  3448  00124A  500A               	movf	i2print@k^0,w,c
  3449  00124C  2406               	addwf	i2print@a^0,w,c
  3450  00124E  6E08               	movwf	??i2_print^0,c
  3451  001250  500B               	movf	(i2print@k+1)^0,w,c
  3452  001252  2007               	addwfc	(i2print@a+1)^0,w,c
  3453  001254  6E09               	movwf	(??i2_print+1)^0,c
  3454  001256  C008  FFF6         	movff	??i2_print,tblptrl
  3455  00125A  C009  FFF7         	movff	??i2_print+1,tblptrh
  3456  00125E                     	if	0	;tblptru may be non-zero
  3457  00125E                     	endif
  3458  00125E                     	if	0	;tblptru may be non-zero
  3459  00125E                     	endif
  3460  00125E  0008               	tblrd		*
  3461  001260  50F5               	movf	tablat,w,c
  3462  001262  0900               	iorlw	0
  3463  001264  A4D8               	btfss	status,2,c
  3464  001266  EF37  F009         	goto	i2u63_41
  3465  00126A  EF39  F009         	goto	i2u63_40
  3466  00126E                     i2u63_41:
  3467  00126E  EF15  F009         	goto	i2l1482
  3468  001272                     i2u63_40:
  3469  001272  0012               	return		;funcret
  3470  001274                     __end_ofi2_print:
  3471                           	opt callstack 0
  3472                           
  3473 ;; *************** function i2_caracter *****************
  3474 ;; Defined at:
  3475 ;;		line 85 in file "LCD.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  a               1    wreg     unsigned char 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  a               1    4[COMRAM] unsigned char 
  3480 ;;  caracter        1    3[COMRAM] unsigned char 
  3481 ;;  caracter        1    2[COMRAM] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0
  3492 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3494 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3495 ;;Total ram usage:        3 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    2
  3498 ;; This function calls:
  3499 ;;		i2_comando
  3500 ;; This function is called by:
  3501 ;;		i2_print
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text24
  3506  001382                     __ptext24:
  3507                           	opt callstack 0
  3508  001382                     i2_caracter:
  3509                           	opt callstack 20
  3510                           
  3511                           ;incstack = 0
  3512                           ;i2caracter@a stored from wreg
  3513  001382  6E05               	movwf	i2caracter@a^0,c
  3514  001384                     
  3515                           ;LCD.c: 86:     char m,n;;LCD.c: 87:     m=a>>4;
  3516  001384  3805               	swapf	i2caracter@a^0,w,c
  3517  001386  0B0F               	andlw	15
  3518  001388  6E03               	movwf	i2caracter@m^0,c
  3519  00138A                     
  3520                           ;LCD.c: 88:     n=a;
  3521  00138A  C005  F004         	movff	i2caracter@a,i2caracter@n
  3522  00138E                     
  3523                           ;LCD.c: 89:     PORTEbits.RE0=1;
  3524  00138E  8084               	bsf	132,0,c	;volatile
  3525  001390                     
  3526                           ;LCD.c: 90:     comando(m);
  3527  001390  5003               	movf	i2caracter@m^0,w,c
  3528  001392  ECDC  F009         	call	i2_comando
  3529  001396                     
  3530                           ;LCD.c: 91:     comando(n);
  3531  001396  5004               	movf	i2caracter@n^0,w,c
  3532  001398  ECDC  F009         	call	i2_comando
  3533  00139C                     
  3534                           ;LCD.c: 92:     PORTEbits.RE0=0;
  3535  00139C  9084               	bcf	132,0,c	;volatile
  3536  00139E  0012               	return		;funcret
  3537  0013A0                     __end_ofi2_caracter:
  3538                           	opt callstack 0
  3539                           
  3540 ;; *************** function _clear *****************
  3541 ;; Defined at:
  3542 ;;		line 197 in file "LCD.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3556 ;;      Params:         0       0       0       0       0       0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3559 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    2
  3563 ;; This function calls:
  3564 ;;		i2_comando
  3565 ;; This function is called by:
  3566 ;;		_first_int
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text25
  3571  001418                     __ptext25:
  3572                           	opt callstack 0
  3573  001418                     _clear:
  3574                           	opt callstack 22
  3575  001418                     
  3576                           ;LCD.c: 198:     comando(0x00);
  3577  001418  0E00               	movlw	0
  3578  00141A  ECDC  F009         	call	i2_comando
  3579                           
  3580                           ;LCD.c: 199:     comando(0x01);
  3581  00141E  0E01               	movlw	1
  3582  001420  ECDC  F009         	call	i2_comando
  3583  001424  0012               	return		;funcret
  3584  001426                     __end_of_clear:
  3585                           	opt callstack 0
  3586                           
  3587 ;; *************** function i2_comando *****************
  3588 ;; Defined at:
  3589 ;;		line 32 in file "LCD.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  a               1    wreg     unsigned char 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  a               1    1[COMRAM] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0
  3604 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3606 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3607 ;;Total ram usage:        1 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    1
  3610 ;; This function calls:
  3611 ;;		i2_busdata
  3612 ;; This function is called by:
  3613 ;;		_clear
  3614 ;;		i2_setCursor
  3615 ;;		i2_caracter
  3616 ;;		i2_writecaracter
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text26
  3621  0013B8                     __ptext26:
  3622                           	opt callstack 0
  3623  0013B8                     i2_comando:
  3624                           	opt callstack 21
  3625                           
  3626                           ;incstack = 0
  3627                           ;i2comando@a stored from wreg
  3628  0013B8  6E02               	movwf	i2comando@a^0,c
  3629  0013BA                     
  3630                           ;LCD.c: 33:     PORTEbits.RE2=0;
  3631  0013BA  9484               	bcf	132,2,c	;volatile
  3632                           
  3633                           ;LCD.c: 34:     PORTEbits.RE2=1;
  3634  0013BC  8484               	bsf	132,2,c	;volatile
  3635  0013BE                     
  3636                           ;LCD.c: 36:     busdata(a);
  3637  0013BE  5002               	movf	i2comando@a^0,w,c
  3638  0013C0  ECB6  F008         	call	i2_busdata
  3639  0013C4                     
  3640                           ;LCD.c: 37:     _delay((unsigned long)((1)*(2000000UL/4000.0)));
  3641  0013C4  0EA6               	movlw	166
  3642  0013C6                     i2u100_47:
  3643  0013C6  2EE8               	decfsz	wreg,f,c
  3644  0013C8  D7FE               	bra	i2u100_47
  3645  0013CA  D000               	nop2	
  3646  0013CC                     
  3647                           ;LCD.c: 38:     PORTEbits.RE2=0;
  3648  0013CC  9484               	bcf	132,2,c	;volatile
  3649  0013CE  0012               	return		;funcret
  3650  0013D0                     __end_ofi2_comando:
  3651                           	opt callstack 0
  3652                           
  3653 ;; *************** function i2_busdata *****************
  3654 ;; Defined at:
  3655 ;;		line 4 in file "LCD.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  a               1    wreg     unsigned char 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  a               1    0[COMRAM] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0
  3670 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3672 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3673 ;;Total ram usage:        1 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		i2_comando
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text27
  3683  00116C                     __ptext27:
  3684                           	opt callstack 0
  3685  00116C                     i2_busdata:
  3686                           	opt callstack 21
  3687                           
  3688                           ;incstack = 0
  3689                           ;i2busdata@a stored from wreg
  3690  00116C  6E01               	movwf	i2busdata@a^0,c
  3691  00116E                     
  3692                           ;LCD.c: 5:     if (a & 0x01){
  3693  00116E  A001               	btfss	i2busdata@a^0,0,c
  3694  001170  EFBC  F008         	goto	i2u42_41
  3695  001174  EFBE  F008         	goto	i2u42_40
  3696  001178                     i2u42_41:
  3697  001178  EFC1  F008         	goto	i2l9
  3698  00117C                     i2u42_40:
  3699  00117C                     
  3700                           ;LCD.c: 6:         PORTDbits.RD4=1;
  3701  00117C  8883               	bsf	131,4,c	;volatile
  3702                           
  3703                           ;LCD.c: 7:     }
  3704  00117E  EFC2  F008         	goto	i2l1388
  3705  001182                     i2l9:
  3706                           
  3707                           ;LCD.c: 9:         PORTDbits.RD4=0;
  3708  001182  9883               	bcf	131,4,c	;volatile
  3709  001184                     i2l1388:
  3710                           
  3711                           ;LCD.c: 11:     if (a & 0x02){
  3712  001184  A201               	btfss	i2busdata@a^0,1,c
  3713  001186  EFC7  F008         	goto	i2u43_41
  3714  00118A  EFC9  F008         	goto	i2u43_40
  3715  00118E                     i2u43_41:
  3716  00118E  EFCC  F008         	goto	i2l11
  3717  001192                     i2u43_40:
  3718  001192                     
  3719                           ;LCD.c: 12:         PORTDbits.RD5=1;
  3720  001192  8A83               	bsf	131,5,c	;volatile
  3721                           
  3722                           ;LCD.c: 13:     }
  3723  001194  EFCD  F008         	goto	i2l1392
  3724  001198                     i2l11:
  3725                           
  3726                           ;LCD.c: 15:         PORTDbits.RD5=0;
  3727  001198  9A83               	bcf	131,5,c	;volatile
  3728  00119A                     i2l1392:
  3729                           
  3730                           ;LCD.c: 17:     if (a & 0x04){
  3731  00119A  A401               	btfss	i2busdata@a^0,2,c
  3732  00119C  EFD2  F008         	goto	i2u44_41
  3733  0011A0  EFD4  F008         	goto	i2u44_40
  3734  0011A4                     i2u44_41:
  3735  0011A4  EFD7  F008         	goto	i2l13
  3736  0011A8                     i2u44_40:
  3737  0011A8                     
  3738                           ;LCD.c: 18:         PORTDbits.RD6=1;
  3739  0011A8  8C83               	bsf	131,6,c	;volatile
  3740                           
  3741                           ;LCD.c: 19:     }
  3742  0011AA  EFD8  F008         	goto	i2l1396
  3743  0011AE                     i2l13:
  3744                           
  3745                           ;LCD.c: 21:         PORTDbits.RD6=0;
  3746  0011AE  9C83               	bcf	131,6,c	;volatile
  3747  0011B0                     i2l1396:
  3748                           
  3749                           ;LCD.c: 23:     if (a & 0x08){
  3750  0011B0  A601               	btfss	i2busdata@a^0,3,c
  3751  0011B2  EFDD  F008         	goto	i2u45_41
  3752  0011B6  EFDF  F008         	goto	i2u45_40
  3753  0011BA                     i2u45_41:
  3754  0011BA  EFE2  F008         	goto	i2l15
  3755  0011BE                     i2u45_40:
  3756  0011BE                     
  3757                           ;LCD.c: 24:         PORTDbits.RD7=1;
  3758  0011BE  8E83               	bsf	131,7,c	;volatile
  3759                           
  3760                           ;LCD.c: 25:     }
  3761  0011C0  EFE3  F008         	goto	i2l17
  3762  0011C4                     i2l15:
  3763                           
  3764                           ;LCD.c: 27:         PORTDbits.RD7=0;
  3765  0011C4  9E83               	bcf	131,7,c	;volatile
  3766  0011C6                     i2l17:
  3767  0011C6  0012               	return		;funcret
  3768  0011C8                     __end_ofi2_busdata:
  3769                           	opt callstack 0
  3770                           
  3771                           	psect	rparam
  3772  0000                     
  3773                           	psect	temp
  3774  00002C                     btemp:
  3775                           	opt callstack 0
  3776  00002C                     	ds	1
  3777  0000                     int$flags	set	btemp
  3778  0000                     wtemp8	set	btemp+1
  3779  0000                     ttemp5	set	btemp+1
  3780  0000                     ttemp6	set	btemp+4
  3781  0000                     ttemp7	set	btemp+8
  3782                           tosu	equ	0xFFF
  3783                           tosh	equ	0xFFE
  3784                           tosl	equ	0xFFD
  3785                           stkptr	equ	0xFFC
  3786                           pclatu	equ	0xFFB
  3787                           pclath	equ	0xFFA
  3788                           pcl	equ	0xFF9
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           indf0	equ	0xFEF
  3796                           postinc0	equ	0xFEE
  3797                           postdec0	equ	0xFED
  3798                           preinc0	equ	0xFEC
  3799                           plusw0	equ	0xFEB
  3800                           fsr0h	equ	0xFEA
  3801                           fsr0l	equ	0xFE9
  3802                           wreg	equ	0xFE8
  3803                           indf1	equ	0xFE7
  3804                           postinc1	equ	0xFE6
  3805                           postdec1	equ	0xFE5
  3806                           preinc1	equ	0xFE4
  3807                           plusw1	equ	0xFE3
  3808                           fsr1h	equ	0xFE2
  3809                           fsr1l	equ	0xFE1
  3810                           bsr	equ	0xFE0
  3811                           indf2	equ	0xFDF
  3812                           postinc2	equ	0xFDE
  3813                           postdec2	equ	0xFDD
  3814                           preinc2	equ	0xFDC
  3815                           plusw2	equ	0xFDB
  3816                           fsr2h	equ	0xFDA
  3817                           fsr2l	equ	0xFD9
  3818                           status	equ	0xFD8


Data Sizes:
    Strings     106
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    print@a	PTR unsigned char  size(2) Largest target is 11
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[11]), STR_16(CODE[11]), 
		 -> STR_15(CODE[11]), STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_11(CODE[10]), STR_10(CODE[8]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[8]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[6]), 
		 -> STR_3(CODE[8]), STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_create
    _seleccion_up->_print
    _seleccion_down->_print
    _ocultarcursor->_comando
    _menu_principal->_print
    _writecaracter->_comando
    _setCursor->_comando
    _print->_caracter
    _caracter->_comando
    _create->_comando
    _begin->_comando
    _comando->_busdata

Critical Paths under _first_int in COMRAM

    _first_int->i2_seleccion_up
    i2_seleccion_up->i2_print
    i2_menu_principal->i2_print
    i2_writecaracter->i2_comando
    _menu_historial->i2_print
    _menu_glucosa->i2_print
    _menu_dosis->i2_print
    i2_setCursor->i2_comando
    i2_print->i2_caracter
    i2_caracter->i2_comando
    _clear->i2_comando
    i2_comando->i2_busdata

Critical Paths under _main in BANK0

    None.

Critical Paths under _first_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _first_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _first_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _first_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _first_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _first_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _first_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _first_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   13507
                                             34 COMRAM     5     0      5
                              _begin
                               _conf
                             _create
                     _menu_principal
                      _ocultarcursor
                          _oscilador
                     _seleccion_down
                       _seleccion_up
 ---------------------------------------------------------------------------------
 (1) _seleccion_up                                         2     0      2    3726
                                             29 COMRAM     2     0      2
                              _print
                          _setCursor
                      _writecaracter
 ---------------------------------------------------------------------------------
 (1) _seleccion_down                                       2     0      2    3602
                                             29 COMRAM     2     0      2
                              _print
                          _setCursor
                      _writecaracter
 ---------------------------------------------------------------------------------
 (1) _oscilador                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ocultarcursor                                        0     0      0      75
                            _comando
 ---------------------------------------------------------------------------------
 (1) _menu_principal                                       1     1      0    3254
                                             29 COMRAM     1     1      0
                              _print
                          _setCursor
                      _writecaracter
 ---------------------------------------------------------------------------------
 (2) _writecaracter                                        1     1      0      90
                                             20 COMRAM     1     1      0
                            _comando
 ---------------------------------------------------------------------------------
 (2) _setCursor                                            7     6      1    1807
                                             20 COMRAM     7     6      1
                            _comando
 ---------------------------------------------------------------------------------
 (2) _print                                                6     4      2    1357
                                             23 COMRAM     6     4      2
                           _caracter
 ---------------------------------------------------------------------------------
 (3) _caracter                                             3     3      0     135
                                             20 COMRAM     3     3      0
                            _comando
 ---------------------------------------------------------------------------------
 (1) _create                                              14     6      8    2775
                                             20 COMRAM    14     6      8
                            _comando
 ---------------------------------------------------------------------------------
 (1) _conf                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0      75
                            _comando
 ---------------------------------------------------------------------------------
 (3) _comando                                              1     1      0      75
                                             19 COMRAM     1     1      0
                            _busdata
 ---------------------------------------------------------------------------------
 (4) _busdata                                              1     1      0      60
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _first_int                                            5     5      0    9572
                                             13 COMRAM     5     5      0
                              _clear
                         _menu_dosis
                       _menu_glucosa
                     _menu_historial
                   i2_menu_principal
                     i2_seleccion_up
 ---------------------------------------------------------------------------------
 (7) i2_seleccion_up                                       2     0      2    2090
                                             11 COMRAM     2     0      2
                            i2_print
                        i2_setCursor
                    i2_writecaracter
 ---------------------------------------------------------------------------------
 (7) i2_menu_principal                                     1     1      0    1942
                                             11 COMRAM     1     1      0
                            i2_print
                        i2_setCursor
                    i2_writecaracter
 ---------------------------------------------------------------------------------
 (8) i2_writecaracter                                      1     1      0     132
                                              2 COMRAM     1     1      0
                          i2_comando
 ---------------------------------------------------------------------------------
 (7) _menu_historial                                       1     1      0    1810
                                             11 COMRAM     1     1      0
                            i2_print
                        i2_setCursor
 ---------------------------------------------------------------------------------
 (7) _menu_glucosa                                         1     1      0    1810
                                             11 COMRAM     1     1      0
                            i2_print
                        i2_setCursor
 ---------------------------------------------------------------------------------
 (7) _menu_dosis                                           1     1      0    1810
                                             11 COMRAM     1     1      0
                            i2_print
                        i2_setCursor
 ---------------------------------------------------------------------------------
 (8) i2_setCursor                                          7     6      1    1052
                                              2 COMRAM     7     6      1
                          i2_comando
 ---------------------------------------------------------------------------------
 (8) i2_print                                              6     4      2     758
                                              5 COMRAM     6     4      2
                         i2_caracter
 ---------------------------------------------------------------------------------
 (9) i2_caracter                                           3     3      0     200
                                              2 COMRAM     3     3      0
                          i2_comando
 ---------------------------------------------------------------------------------
 (7) _clear                                                0     0      0     110
                          i2_comando
 ---------------------------------------------------------------------------------
 (9) i2_comando                                            1     1      0     110
                                              1 COMRAM     1     1      0
                          i2_busdata
 ---------------------------------------------------------------------------------
 (10) i2_busdata                                           1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _begin
     _comando
       _busdata
   _conf
   _create
     _comando
       _busdata
   _menu_principal
     _print
       _caracter
         _comando
           _busdata
     _setCursor
       _comando
         _busdata
     _writecaracter
       _comando
         _busdata
   _ocultarcursor
     _comando
       _busdata
   _oscilador
   _seleccion_down
     _print
       _caracter
         _comando
           _busdata
     _setCursor
       _comando
         _busdata
     _writecaracter
       _comando
         _busdata
   _seleccion_up
     _print
       _caracter
         _comando
           _busdata
     _setCursor
       _comando
         _busdata
     _writecaracter
       _comando
         _busdata

 _first_int (ROOT)
   _clear
     i2_comando
       i2_busdata
   _menu_dosis
     i2_print
       i2_caracter
         i2_comando
           i2_busdata
     i2_setCursor
       i2_comando
         i2_busdata
   _menu_glucosa
     i2_print
       i2_caracter
         i2_comando
           i2_busdata
     i2_setCursor
       i2_comando
         i2_busdata
   _menu_historial
     i2_print
       i2_caracter
         i2_comando
           i2_busdata
     i2_setCursor
       i2_comando
         i2_busdata
   i2_menu_principal
     i2_print
       i2_caracter
         i2_comando
           i2_busdata
     i2_setCursor
       i2_comando
         i2_busdata
     i2_writecaracter
       i2_comando
         i2_busdata
   i2_seleccion_up
     i2_print
       i2_caracter
         i2_comando
           i2_busdata
     i2_setCursor
       i2_comando
         i2_busdata
     i2_writecaracter
       i2_comando
         i2_busdata

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      2B       1       45.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B       6        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Oct 17 02:00:10 2020

                        l9 1126                          _a 002A        __end_ofi2_setCursor 0E26  
                       l11 113C                         l20 13B6                         l13 1152  
                       l30 0D0A                         l15 1168                         l23 12BC  
                       l17 116A                         l33 1380                         l26 0C38  
                       l27 0C7E                         l44 0A48                         l28 0CC4  
                       l39 121C                         l47 13E2                         l56 1416  
                       u10 1120                         u11 111C                         u20 1136  
                       u21 1132                         u30 114C                         u31 1148  
                       u40 1162                         u41 115E             i2_seleccion_up 133C  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
  __size_of_seleccion_down 0028               __CFG_CP3$OFF 000000                __CFG_LVP$ON 000000  
                      l130 0B6E                        l123 0AE6                        l141 142E  
                      l144 1408                        l162 1312                        l147 0ECA  
                      l159 133A                        l900 136C                        l902 1370  
                      l904 1372                        l850 1112                        l906 1378  
                      l860 114C                        l852 1120                        l908 137E  
                      l862 1154                        l854 1128                        l864 1162  
                      l856 1136                        l960 13DA                        l858 113E  
                      l882 13A2                        l962 13E0                        l884 13A6  
                      l956 13D2                        l886 13AC                        l958 13D4  
                      l888 13B4                        l898 1366               __CFG_CPB$OFF 000000  
                      u500 0C90                        u501 0C8C                        u520 0CD6  
                      u521 0CD2               __CFG_CPD$OFF 000000                        u515 0CA8  
                      u540 121C                        u460 0C04                        u700 0B6E  
                      u541 1218                        u461 0C00                        u701 0B6A  
                      u710 0B7C                        u535 0CEE                        u711 0B78  
                      u640 087E                        u480 0C4A                        u720 0B9E  
                      u641 087A                        u481 0C46                        u721 0B9A  
                      u650 096C                        u730 0BD2                        u651 0968  
                      u475 0C1C                        u731 0BCE                        u660 0AE6  
                      u661 0AE2                        u670 0AF4                        u495 0C62  
                      u807 0E84                        u671 0AF0                        u680 0B14  
                      i2l9 1182                        u817 0EAA                        u681 0B10  
                      u690 0B48                        u827 0950                        u691 0B44  
                      u837 0A3E                        u847 13AE                        u797 0E5E  
               i2_caracter 1382                        wreg 000FE8                       l1006 1274  
                     l1130 1426                       l1126 140A                       l1128 13F8  
                     l1500 088A                       l1420 0BF4                       l1510 08A2  
                     l1502 088C                       l1430 0C72                       l1422 0C04  
                     l1600 0A08                       l1520 08C8                       l1512 08A8  
                     l1504 0892                       l1440 0CD6                       l1432 0C78  
                     l1424 0C2C                       l1610 0A38                       l1602 0A0E  
                     l1530 08EE                       l1522 08CE                       l1514 08B8  
                     l1506 0896                       l1450 11F0                       l1442 0CFE  
                     l1434 0C90                       l1426 0C32                       l1604 0A14  
                     l1540 0916                       l1532 08F4                       l1524 08D4  
                     l1516 08BE                       l1508 089C                       l1452 11F4  
                     l1444 0D04                       l1436 0CB8                       l1428 0C4A  
                     l1620 0E46                       l1606 0A1A                       l1550 093C  
                     l1542 091A                       l1534 08FA                       l1526 08E4  
                     l1518 08C2                       l1446 11C8                       l1438 0CBE  
                     l1630 0E7E                       l1622 0E4C                       l1614 0E26  
                     l1608 0A2A                       l1560 097A                       l1552 094A  
                     l1544 0920                       l1536 0900                       l1528 08EA  
                     l1448 11D4                       l1640 0EBE                       l1632 0E8E  
                     l1624 0E58                       l1616 0E30                       l1570 0996  
                     l1562 0980                       l1546 0926                       l1538 0910  
                     l1554 095A                       l1634 0E98                       l1626 0E68  
                     l1618 0E3C                       l1642 1314                       l1650 12EC  
                     l1802 0BDE                       l1580 09BC                       l1572 09A6  
                     l1564 0984                       l1556 096C                       l1548 092C  
                     l1636 0EA4                       l1628 0E72                       l1644 131E  
                     l1652 12F6                       l1590 09E2                       l1582 09C2  
                     l1574 09AC                       l1566 098A                       l1558 0978  
                     l1638 0EB4                       l1646 132A                       l1654 1302  
                     l1750 0A4E                       l1592 09E8                       l1584 09D2  
                     l1576 09B0                       l1568 0990                       l1496 086E  
                     l1648 1334                       l1656 130C                       l1760 0AC8  
                     l1752 0A74                       l1594 09EE                       l1586 09D8  
                     l1578 09B6                       l1498 087E                       l1770 0AF8  
                     l1762 0ACC                       l1754 0A78                       l1596 09FE  
                     l1588 09DC                       l1772 0B14                       l1764 0AD8  
                     l1756 0A9E                       l1748 0A4A                       l1598 0A04  
                     l1790 0B82                       l1782 0B54                       l1774 0B1C  
                     l1758 0AC4                       l1792 0B9E                       l1776 0B2C  
                     l1768 0AF4                       l1784 0B60                       l1794 0BA6  
                     l1778 0B48                       l1796 0BB6                       l1788 0B7C  
                     l1798 0BD2                       STR_1 0864                       STR_2 085F  
                     STR_3 0851                       STR_4 0859                       STR_5 0822  
                     STR_6 0859                       STR_7 0849                       STR_8 0840  
                     STR_9 082C                       i2l11 1198                       i2l20 13CE  
                     i2l13 11AE                       i2l30 0E24                       i2l15 11C4  
                     i2l17 11C6                       i2l33 139E                       i2l50 1424  
                     i2l26 0D52                       i2l27 0D98                       i2l28 0DDE  
                     i2l39 1272                       i2l47 13F6                       _conf 13F8  
                     _cont 0028                       _main 0A4A                       btemp 002C  
            __CFG_BORV$190 000000                       start 0114              __CFG_IESO$OFF 000000  
          __end_ofi2_print 1274           ?i2_writecaracter 0001              __CFG_MCLRE$ON 000000  
             ___param_bank 000000     __end_ofi2_seleccion_up 1364                 i2comando@a 0002  
                    ?_conf 0001                      ?_main 0023      __end_of_ocultarcursor 1418  
                    STR_10 0851                      STR_11 0836                      STR_12 0840  
                    STR_13 082C                      STR_14 0822                      STR_15 0801  
                    STR_16 080C                      STR_17 0817                      STR_18 0869  
                    STR_19 0869                 i2busdata@a 0001                      i2l150 110E  
                    i2l153 1084                      i2l162 1362                      i2l147 0F70  
                    i2l156 0FFA                      i2l174 0100                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISD 000F95                      _TRISE 000F96  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
          __end_of_comando 13B8              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000                i2caracter@a 0005                i2caracter@m 0003  
              i2caracter@n 0004                      _begin 1274             __CFG_EBTRB$OFF 000000  
          __end_of_busdata 116C                      _clear 1418                      _print 11C8  
                    tablat 000FF5             writecaracter@a 0015          ?i2_menu_principal 0001  
                    ttemp5 002D                      ttemp6 0030                      ttemp7 0034  
                    status 000FD8           ??_menu_historial 000C             __CFG_T3CMX$RC0 000000  
                    wtemp8 002D             __CFG_ICPRT$OFF 000000                i2_setCursor 0D0C  
       ??i2_menu_principal 000C             __CFG_PBADEN$ON 000000            __initialization 12BE  
             __end_of_conf 140A               __end_of_main 0BF2         __size_ofi2_comando 0018  
          ?i2_seleccion_up 000C         __size_ofi2_busdata 005C             __CFG_PCLKEN$ON 000000  
                   ??_conf 0013                     ??_main 0028           ??_menu_principal 001E  
            __activetblptr 000001                ?i2_caracter 0001             __CFG_SDOMX$RB3 000000  
          __CFG_CCP2MX$RC1 000000                     ?_begin 0001                     ?_clear 0001  
                   ?_print 0018                     _ANSELA 000F5B                     _ANSELB 000F5C  
                   _ANSELD 000F5E                     _ANSELE 000F5F                     i2l1400 13BA  
                   i2l1402 13BE                     i2l1410 138A                     i2l1404 13C4  
                   i2l1412 138E                     i2l1406 13CC                     i2l1414 1390  
                   i2l1416 1396                     i2l1408 1384                     i2l1418 139C  
                   i2l1612 1418                     i2l1460 0D4C                     i2l1700 0F98  
                   i2l1390 1192                     i2l1470 0DD2                     i2l1462 0D64  
                   i2l1454 0D0E                     i2l1710 0FE4                     i2l1702 0FA2  
                   i2l1392 119A                     i2l1384 116E                     i2l1480 121E  
                   i2l1472 0DD8                     i2l1464 0D8C                     i2l1456 0D1E  
                   i2l1704 0FBE                     i2l1720 0EF2                     i2l1712 0ECC  
                   i2l1394 11A8                     i2l1386 117C                     i2l1482 122A  
                   i2l1474 0DF0                     i2l1466 0D92                     i2l1458 0D46  
                   i2l1706 0FC8                     i2l1490 13E8                     i2l1730 0F34  
                   i2l1722 0EFE                     i2l1714 0ED6                     i2l1810 0040  
                   i2l1396 11B0                     i2l1388 1184                     i2l1484 1246  
                   i2l1476 0E18                     i2l1468 0DAA                     i2l1660 1090  
                   i2l1708 0FD4                     i2l1492 13EE                     i2l1732 0F3E  
                   i2l1724 0F0E                     i2l1716 0EE2                     i2l1740 133C  
                   i2l1820 007A                     i2l1812 0044                     i2l1804 001A  
                   i2l1398 11BE                     i2l1486 124A                     i2l1478 0E1E  
                   i2l1670 10DC                     i2l1662 109C                     i2l1494 13F4  
                   i2l1734 0F4A                     i2l1726 0F18                     i2l1718 0EEC  
                   i2l1742 1346                     i2l1830 009A                     i2l1814 0050  
                   i2l1806 0028             __CFG_WDTEN$OFF 000000                     i2l1672 10E8  
                   i2l1664 10AC                     i2l1680 1012                     i2l1488 13E6  
                   i2l1736 0F5A                     i2l1728 0F24                     i2l1744 1352  
                   i2l1840 00A6                     i2l1808 003C                     i2l1816 0062  
                   i2l1674 10F8                     i2l1666 10B6                     i2l1658 1086  
                   i2l1690 105E                     i2l1682 1022                     i2l1738 0F64  
                   i2l1746 135C                     i2l1850 00D2                     i2l1842 00A8  
                   i2l1818 0076                     i2l1826 0082                     i2l1668 10D2  
                   i2l1692 106E                     i2l1684 102C                     i2l1676 0FFC  
                   i2l1860 00F6                     i2l1852 00E2                     i2l1828 0096  
                   i2l1836 00A2                     i2l1844 00B0                     i2l1686 1048  
                   i2l1678 1006                     i2l1694 0F72                     i2l1862 00F8  
                   i2l1854 00E6                     i2l1846 00BE                     i2l1838 00A4  
                   i2l1688 1052                     i2l1696 0F7C                     i2l1856 00F2  
                   i2l1848 00CE                     i2l1698 0F88                     i2l1858 00F4  
                   _OSCCON 000FD3                  ??i2_print 0008           __end_of_caracter 1382  
           __CFG_XINST$OFF 000000             __CFG_STVREN$ON 000000                     _create 086C  
            ?_menu_glucosa 0001             _seleccion_down 1314                  ??_comando 0014  
                ??_busdata 0013               __pdataCOMRAM 002A               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                   print@a 0018                     print@k 001C          __end_ofi2_comando 13D0  
        __end_ofi2_busdata 11C8       __CFG_LS48MHZ$SYS24X4 000000                 __accesstop 0060  
  __end_of__initialization 12DA              ___rparam_used 000001        __size_ofi2_caracter 001E  
           __pcstackCOMRAM 0001           __CFG_nPWRTEN$OFF 000000              __end_of_begin 12BE  
            __end_of_clear 1426     __end_of_seleccion_down 133C             ??_menu_glucosa 000C  
            __end_of_print 121E     __size_of_writecaracter 0014                    ??_begin 0015  
                  ??_clear 0003                    ??_print 001A         __size_of_first_int 010C  
        __CFG_PLLSEL$PLL4X 000000              ?_seleccion_up 001E            ?_seleccion_down 001E  
       __size_of_setCursor 011A                    ?_create 0015         __size_of_oscilador 000A  
                ?_caracter 0001                    _OSCCON2 000FD2                    i2u42_40 117C  
                  i2u42_41 1178                    i2u43_40 1192                    i2u43_41 118E  
                  i2u44_40 11A8                    i2u44_41 11A4                    i2u60_45 0DC2  
                  i2u45_40 11BE                    i2u61_40 0DF0                    i2u45_41 11BA  
                  i2u61_41 0DEC                    i2u62_45 0E08                    i2u63_40 1272  
                  i2u55_40 0D1E                    i2u63_41 126E                    i2u55_41 0D1A  
                  i2u56_45 0D36                    i2u57_40 0D64                    i2u57_41 0D60  
                  i2u74_40 0028                    i2u74_41 0024                    i2u58_45 0D7C  
                  i2u90_47 0F50                    i2u59_40 0DAA                    i2u75_40 003C  
                  i2u59_41 0DA6                    i2u75_41 0038                    i2u91_47 0F8E  
                  i2u76_40 0076                    i2u76_41 0072                    i2u92_47 0FB4  
                  i2u77_40 0096                    i2u77_41 0092                    i2u93_47 0FDA  
                  i2u85_47 0056                    i2u78_40 00BE                    i2u78_41 00BA  
                  i2u94_47 1018                    i2u86_47 00C4                    i2u95_47 103E  
                  i2u87_47 00D8                    i2u96_47 1064                    i2u88_47 0F04  
                  i2u97_47 10A2                    i2u89_47 0F2A                    i2u98_47 10C8  
                  i2u99_47 10EE                    i2_print 121E               ?i2_setCursor 0003  
         ??i2_seleccion_up 000E              _writecaracter 13D0                    __Hparam 0000  
                  __Lparam 0000             ??_seleccion_up 0020               __psmallconst 0800  
          __size_of_create 01DE  __size_ofi2_menu_principal 00A6                    __pcinit 12BE  
                  __ramtop 0800          __end_of_first_int 0114   __size_ofi2_writecaracter 0014  
                  __ptext0 0A4A                    __ptext1 12EC                    __ptext2 1314  
                  __ptext3 1426                    __ptext4 140A                    __ptext5 0E26  
                  __ptext6 13D0                    __ptext7 0BF2                    __ptext8 11C8  
                  __ptext9 1364                    _comando 13A0                 _menu_dosis 1086  
                  _busdata 1110               ??i2_caracter 0003                 ??_caracter 0015  
                  create@a 001E                    create@b 0015                    create@c 0016  
                  create@d 0017                    create@e 0018                    create@f 0019  
                  create@g 001A                    create@h 001B                    create@i 001C  
                  create@m 001F                    create@n 0020       end_of_initialization 12DA  
        __end_of_setCursor 0D0C       __end_of_menu_glucosa 1086          __end_of_oscilador 1430  
           ?_writecaracter 0001     __size_of_ocultarcursor 000E         __end_ofi2_caracter 13A0  
             i2setCursor@m 0007               i2setCursor@n 0008               i2setCursor@x 0009  
             i2setCursor@y 0003                  _PORTAbits 000F80              seleccion_up@a 001E  
                _PORTDbits 000F83                  _PORTEbits 000F84                  _TRISBbits 000F93  
                i2_comando 13B8                  i2_busdata 116C    __size_of_menu_historial 008A  
            __pidataCOMRAM 1430             __end_of_create 0A4A                ?_menu_dosis 0001  
            _ocultarcursor 140A        start_initialization 12BE       __end_of_seleccion_up 1314  
        ??i2_writecaracter 0003    __size_of_menu_principal 00A6            ??_writecaracter 0015  
          __CFG_nLPBOR$OFF 000000                 ?i2_comando 0001                 ?i2_busdata 0001  
         ??_seleccion_down 0020       __size_ofi2_setCursor 011A                   ??_create 001D  
         i2_menu_principal 0ECC             ?_ocultarcursor 0001                __pbssCOMRAM 0028  
    __size_of_menu_glucosa 008A          __size_of_caracter 001E                   ?i2_print 0006  
      __size_of_menu_dosis 008A                  __pintcode 0008                 setCursor@m 0019  
               setCursor@n 001A                 setCursor@x 001B                 setCursor@y 0015  
             _menu_glucosa 0FFC                   ?_comando 0001                   ?_busdata 0001  
              __smallconst 0800                  _first_int 0008                  caracter@a 0017  
                caracter@m 0015                  caracter@n 0016             __size_of_begin 004A  
           __size_of_clear 000E             __size_of_print 0056                ??i2_comando 0002  
              ??i2_busdata 0001                  _setCursor 0BF2                   i2u100_47 13C6  
                _oscilador 1426           __CFG_WDTPS$32768 000000             _menu_historial 0F72  
          ??_ocultarcursor 0015      __size_of_seleccion_up 0028                 ?_first_int 0001  
        __CFG_CFGPLLEN$OFF 000000                _INTCON2bits 000FF1                _INTCON3bits 000FF0  
           _menu_principal 0E26                   i2print@a 0006                   i2print@k 000A  
         __size_ofi2_print 0056                 ?_setCursor 0015                   __Hrparam 0000  
               ?_oscilador 0001     __end_of_menu_historial 0FFC                   __Lrparam 0000  
             __Lsmallconst 0800         __CFG_BOREN$SBORDIS 000000               _seleccion_up 12EC  
          i2_writecaracter 13E4    __size_ofi2_seleccion_up 0028               ??_menu_dosis 000C  
         __size_of_comando 0018                   _caracter 1364           __size_of_busdata 005C  
   __end_of_menu_principal 0ECC                   __ptext10 086C                   __ptext11 13F8  
                 __ptext20 0FFC                   __ptext12 1274                   __ptext21 1086  
                 __ptext13 13A0                   __ptext22 0D0C                   __ptext14 1110  
                 __ptext23 121E                   __ptext24 1382                   __ptext16 133C  
                 __ptext25 1418                   __ptext17 0ECC                   __ptext26 13B8  
                 __ptext18 13E4                   __ptext27 116C                   __ptext19 0F72  
 __end_ofi2_menu_principal 0F72              __size_of_conf 0012              __size_of_main 01A8  
       __end_of_menu_dosis 1110            ?_menu_historial 0001                   int$flags 002C  
                 comando@a 0014                   main@argc 0023                   main@argv 0025  
                 busdata@a 0013                 _INTCONbits 000FF2                ??_first_int 000E  
          ?_menu_principal 0001            i2seleccion_up@a 000C                   intlevel2 0000  
            ??i2_setCursor 0004                ??_setCursor 0016      __end_of_writecaracter 13E4  
  __end_ofi2_writecaracter 13F8                ??_oscilador 0013       __CFG_CPUDIV$NOCLKDIV 000000  
          seleccion_down@a 001E           i2writecaracter@a 0003         __CFG_FOSC$INTOSCIO 000000  
              create@m_172 0021                create@n_173 0022  
