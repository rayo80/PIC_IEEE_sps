

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Oct 15 04:33:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F45K50 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _ANSELBbits	set	3932
    54  0000                     _ANSELA	set	3931
    55  0000                     _ANSELE	set	3935
    56  0000                     _ANSELD	set	3934
    57  0000                     _ANSELB	set	3932
    58  0000                     _PORTEbits	set	3972
    59  0000                     _PORTDbits	set	3971
    60  0000                     _OSCCON2	set	4050
    61  0000                     _OSCCON	set	4051
    62  0000                     _INTCON2bits	set	4081
    63  0000                     _INTCONbits	set	4082
    64  0000                     _PORTA	set	3968
    65  0000                     _PORTD	set	3971
    66  0000                     _TRISE	set	3990
    67  0000                     _TRISA	set	3986
    68  0000                     _TRISD	set	3989
    69  0000                     _TRISBbits	set	3987
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  000144                     __pcinit:
    75                           	opt callstack 0
    76  000144                     start_initialization:
    77                           	opt callstack 0
    78  000144                     __initialization:
    79                           	opt callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (2 bytes)
    82  000144  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
    83  000146  6A0A               	clrf	__pbssCOMRAM& (0+255),c
    84  000148                     end_of_initialization:
    85                           	opt callstack 0
    86  000148                     __end_of__initialization:
    87                           	opt callstack 0
    88  000148  900C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    89  00014A  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    90  00014C  0100               	movlb	0
    91  00014E  EF0E  F000         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMRAM
    94  00000A                     __pbssCOMRAM:
    95                           	opt callstack 0
    96  00000A                     _cont:
    97                           	opt callstack 0
    98  00000A                     	ds	2
    99                           
   100                           	psect	cstackCOMRAM
   101  000001                     __pcstackCOMRAM:
   102                           	opt callstack 0
   103  000001                     busdata@a:
   104                           	opt callstack 0
   105                           
   106                           ; 1 bytes @ 0x0
   107  000001                     	ds	1
   108  000002                     comando@a:
   109                           	opt callstack 0
   110                           
   111                           ; 1 bytes @ 0x1
   112  000002                     	ds	1
   113  000003                     
   114                           ; 2 bytes @ 0x2
   115  000003                     	ds	2
   116  000005                     
   117                           ; 3 bytes @ 0x4
   118  000005                     	ds	3
   119  000008                     ??_main:
   120                           
   121                           ; 1 bytes @ 0x7
   122  000008                     	ds	2
   123                           
   124 ;;
   125 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   126 ;;
   127 ;; *************** function _main *****************
   128 ;; Defined at:
   129 ;;		line 22 in file "main.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;  argc            2    2[COMRAM] int 
   132 ;;  argv            3    4[COMRAM] PTR PTR unsigned char 
   133 ;; Auto vars:     Size  Location     Type
   134 ;;		None
   135 ;; Return value:  Size  Location     Type
   136 ;;                  2    2[COMRAM] int 
   137 ;; Registers used:
   138 ;;		wreg, status,2, cstack
   139 ;; Tracked objects:
   140 ;;		On entry : 0/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   144 ;;      Params:         5       0       0       0       0       0       0       0       0
   145 ;;      Locals:         0       0       0       0       0       0       0       0       0
   146 ;;      Temps:          2       0       0       0       0       0       0       0       0
   147 ;;      Totals:         7       0       0       0       0       0       0       0       0
   148 ;;Total ram usage:        7 bytes
   149 ;; Hardware stack levels required when called:    4
   150 ;; This function calls:
   151 ;;		_begin
   152 ;;		_conf
   153 ;;		_oscilador
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160  00001C                     __ptext0:
   161                           	opt callstack 0
   162  00001C                     _main:
   163                           	opt callstack 27
   164  00001C                     
   165                           ;main.c: 24:     oscilador();
   166  00001C  ECAF  F000         	call	_oscilador	;wreg free
   167  000020                     
   168                           ;main.c: 25:     ANSELB=0;
   169  000020  0E00               	movlw	0
   170  000022  010F               	movlb	15	; () banked
   171  000024  6F5C               	movwf	92,b	;volatile
   172  000026                     
   173                           ; BSR set to: 15
   174                           ;main.c: 26:     ANSELD=0;
   175  000026  0E00               	movlw	0
   176  000028  6F5E               	movwf	94,b	;volatile
   177  00002A                     
   178                           ; BSR set to: 15
   179                           ;main.c: 27:     ANSELE=0;
   180  00002A  0E00               	movlw	0
   181  00002C  6F5F               	movwf	95,b	;volatile
   182  00002E                     
   183                           ; BSR set to: 15
   184                           ;main.c: 28:     ANSELA=0;
   185  00002E  0E00               	movlw	0
   186  000030  6F5B               	movwf	91,b	;volatile
   187  000032                     
   188                           ; BSR set to: 15
   189                           ;main.c: 30:     ANSELBbits.ANSB4=0;
   190  000032  995C               	bcf	92,4,b	;volatile
   191  000034                     
   192                           ; BSR set to: 15
   193                           ;main.c: 31:     ANSELBbits.ANSB0=0;
   194  000034  915C               	bcf	92,0,b	;volatile
   195  000036                     
   196                           ; BSR set to: 15
   197                           ;main.c: 32:     TRISBbits.RB4=1;
   198  000036  8893               	bsf	147,4,c	;volatile
   199  000038                     
   200                           ; BSR set to: 15
   201                           ;main.c: 33:     TRISD=0;
   202  000038  0E00               	movlw	0
   203  00003A  6E95               	movwf	149,c	;volatile
   204  00003C                     
   205                           ; BSR set to: 15
   206                           ;main.c: 34:     TRISA=0;
   207  00003C  0E00               	movlw	0
   208  00003E  6E92               	movwf	146,c	;volatile
   209  000040                     
   210                           ; BSR set to: 15
   211                           ;main.c: 35:     TRISE=0;
   212  000040  0E00               	movlw	0
   213  000042  6E96               	movwf	150,c	;volatile
   214                           
   215                           ;main.c: 36:     conf();
   216  000044  ECA9  F000         	call	_conf	;wreg free
   217  000048                     
   218                           ;main.c: 37:     begin();
   219  000048  EC71  F000         	call	_begin	;wreg free
   220  00004C                     l993:
   221                           
   222                           ;main.c: 47:         PORTD=255;
   223  00004C  6883               	setf	131,c	;volatile
   224  00004E                     
   225                           ;main.c: 48:         _delay((unsigned long)((1000)*(2000000UL/4000.0)));
   226  00004E  0E03               	movlw	3
   227  000050  6E09               	movwf	(??_main+1)^0,c
   228  000052  0E8A               	movlw	138
   229  000054  6E08               	movwf	??_main^0,c
   230  000056  0E56               	movlw	86
   231  000058                     u157:
   232  000058  2EE8               	decfsz	wreg,f,c
   233  00005A  D7FE               	bra	u157
   234  00005C  2E08               	decfsz	??_main^0,f,c
   235  00005E  D7FC               	bra	u157
   236  000060  2E09               	decfsz	(??_main+1)^0,f,c
   237  000062  D7FA               	bra	u157
   238  000064                     
   239                           ;main.c: 49:         PORTD=0;
   240  000064  0E00               	movlw	0
   241  000066  6E83               	movwf	131,c	;volatile
   242                           
   243                           ;main.c: 50:         _delay((unsigned long)((1000)*(2000000UL/4000.0)));
   244  000068  0E03               	movlw	3
   245  00006A  6E09               	movwf	(??_main+1)^0,c
   246  00006C  0E8A               	movlw	138
   247  00006E  6E08               	movwf	??_main^0,c
   248  000070  0E56               	movlw	86
   249  000072                     u167:
   250  000072  2EE8               	decfsz	wreg,f,c
   251  000074  D7FE               	bra	u167
   252  000076  2E08               	decfsz	??_main^0,f,c
   253  000078  D7FC               	bra	u167
   254  00007A  2E09               	decfsz	(??_main+1)^0,f,c
   255  00007C  D7FA               	bra	u167
   256  00007E  EF26  F000         	goto	l993
   257  000082  EF0C  F000         	goto	start
   258  000086                     __end_of_main:
   259                           	opt callstack 0
   260                           
   261 ;; *************** function _oscilador *****************
   262 ;; Defined at:
   263 ;;		line 102 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;		None
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, status,2
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   277 ;;      Params:         0       0       0       0       0       0       0       0       0
   278 ;;      Locals:         0       0       0       0       0       0       0       0       0
   279 ;;      Temps:          0       0       0       0       0       0       0       0       0
   280 ;;      Totals:         0       0       0       0       0       0       0       0       0
   281 ;;Total ram usage:        0 bytes
   282 ;; Hardware stack levels used:    1
   283 ;; Hardware stack levels required when called:    1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text1
   292  00015E                     __ptext1:
   293                           	opt callstack 0
   294  00015E                     _oscilador:
   295                           	opt callstack 29
   296  00015E                     
   297                           ;main.c: 103:     OSCCON=0X40;
   298  00015E  0E40               	movlw	64
   299  000160  6ED3               	movwf	211,c	;volatile
   300                           
   301                           ;main.c: 104:     OSCCON2=0X00;
   302  000162  0E00               	movlw	0
   303  000164  6ED2               	movwf	210,c	;volatile
   304  000166  0012               	return		;funcret
   305  000168                     __end_of_oscilador:
   306                           	opt callstack 0
   307                           
   308 ;; *************** function _conf *****************
   309 ;; Defined at:
   310 ;;		line 93 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		None
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   324 ;;      Params:         0       0       0       0       0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0       0       0       0       0
   327 ;;      Totals:         0       0       0       0       0       0       0       0       0
   328 ;;Total ram usage:        0 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; Hardware stack levels required when called:    1
   331 ;; This function calls:
   332 ;;		Nothing
   333 ;; This function is called by:
   334 ;;		_main
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text2
   339  000152                     __ptext2:
   340                           	opt callstack 0
   341  000152                     _conf:
   342                           	opt callstack 29
   343  000152                     
   344                           ;main.c: 95:     TRISBbits.RB0=1;
   345  000152  8093               	bsf	147,0,c	;volatile
   346                           
   347                           ;main.c: 96:     INTCONbits.INT0IE=1;
   348  000154  88F2               	bsf	242,4,c	;volatile
   349                           
   350                           ;main.c: 97:     INTCONbits.INT0IF=0;
   351  000156  92F2               	bcf	242,1,c	;volatile
   352                           
   353                           ;main.c: 98:     INTCON2bits.INTEDG0=0;
   354  000158  9CF1               	bcf	241,6,c	;volatile
   355                           
   356                           ;main.c: 99:     INTCONbits.GIE=1;
   357  00015A  8EF2               	bsf	242,7,c	;volatile
   358  00015C  0012               	return		;funcret
   359  00015E                     __end_of_conf:
   360                           	opt callstack 0
   361                           
   362 ;; *************** function _begin *****************
   363 ;; Defined at:
   364 ;;		line 41 in file "LCD.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   378 ;;      Params:         0       0       0       0       0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0       0       0       0       0
   381 ;;      Totals:         0       0       0       0       0       0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; Hardware stack levels required when called:    3
   385 ;; This function calls:
   386 ;;		_comando
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text3
   393  0000E2                     __ptext3:
   394                           	opt callstack 0
   395  0000E2                     _begin:
   396                           	opt callstack 27
   397  0000E2                     
   398                           ;LCD.c: 42:     comando(0x03);
   399  0000E2  0E03               	movlw	3
   400  0000E4  EC96  F000         	call	_comando
   401                           
   402                           ;LCD.c: 43:     comando(0x03);
   403  0000E8  0E03               	movlw	3
   404  0000EA  EC96  F000         	call	_comando
   405                           
   406                           ;LCD.c: 44:     comando(0x03);
   407  0000EE  0E03               	movlw	3
   408  0000F0  EC96  F000         	call	_comando
   409                           
   410                           ;LCD.c: 45:     comando(0x02);
   411  0000F4  0E02               	movlw	2
   412  0000F6  EC96  F000         	call	_comando
   413                           
   414                           ;LCD.c: 46:     comando(0x02);
   415  0000FA  0E02               	movlw	2
   416  0000FC  EC96  F000         	call	_comando
   417                           
   418                           ;LCD.c: 47:     comando(0x08);
   419  000100  0E08               	movlw	8
   420  000102  EC96  F000         	call	_comando
   421                           
   422                           ;LCD.c: 48:     comando(0x00);
   423  000106  0E00               	movlw	0
   424  000108  EC96  F000         	call	_comando
   425                           
   426                           ;LCD.c: 49:     comando(0x08);
   427  00010C  0E08               	movlw	8
   428  00010E  EC96  F000         	call	_comando
   429                           
   430                           ;LCD.c: 50:     comando(0x00);
   431  000112  0E00               	movlw	0
   432  000114  EC96  F000         	call	_comando
   433                           
   434                           ;LCD.c: 51:     comando(0x01);
   435  000118  0E01               	movlw	1
   436  00011A  EC96  F000         	call	_comando
   437                           
   438                           ;LCD.c: 52:     comando(0x00);
   439  00011E  0E00               	movlw	0
   440  000120  EC96  F000         	call	_comando
   441                           
   442                           ;LCD.c: 53:     comando(0x0D);
   443  000124  0E0D               	movlw	13
   444  000126  EC96  F000         	call	_comando
   445  00012A  0012               	return		;funcret
   446  00012C                     __end_of_begin:
   447                           	opt callstack 0
   448                           
   449 ;; *************** function _comando *****************
   450 ;; Defined at:
   451 ;;		line 32 in file "LCD.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  a               1    wreg     unsigned char 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  a               1    1[COMRAM] unsigned char 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   465 ;;      Params:         0       0       0       0       0       0       0       0       0
   466 ;;      Locals:         1       0       0       0       0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0
   468 ;;      Totals:         1       0       0       0       0       0       0       0       0
   469 ;;Total ram usage:        1 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; Hardware stack levels required when called:    2
   472 ;; This function calls:
   473 ;;		_busdata
   474 ;; This function is called by:
   475 ;;		_begin
   476 ;;		_setCursor
   477 ;;		_caracter
   478 ;;		_create
   479 ;;		_writecaracter
   480 ;;		_clear
   481 ;;		_home
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text4
   486  00012C                     __ptext4:
   487                           	opt callstack 0
   488  00012C                     _comando:
   489                           	opt callstack 27
   490                           
   491                           ;incstack = 0
   492                           ;comando@a stored from wreg
   493  00012C  6E02               	movwf	comando@a^0,c
   494  00012E                     
   495                           ;LCD.c: 33:     PORTEbits.RE2=0;
   496  00012E  9484               	bcf	132,2,c	;volatile
   497                           
   498                           ;LCD.c: 34:     PORTEbits.RE2=1;
   499  000130  8484               	bsf	132,2,c	;volatile
   500  000132                     
   501                           ;LCD.c: 36:     busdata(a);
   502  000132  5002               	movf	comando@a^0,w,c
   503  000134  EC43  F000         	call	_busdata
   504  000138                     
   505                           ;LCD.c: 37:     _delay((unsigned long)((1)*(2000000UL/4000.0)));
   506  000138  0EA6               	movlw	166
   507  00013A                     u177:
   508  00013A  2EE8               	decfsz	wreg,f,c
   509  00013C  D7FE               	bra	u177
   510  00013E  D000               	nop2	
   511  000140                     
   512                           ;LCD.c: 38:     PORTEbits.RE2=0;
   513  000140  9484               	bcf	132,2,c	;volatile
   514  000142  0012               	return		;funcret
   515  000144                     __end_of_comando:
   516                           	opt callstack 0
   517                           
   518 ;; *************** function _busdata *****************
   519 ;; Defined at:
   520 ;;		line 4 in file "LCD.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  a               1    wreg     unsigned char 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  a               1    0[COMRAM] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   534 ;;      Params:         0       0       0       0       0       0       0       0       0
   535 ;;      Locals:         1       0       0       0       0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0
   537 ;;      Totals:         1       0       0       0       0       0       0       0       0
   538 ;;Total ram usage:        1 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_comando
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text5
   549  000086                     __ptext5:
   550                           	opt callstack 0
   551  000086                     _busdata:
   552                           	opt callstack 27
   553                           
   554                           ;incstack = 0
   555                           ;busdata@a stored from wreg
   556  000086  6E01               	movwf	busdata@a^0,c
   557  000088                     
   558                           ;LCD.c: 5:     if (a & 0x01){
   559  000088  A001               	btfss	busdata@a^0,0,c
   560  00008A  EF49  F000         	goto	u11
   561  00008E  EF4B  F000         	goto	u10
   562  000092                     u11:
   563  000092  EF4E  F000         	goto	l68
   564  000096                     u10:
   565  000096                     
   566                           ;LCD.c: 6:         PORTDbits.RD4=1;
   567  000096  8883               	bsf	131,4,c	;volatile
   568                           
   569                           ;LCD.c: 7:     }
   570  000098  EF4F  F000         	goto	l791
   571  00009C                     l68:
   572                           
   573                           ;LCD.c: 9:         PORTDbits.RD4=0;
   574  00009C  9883               	bcf	131,4,c	;volatile
   575  00009E                     l791:
   576                           
   577                           ;LCD.c: 11:     if (a & 0x02){
   578  00009E  A201               	btfss	busdata@a^0,1,c
   579  0000A0  EF54  F000         	goto	u21
   580  0000A4  EF56  F000         	goto	u20
   581  0000A8                     u21:
   582  0000A8  EF59  F000         	goto	l70
   583  0000AC                     u20:
   584  0000AC                     
   585                           ;LCD.c: 12:         PORTDbits.RD5=1;
   586  0000AC  8A83               	bsf	131,5,c	;volatile
   587                           
   588                           ;LCD.c: 13:     }
   589  0000AE  EF5A  F000         	goto	l795
   590  0000B2                     l70:
   591                           
   592                           ;LCD.c: 15:         PORTDbits.RD5=0;
   593  0000B2  9A83               	bcf	131,5,c	;volatile
   594  0000B4                     l795:
   595                           
   596                           ;LCD.c: 17:     if (a & 0x04){
   597  0000B4  A401               	btfss	busdata@a^0,2,c
   598  0000B6  EF5F  F000         	goto	u31
   599  0000BA  EF61  F000         	goto	u30
   600  0000BE                     u31:
   601  0000BE  EF64  F000         	goto	l72
   602  0000C2                     u30:
   603  0000C2                     
   604                           ;LCD.c: 18:         PORTDbits.RD6=1;
   605  0000C2  8C83               	bsf	131,6,c	;volatile
   606                           
   607                           ;LCD.c: 19:     }
   608  0000C4  EF65  F000         	goto	l799
   609  0000C8                     l72:
   610                           
   611                           ;LCD.c: 21:         PORTDbits.RD6=0;
   612  0000C8  9C83               	bcf	131,6,c	;volatile
   613  0000CA                     l799:
   614                           
   615                           ;LCD.c: 23:     if (a & 0x08){
   616  0000CA  A601               	btfss	busdata@a^0,3,c
   617  0000CC  EF6A  F000         	goto	u41
   618  0000D0  EF6C  F000         	goto	u40
   619  0000D4                     u41:
   620  0000D4  EF6F  F000         	goto	l74
   621  0000D8                     u40:
   622  0000D8                     
   623                           ;LCD.c: 24:         PORTDbits.RD7=1;
   624  0000D8  8E83               	bsf	131,7,c	;volatile
   625                           
   626                           ;LCD.c: 25:     }
   627  0000DA  EF70  F000         	goto	l76
   628  0000DE                     l74:
   629                           
   630                           ;LCD.c: 27:         PORTDbits.RD7=0;
   631  0000DE  9E83               	bcf	131,7,c	;volatile
   632  0000E0                     l76:
   633  0000E0  0012               	return		;funcret
   634  0000E2                     __end_of_busdata:
   635                           	opt callstack 0
   636                           
   637 ;; *************** function _first_int *****************
   638 ;; Defined at:
   639 ;;		line 87 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		status,2, status,0
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   653 ;;      Params:         0       0       0       0       0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		Interrupt level 2
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	intcode
   667  000008                     __pintcode:
   668                           	opt callstack 0
   669  000008                     _first_int:
   670                           	opt callstack 27
   671                           
   672                           ;incstack = 0
   673  000008  820C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   674  00000A                     
   675                           ;main.c: 88:     cont++;
   676  00000A  4A0A               	infsnz	_cont^0,f,c
   677  00000C  2A0B               	incf	(_cont+1)^0,f,c
   678  00000E                     
   679                           ;main.c: 89:     PORTA=cont;
   680  00000E  C00A  FF80         	movff	_cont,3968	;volatile
   681  000012                     
   682                           ;main.c: 90:     INTCONbits.INT0IF=0;
   683  000012  92F2               	bcf	242,1,c	;volatile
   684  000014  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   685  000016  0011               	retfie		f
   686  000018                     __end_of_first_int:
   687                           	opt callstack 0
   688  0000                     
   689                           	psect	rparam
   690  0000                     
   691                           	psect	temp
   692  00000C                     btemp:
   693                           	opt callstack 0
   694  00000C                     	ds	1
   695  0000                     int$flags	set	btemp
   696  0000                     wtemp8	set	btemp+1
   697  0000                     ttemp5	set	btemp+1
   698  0000                     ttemp6	set	btemp+4
   699  0000                     ttemp7	set	btemp+8
   700                           tosu	equ	0xFFF
   701                           tosh	equ	0xFFE
   702                           tosl	equ	0xFFD
   703                           stkptr	equ	0xFFC
   704                           pclatu	equ	0xFFB
   705                           pclath	equ	0xFFA
   706                           pcl	equ	0xFF9
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           indf0	equ	0xFEF
   714                           postinc0	equ	0xFEE
   715                           postdec0	equ	0xFED
   716                           preinc0	equ	0xFEC
   717                           plusw0	equ	0xFEB
   718                           fsr0h	equ	0xFEA
   719                           fsr0l	equ	0xFE9
   720                           wreg	equ	0xFE8
   721                           indf1	equ	0xFE7
   722                           postinc1	equ	0xFE6
   723                           postdec1	equ	0xFE5
   724                           preinc1	equ	0xFE4
   725                           plusw1	equ	0xFE3
   726                           fsr1h	equ	0xFE2
   727                           fsr1l	equ	0xFE1
   728                           bsr	equ	0xFE0
   729                           indf2	equ	0xFDF
   730                           postinc2	equ	0xFDE
   731                           postdec2	equ	0xFDD
   732                           preinc2	equ	0xFDC
   733                           plusw2	equ	0xFDB
   734                           fsr2h	equ	0xFDA
   735                           fsr2l	equ	0xFD9
   736                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _begin->_comando
    _comando->_busdata

Critical Paths under _first_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _first_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _first_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _first_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _first_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _first_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _first_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _first_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _first_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5      75
                                              2 COMRAM     7     2      5
                              _begin
                               _conf
                          _oscilador
 ---------------------------------------------------------------------------------
 (1) _oscilador                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0      75
                            _comando
 ---------------------------------------------------------------------------------
 (2) _comando                                              1     1      0      75
                                              1 COMRAM     1     1      0
                            _busdata
 ---------------------------------------------------------------------------------
 (3) _busdata                                              1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _first_int                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _begin
     _comando
       _busdata
   _conf
   _oscilador

 _first_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9       B       1       11.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B       6        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Oct 15 04:33:16 2020

                     l70 00B2                       l72 00C8                       l56 015C  
                     l74 00DE                       l82 012A                       l59 0166  
                     l76 00E0                       l68 009C                       l79 0142  
                     u10 0096                       u11 0092                       u20 00AC  
                     u21 00A8                       u30 00C2                       u31 00BE  
                     u40 00D8                       u41 00D4             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l801 00D8                      l803 012E  
                    l811 015E                      l805 0132                      l813 0152  
                    l807 0138                      l815 00E2                      l809 0140  
                    l791 009E                      l793 00AC                      l795 00B4  
                    l787 0088                      l971 0020                      l797 00C2  
                    l789 0096                      l981 0034                      l973 0026  
                    l799 00CA                      l991 0048                      l983 0036  
                    l975 002A                      l993 004C                      l985 0038  
                    l977 002E                      l969 001C                      l995 004E  
                    l987 003C                      l979 0032                      l997 0064  
                    l989 0040             __CFG_CPB$OFF 000000                      u157 0058  
                    u167 0072                      u177 013A             __CFG_CPD$OFF 000000  
                    wreg 000FE8                     i2l53 0014                     _conf 0152  
                   _cont 000A                     _main 001C                     btemp 000C  
          __CFG_BORV$190 000000                     start 0018            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_conf 0001  
                  ?_main 0003                    i2l861 000E                    i2l863 0012  
                  i2l859 000A                    _PORTA 000F80                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_comando 0144            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000                    _begin 00E2           __CFG_EBTRB$OFF 000000  
        __end_of_busdata 00E2                    ttemp5 000D                    ttemp6 0010  
                  ttemp7 0014           __CFG_T3CMX$RC0 000000                    wtemp8 000D  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 0144  
           __end_of_conf 015E             __end_of_main 0086           __CFG_PCLKEN$ON 000000  
                 ??_conf 0001                   ??_main 0008            __activetblptr 000000  
         __CFG_SDOMX$RB3 000000          __CFG_CCP2MX$RC1 000000                   ?_begin 0001  
                 _ANSELA 000F5B                   _ANSELB 000F5C                   _ANSELD 000F5E  
                 _ANSELE 000F5F           __CFG_WDTEN$OFF 000000                   _OSCCON 000FD3  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??_comando 0002  
              ??_busdata 0001     __CFG_LS48MHZ$SYS24X4 000000               __accesstop 0060  
__end_of__initialization 0148            ___rparam_used 000001           __pcstackCOMRAM 0001  
       __CFG_nPWRTEN$OFF 000000            __end_of_begin 012C                  ??_begin 0003  
     __size_of_first_int 0010        __CFG_PLLSEL$PLL4X 000000       __size_of_oscilador 000A  
                _OSCCON2 000FD2                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0144                  __ramtop 0800        __end_of_first_int 0018  
                __ptext0 001C                  __ptext1 015E                  __ptext2 0152  
                __ptext3 00E2                  __ptext4 012C                  __ptext5 0086  
                _comando 012C                  _busdata 0086     end_of_initialization 0148  
      __end_of_oscilador 0168                _PORTDbits 000F83                _PORTEbits 000F84  
              _TRISBbits 000F93      start_initialization 0144          __CFG_nLPBOR$OFF 000000  
            __pbssCOMRAM 000A                __pintcode 0008                 ?_comando 0001  
               ?_busdata 0001                _first_int 0008           __size_of_begin 004A  
              _oscilador 015E         __CFG_WDTPS$32768 000000               ?_first_int 0001  
      __CFG_CFGPLLEN$OFF 000000              _INTCON2bits 000FF1                 __Hrparam 0000  
             ?_oscilador 0001                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
             _ANSELBbits 000F5C         __size_of_comando 0018         __size_of_busdata 005C  
          __size_of_conf 000C            __size_of_main 006A                 int$flags 000C  
               comando@a 0002                 main@argc 0003                 main@argv 0005  
               busdata@a 0001               _INTCONbits 000FF2              ??_first_int 0001  
               intlevel2 0000              ??_oscilador 0001     __CFG_CPUDIV$NOCLKDIV 000000  
     __CFG_FOSC$INTOSCIO 000000  
