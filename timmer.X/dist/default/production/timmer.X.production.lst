

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Oct 24 02:38:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K50 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _ANSELDbits	set	3934
    51  0000                     _TMR0	set	4054
    52  0000                     _T0CONbits	set	4053
    53  0000                     _TRISDbits	set	3989
    54  0000                     _PORTDbits	set	3971
    55  0000                     _INTCONbits	set	4082
    56  0000                     _OSCCON2	set	4050
    57  0000                     _OSCCON	set	4051
    58                           
    59                           ; #config settings
    60  0000                     
    61                           	psect	cinit
    62  0000A4                     __pcinit:
    63                           	opt callstack 0
    64  0000A4                     start_initialization:
    65                           	opt callstack 0
    66  0000A4                     __initialization:
    67                           	opt callstack 0
    68                           
    69                           ; Clear objects allocated to COMRAM (2 bytes)
    70  0000A4  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    71  0000A6  6A07               	clrf	__pbssCOMRAM& (0+255),c
    72  0000A8                     end_of_initialization:
    73                           	opt callstack 0
    74  0000A8                     __end_of__initialization:
    75                           	opt callstack 0
    76  0000A8  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    77  0000AA  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    78  0000AC  0100               	movlb	0
    79  0000AE  EF4A  F000         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	bssCOMRAM
    82  000007                     __pbssCOMRAM:
    83                           	opt callstack 0
    84  000007                     _cont:
    85                           	opt callstack 0
    86  000007                     	ds	2
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	opt callstack 0
    91  000001                     ??_TMR_0:
    92                           
    93                           ; 1 bytes @ 0x0
    94  000001                     	ds	1
    95  000002                     
    96                           ; 2 bytes @ 0x1
    97  000002                     	ds	2
    98  000004                     
    99                           ; 3 bytes @ 0x3
   100  000004                     	ds	3
   101  000007                     
   102                           ; 1 bytes @ 0x6
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 19 in file "main.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;  argc            2    1[COMRAM] int 
   111 ;;  argv            3    3[COMRAM] PTR PTR unsigned char 
   112 ;; Auto vars:     Size  Location     Type
   113 ;;		None
   114 ;; Return value:  Size  Location     Type
   115 ;;                  2    1[COMRAM] int 
   116 ;; Registers used:
   117 ;;		wreg, status,2, cstack
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   123 ;;      Params:         5       0       0       0       0       0       0       0       0
   124 ;;      Locals:         0       0       0       0       0       0       0       0       0
   125 ;;      Temps:          0       0       0       0       0       0       0       0       0
   126 ;;      Totals:         5       0       0       0       0       0       0       0       0
   127 ;;Total ram usage:        5 bytes
   128 ;; Hardware stack levels required when called:    2
   129 ;; This function calls:
   130 ;;		_Registros
   131 ;;		_oscilador
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138  000094                     __ptext0:
   139                           	opt callstack 0
   140  000094                     _main:
   141                           	opt callstack 29
   142  000094                     
   143                           ;main.c: 20:     oscilador();
   144  000094  EC59  F000         	call	_oscilador	;wreg free
   145                           
   146                           ;main.c: 21:     Registros();
   147  000098  EC35  F000         	call	_Registros	;wreg free
   148  00009C                     l27:
   149  00009C  EF4E  F000         	goto	l27
   150  0000A0  EF33  F000         	goto	start
   151  0000A4                     __end_of_main:
   152                           	opt callstack 0
   153                           
   154 ;; *************** function _oscilador *****************
   155 ;; Defined at:
   156 ;;		line 28 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, status,2
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   170 ;;      Params:         0       0       0       0       0       0       0       0       0
   171 ;;      Locals:         0       0       0       0       0       0       0       0       0
   172 ;;      Temps:          0       0       0       0       0       0       0       0       0
   173 ;;      Totals:         0       0       0       0       0       0       0       0       0
   174 ;;Total ram usage:        0 bytes
   175 ;; Hardware stack levels used:    1
   176 ;; Hardware stack levels required when called:    1
   177 ;; This function calls:
   178 ;;		Nothing
   179 ;; This function is called by:
   180 ;;		_main
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text1
   185  0000B2                     __ptext1:
   186                           	opt callstack 0
   187  0000B2                     _oscilador:
   188                           	opt callstack 29
   189  0000B2                     
   190                           ;main.c: 29:     OSCCON=0x40;
   191  0000B2  0E40               	movlw	64
   192  0000B4  6ED3               	movwf	211,c	;volatile
   193                           
   194                           ;main.c: 30:     OSCCON2=0x00;
   195  0000B6  0E00               	movlw	0
   196  0000B8  6ED2               	movwf	210,c	;volatile
   197  0000BA  0012               	return		;funcret
   198  0000BC                     __end_of_oscilador:
   199                           	opt callstack 0
   200                           
   201 ;; *************** function _Registros *****************
   202 ;; Defined at:
   203 ;;		line 44 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;		None
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, status,2
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         0       0       0       0       0       0       0       0       0
   219 ;;      Temps:          0       0       0       0       0       0       0       0       0
   220 ;;      Totals:         0       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        0 bytes
   222 ;; Hardware stack levels used:    1
   223 ;; Hardware stack levels required when called:    1
   224 ;; This function calls:
   225 ;;		Nothing
   226 ;; This function is called by:
   227 ;;		_main
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text2
   232  00006A                     __ptext2:
   233                           	opt callstack 0
   234  00006A                     _Registros:
   235                           	opt callstack 29
   236  00006A                     
   237                           ;main.c: 45:     ANSELDbits.ANSD0=0;
   238  00006A  010F               	movlb	15	; () banked
   239  00006C  915E               	bcf	94,0,b	;volatile
   240                           
   241                           ;main.c: 46:     TRISDbits.RD0=0;
   242  00006E  9095               	bcf	149,0,c	;volatile
   243                           
   244                           ;main.c: 47:     PORTDbits.RD0=0;
   245  000070  9083               	bcf	131,0,c	;volatile
   246                           
   247                           ;main.c: 50:     INTCONbits.GIE=1;
   248  000072  8EF2               	bsf	242,7,c	;volatile
   249                           
   250                           ;main.c: 51:     INTCONbits.TMR0IF=0;
   251  000074  94F2               	bcf	242,2,c	;volatile
   252                           
   253                           ;main.c: 52:     INTCONbits.TMR0IE=1;
   254  000076  8AF2               	bsf	242,5,c	;volatile
   255                           
   256                           ;main.c: 54:     T0CONbits.T08BIT=1;
   257  000078  8CD5               	bsf	213,6,c	;volatile
   258                           
   259                           ;main.c: 55:     T0CONbits.T0CS=0;
   260  00007A  9AD5               	bcf	213,5,c	;volatile
   261                           
   262                           ;main.c: 56:     T0CONbits.T0SE=0;
   263  00007C  98D5               	bcf	213,4,c	;volatile
   264                           
   265                           ;main.c: 57:     T0CONbits.PSA=0;
   266  00007E  96D5               	bcf	213,3,c	;volatile
   267  000080                     
   268                           ; BSR set to: 15
   269                           ;main.c: 58:     T0CONbits.T0PS=0b001;
   270  000080  50D5               	movf	213,w,c	;volatile
   271  000082  0BF8               	andlw	-8
   272  000084  0901               	iorlw	1
   273  000086  6ED5               	movwf	213,c	;volatile
   274  000088                     
   275                           ; BSR set to: 15
   276                           ;main.c: 59:     T0CONbits.TMR0ON=1;
   277  000088  8ED5               	bsf	213,7,c	;volatile
   278                           
   279                           ;main.c: 61:     TMR0=130;
   280  00008A  0E00               	movlw	0
   281  00008C  6ED7               	movwf	215,c	;volatile
   282  00008E  0E82               	movlw	130
   283  000090  6ED6               	movwf	214,c	;volatile
   284  000092                     
   285                           ; BSR set to: 15
   286  000092  0012               	return		;funcret
   287  000094                     __end_of_Registros:
   288                           	opt callstack 0
   289                           
   290 ;; *************** function _TMR_0 *****************
   291 ;; Defined at:
   292 ;;		line 33 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2, status,0
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   306 ;;      Params:         0       0       0       0       0       0       0       0       0
   307 ;;      Locals:         0       0       0       0       0       0       0       0       0
   308 ;;      Temps:          1       0       0       0       0       0       0       0       0
   309 ;;      Totals:         1       0       0       0       0       0       0       0       0
   310 ;;Total ram usage:        1 bytes
   311 ;; Hardware stack levels used:    1
   312 ;; This function calls:
   313 ;;		Nothing
   314 ;; This function is called by:
   315 ;;		Interrupt level 2
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           	psect	intcode
   320  000008                     __pintcode:
   321                           	opt callstack 0
   322  000008                     _TMR_0:
   323                           	opt callstack 29
   324                           
   325                           ; BSR set to: 15
   326                           ;incstack = 0
   327  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   328  00000A                     
   329                           ;main.c: 34:     if(INTCONbits.TMR0IF==1){
   330  00000A  A4F2               	btfss	242,2,c	;volatile
   331  00000C  EF0A  F000         	goto	i2u1_41
   332  000010  EF0C  F000         	goto	i2u1_40
   333  000014                     i2u1_41:
   334  000014  EF31  F000         	goto	i2l40
   335  000018                     i2u1_40:
   336  000018                     
   337                           ;main.c: 35:     INTCONbits.TMR0IF=0;
   338  000018  94F2               	bcf	242,2,c	;volatile
   339  00001A                     
   340                           ;main.c: 36:     cont++;
   341  00001A  4A07               	infsnz	_cont^0,f,c
   342  00001C  2A08               	incf	(_cont+1)^0,f,c
   343  00001E                     
   344                           ;main.c: 37:     if(cont==10){
   345  00001E  0E0A               	movlw	10
   346  000020  1807               	xorwf	_cont^0,w,c
   347  000022  1008               	iorwf	(_cont+1)^0,w,c
   348  000024  A4D8               	btfss	status,2,c
   349  000026  EF17  F000         	goto	i2u2_41
   350  00002A  EF19  F000         	goto	i2u2_40
   351  00002E                     i2u2_41:
   352  00002E  EF2D  F000         	goto	i2l741
   353  000032                     i2u2_40:
   354  000032                     
   355                           ;main.c: 38:         cont=0;
   356  000032  0E00               	movlw	0
   357  000034  6E08               	movwf	(_cont+1)^0,c
   358  000036  0E00               	movlw	0
   359  000038  6E07               	movwf	_cont^0,c
   360  00003A                     
   361                           ;main.c: 39:         PORTDbits.RD0=~PORTDbits.RD0;
   362  00003A  B083               	btfsc	131,0,c	;volatile
   363  00003C  EF22  F000         	goto	i2u3_41
   364  000040  EF25  F000         	goto	i2u3_40
   365  000044                     i2u3_41:
   366  000044  0E01               	movlw	1
   367  000046  EF26  F000         	goto	i2u3_46
   368  00004A                     i2u3_40:
   369  00004A  0E00               	movlw	0
   370  00004C                     i2u3_46:
   371  00004C  0AFF               	xorlw	255
   372  00004E  6E01               	movwf	??_TMR_0^0,c
   373  000050  5083               	movf	131,w,c	;volatile
   374  000052  1801               	xorwf	??_TMR_0^0,w,c
   375  000054  0BFE               	andlw	-2
   376  000056  1801               	xorwf	??_TMR_0^0,w,c
   377  000058  6E83               	movwf	131,c	;volatile
   378  00005A                     i2l741:
   379                           
   380                           ;main.c: 41:     TMR0=131;
   381  00005A  0E00               	movlw	0
   382  00005C  6ED7               	movwf	215,c	;volatile
   383  00005E  0E83               	movlw	131
   384  000060  6ED6               	movwf	214,c	;volatile
   385  000062                     i2l40:
   386  000062  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   387  000064  0011               	retfie		f
   388  000066                     __end_of_TMR_0:
   389                           	opt callstack 0
   390  0000                     
   391                           	psect	rparam
   392  0000                     
   393                           	psect	temp
   394  000009                     btemp:
   395                           	opt callstack 0
   396  000009                     	ds	1
   397  0000                     int$flags	set	btemp
   398  0000                     wtemp8	set	btemp+1
   399  0000                     ttemp5	set	btemp+1
   400  0000                     ttemp6	set	btemp+4
   401  0000                     ttemp7	set	btemp+8
   402                           tosu	equ	0xFFF
   403                           tosh	equ	0xFFE
   404                           tosl	equ	0xFFD
   405                           stkptr	equ	0xFFC
   406                           pclatu	equ	0xFFB
   407                           pclath	equ	0xFFA
   408                           pcl	equ	0xFF9
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           prodh	equ	0xFF4
   414                           prodl	equ	0xFF3
   415                           indf0	equ	0xFEF
   416                           postinc0	equ	0xFEE
   417                           postdec0	equ	0xFED
   418                           preinc0	equ	0xFEC
   419                           plusw0	equ	0xFEB
   420                           fsr0h	equ	0xFEA
   421                           fsr0l	equ	0xFE9
   422                           wreg	equ	0xFE8
   423                           indf1	equ	0xFE7
   424                           postinc1	equ	0xFE6
   425                           postdec1	equ	0xFE5
   426                           preinc1	equ	0xFE4
   427                           plusw1	equ	0xFE3
   428                           fsr1h	equ	0xFE2
   429                           fsr1l	equ	0xFE1
   430                           bsr	equ	0xFE0
   431                           indf2	equ	0xFDF
   432                           postinc2	equ	0xFDE
   433                           postdec2	equ	0xFDD
   434                           preinc2	equ	0xFDC
   435                           plusw2	equ	0xFDB
   436                           fsr2h	equ	0xFDA
   437                           fsr2l	equ	0xFD9
   438                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR_0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5       0
                                              1 COMRAM     5     0      5
                          _Registros
                          _oscilador
 ---------------------------------------------------------------------------------
 (1) _oscilador                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Registros                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _TMR_0                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Registros
   _oscilador

 _TMR_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6       8       1        8.5%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8       6        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Oct 24 02:38:48 2020

                     l33 00BA                       l43 0092                       l27 009C  
                     l28 009C             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l721 006A                      l723 0080                      l725 0088  
                    l719 00B2                      l743 0094             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                     i2l40 0062                     _TMR0 000FD6  
                   _cont 0007                     _main 0094                     btemp 0009  
          __CFG_BORV$190 000000                     start 0066            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0002  
                  i2l731 0018                    i2l741 005A                    i2l733 001A  
                  i2l735 001E                    i2l737 0032                    i2l729 000A  
                  i2l739 003A                    _TMR_0 0008            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  ttemp5 000A                    ttemp6 000D                    ttemp7 0011  
                  status 000FD8           __CFG_T3CMX$RC0 000000                    wtemp8 000A  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 00A4  
           __end_of_main 00A4           __CFG_PCLKEN$ON 000000                   ??_main 0007  
          __activetblptr 000000                   ?_TMR_0 0001           __CFG_SDOMX$RB3 000000  
        __CFG_CCP2MX$RC1 000000           __CFG_WDTEN$OFF 000000                   _OSCCON 000FD3  
                 i2u1_40 0018                   i2u1_41 0014                   i2u2_40 0032  
                 i2u2_41 002E                   i2u3_40 004A                   i2u3_41 0044  
                 i2u3_46 004C           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
     __size_of_Registros 002A     __CFG_LS48MHZ$SYS24X4 000000               __accesstop 0060  
__end_of__initialization 00A8            ___rparam_used 000001            __end_of_TMR_0 0066  
         __pcstackCOMRAM 0001         __CFG_nPWRTEN$OFF 000000                  ??_TMR_0 0001  
      __end_of_Registros 0094        __CFG_PLLSEL$PLL4X 000000       __size_of_oscilador 000A  
                _OSCCON2 000FD2                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00A4                  __ramtop 0800                  __ptext0 0094  
                __ptext1 00B2                  __ptext2 006A                _T0CONbits 000FD5  
   end_of_initialization 00A8        __end_of_oscilador 00BC                _PORTDbits 000F83  
              _TRISDbits 000F95      start_initialization 00A4          __CFG_nLPBOR$OFF 000000  
              _Registros 006A              __pbssCOMRAM 0007               ?_Registros 0001  
              __pintcode 0008           __size_of_TMR_0 005E                _oscilador 00B2  
       __CFG_WDTPS$32768 000000        __CFG_CFGPLLEN$OFF 000000              ??_Registros 0002  
               __Hrparam 0000               ?_oscilador 0001                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000               _ANSELDbits 000F5E            __size_of_main 0010  
               int$flags 0009                 main@argc 0002                 main@argv 0004  
             _INTCONbits 000FF2                 intlevel2 0000              ??_oscilador 0002  
   __CFG_CPUDIV$NOCLKDIV 000000       __CFG_FOSC$INTOSCIO 000000  
