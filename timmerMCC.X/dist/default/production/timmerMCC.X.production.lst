

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Oct 24 19:10:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 2.10
    62                           ; Generated 31/07/2019 GMT
    63                           ; 
    64                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F45K50 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	nvCOMRAM
    97  000054                     __pnvCOMRAM:
    98                           	opt callstack 0
    99  000054                     _timer0ReloadVal:
   100                           	opt callstack 0
   101  000054                     	ds	2
   102                           
   103                           	psect	nvBANK0
   104  0000B8                     __pnvBANK0:
   105                           	opt callstack 0
   106  0000B8                     _TMR0_InterruptHandler:
   107                           	opt callstack 0
   108  0000B8                     	ds	2
   109  0000BA                     _INT2_InterruptHandler:
   110                           	opt callstack 0
   111  0000BA                     	ds	2
   112  0000BC                     _INT1_InterruptHandler:
   113                           	opt callstack 0
   114  0000BC                     	ds	2
   115  0000                     _ANSELA	set	3931
   116  0000                     _ANSELE	set	3935
   117  0000                     _ANSELB	set	3932
   118  0000                     _ANSELC	set	3933
   119  0000                     _ANSELD	set	3934
   120  0000                     _PORTEbits	set	3972
   121  0000                     _OSCCON2	set	4050
   122  0000                     _OSCCON	set	4051
   123  0000                     _T0CON	set	4053
   124  0000                     _TMR0L	set	4054
   125  0000                     _TMR0H	set	4055
   126  0000                     _T0CONbits	set	4053
   127  0000                     _PORTDbits	set	3971
   128  0000                     _INTCON3bits	set	4080
   129  0000                     _RCONbits	set	4048
   130  0000                     _INTCONbits	set	4082
   131  0000                     _INTCON2bits	set	4081
   132  0000                     _WPUB	set	3973
   133  0000                     _TRISD	set	3989
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _TRISE	set	3990
   138  0000                     _LATC	set	3979
   139  0000                     _LATB	set	3978
   140  0000                     _LATA	set	3977
   141  0000                     _LATD	set	3980
   142  0000                     _LATE	set	3981
   143                           
   144                           	psect	smallconst
   145  000800                     __psmallconst:
   146                           	opt callstack 0
   147  000800  00                 	db	0
   148  000801                     STR_1:
   149  000801  66                 	db	102	;'f'
   150  000802  75                 	db	117	;'u'
   151  000803  6E                 	db	110	;'n'
   152  000804  63                 	db	99	;'c'
   153  000805  69                 	db	105	;'i'
   154  000806  6F                 	db	111	;'o'
   155  000807  6E                 	db	110	;'n'
   156  000808  61                 	db	97	;'a'
   157  000809  6E                 	db	110	;'n'
   158  00080A  64                 	db	100	;'d'
   159  00080B  6F                 	db	111	;'o'
   160  00080C  00                 	db	0
   161  00080D                     STR_2:
   162  00080D  25                 	db	37
   163  00080E  30                 	db	48	;'0'
   164  00080F  32                 	db	50	;'2'
   165  000810  75                 	db	117	;'u'
   166  000811  00                 	db	0
   167  000812                     STR_5:
   168  000812  3A                 	db	58	;':'
   169  000813  00                 	db	0
   170  0000                     
   171                           ; #config settings
   172  000814  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           	psect	cinit
   175  0018E8                     __pcinit:
   176                           	opt callstack 0
   177  0018E8                     start_initialization:
   178                           	opt callstack 0
   179  0018E8                     __initialization:
   180                           	opt callstack 0
   181                           
   182                           ; Clear objects allocated to BANK0 (52 bytes)
   183  0018E8  EE00  F060         	lfsr	0,__pbssBANK0
   184  0018EC  0E34               	movlw	52
   185  0018EE                     clear_0:
   186  0018EE  6AEE               	clrf	postinc0,c
   187  0018F0  06E8               	decf	wreg,f,c
   188  0018F2  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to COMRAM (6 bytes)
   191  0018F4  6A53               	clrf	(__pbssCOMRAM+5)& (0+255),c
   192  0018F6  6A52               	clrf	(__pbssCOMRAM+4)& (0+255),c
   193  0018F8  6A51               	clrf	(__pbssCOMRAM+3)& (0+255),c
   194  0018FA  6A50               	clrf	(__pbssCOMRAM+2)& (0+255),c
   195  0018FC  6A4F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   196  0018FE  6A4E               	clrf	__pbssCOMRAM& (0+255),c
   197  001900                     end_of_initialization:
   198                           	opt callstack 0
   199  001900                     __end_of__initialization:
   200                           	opt callstack 0
   201  001900  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   202  001902  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   203  001904  0E00               	movlw	low (__Lmediumconst shr (0+16))
   204  001906  6EF8               	movwf	tblptru,c
   205  001908  0100               	movlb	0
   206  00190A  EF7D  F008         	goto	_main	;jump to C main() function
   207                           
   208                           	psect	bssCOMRAM
   209  00004E                     __pbssCOMRAM:
   210                           	opt callstack 0
   211  00004E                     _width:
   212                           	opt callstack 0
   213  00004E                     	ds	2
   214  000050                     _prec:
   215                           	opt callstack 0
   216  000050                     	ds	2
   217  000052                     _flags:
   218                           	opt callstack 0
   219  000052                     	ds	2
   220                           
   221                           	psect	bssBANK0
   222  000060                     __pbssBANK0:
   223                           	opt callstack 0
   224  000060                     _nout:
   225                           	opt callstack 0
   226  000060                     	ds	2
   227  000062                     _cont2:
   228                           	opt callstack 0
   229  000062                     	ds	2
   230  000064                     _cont1:
   231                           	opt callstack 0
   232  000064                     	ds	2
   233  000066                     _cont:
   234                           	opt callstack 0
   235  000066                     	ds	2
   236  000068                     _dbuf:
   237                           	opt callstack 0
   238  000068                     	ds	32
   239  000088                     _horas:
   240                           	opt callstack 0
   241  000088                     	ds	4
   242  00008C                     _minut:
   243                           	opt callstack 0
   244  00008C                     	ds	4
   245  000090                     _segun:
   246                           	opt callstack 0
   247  000090                     	ds	4
   248                           
   249                           	psect	cstackBANK0
   250  000094                     __pcstackBANK0:
   251                           	opt callstack 0
   252  000094                     vfpfcnvrt@llu:
   253                           	opt callstack 0
   254                           
   255                           ; 8 bytes @ 0x0
   256  000094                     	ds	8
   257  00009C                     vfpfcnvrt@done:
   258                           	opt callstack 0
   259                           
   260                           ; 2 bytes @ 0x8
   261  00009C                     	ds	2
   262  00009E                     _vfpfcnvrt$871:
   263                           	opt callstack 0
   264                           
   265                           ; 2 bytes @ 0xA
   266  00009E                     	ds	2
   267  0000A0                     ?_vfprintf:
   268                           	opt callstack 0
   269  0000A0                     vfprintf@fp:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0xC
   273  0000A0                     	ds	2
   274  0000A2                     vfprintf@fmt:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0xE
   278  0000A2                     	ds	2
   279  0000A4                     vfprintf@ap:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0x10
   283  0000A4                     	ds	2
   284  0000A6                     vfprintf@cfmt:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x12
   288  0000A6                     	ds	2
   289  0000A8                     ?_sprintf:
   290                           	opt callstack 0
   291  0000A8                     sprintf@s:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0x14
   295  0000A8                     	ds	2
   296  0000AA                     sprintf@fmt:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x16
   300  0000AA                     	ds	6
   301  0000B0                     sprintf@ap:
   302                           	opt callstack 0
   303                           
   304                           ; 2 bytes @ 0x1C
   305  0000B0                     	ds	2
   306  0000B2                     sprintf@f:
   307                           	opt callstack 0
   308                           
   309                           ; 6 bytes @ 0x1E
   310  0000B2                     	ds	6
   311                           
   312                           	psect	cstackCOMRAM
   313  000001                     __pcstackCOMRAM:
   314                           	opt callstack 0
   315  000001                     ??_INTERRUPT_InterruptManagerHigh:
   316  000001                     
   317                           ; 1 bytes @ 0x0
   318  000001                     	ds	3
   319  000004                     ??_INTERRUPT_InterruptManagerLow:
   320  000004                     
   321                           ; 1 bytes @ 0x3
   322  000004                     	ds	5
   323  000009                     ?_strlen:
   324                           	opt callstack 0
   325  000009                     ?_isdigit:
   326                           	opt callstack 0
   327  000009                     ?_isspace:
   328                           	opt callstack 0
   329  000009                     ?___wmul:
   330                           	opt callstack 0
   331  000009                     ?___lodiv:
   332                           	opt callstack 0
   333  000009                     ?___lomod:
   334                           	opt callstack 0
   335  000009                     busdata@a:
   336                           	opt callstack 0
   337  000009                     INT1_SetInterruptHandler@InterruptHandler:
   338                           	opt callstack 0
   339  000009                     INT2_SetInterruptHandler@InterruptHandler:
   340                           	opt callstack 0
   341  000009                     TMR0_SetInterruptHandler@InterruptHandler:
   342                           	opt callstack 0
   343  000009                     ___wmul@multiplier:
   344                           	opt callstack 0
   345  000009                     isdigit@c:
   346                           	opt callstack 0
   347  000009                     isspace@c:
   348                           	opt callstack 0
   349  000009                     fputc@c:
   350                           	opt callstack 0
   351  000009                     strlen@s:
   352                           	opt callstack 0
   353  000009                     ___lodiv@dividend:
   354                           	opt callstack 0
   355  000009                     ___lomod@dividend:
   356                           	opt callstack 0
   357                           
   358                           ; 8 bytes @ 0x8
   359  000009                     	ds	1
   360  00000A                     comando@a:
   361                           	opt callstack 0
   362                           
   363                           ; 1 bytes @ 0x9
   364  00000A                     	ds	1
   365  00000B                     ??_isdigit:
   366  00000B                     ??_isspace:
   367  00000B                     ??_TMR0_Initialize:
   368  00000B                     setCursor@y:
   369                           	opt callstack 0
   370  00000B                     caracter@m:
   371                           	opt callstack 0
   372  00000B                     ___wmul@multiplicand:
   373                           	opt callstack 0
   374  00000B                     fputc@fp:
   375                           	opt callstack 0
   376  00000B                     strlen@a:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0xA
   380  00000B                     	ds	1
   381  00000C                     ??_setCursor:
   382  00000C                     caracter@n:
   383                           	opt callstack 0
   384                           
   385                           ; 1 bytes @ 0xB
   386  00000C                     	ds	1
   387  00000D                     ??_fputc:
   388  00000D                     caracter@a:
   389                           	opt callstack 0
   390  00000D                     ___wmul@product:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0xC
   394  00000D                     	ds	1
   395  00000E                     print@a:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0xD
   399  00000E                     	ds	1
   400  00000F                     setCursor@m:
   401                           	opt callstack 0
   402  00000F                     _isspace$1344:
   403                           	opt callstack 0
   404                           
   405                           ; 1 bytes @ 0xE
   406  00000F                     	ds	1
   407  000010                     ??_print:
   408  000010                     ?_atoi:
   409                           	opt callstack 0
   410  000010                     setCursor@n:
   411                           	opt callstack 0
   412  000010                     atoi@s:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0xF
   416  000010                     	ds	1
   417  000011                     setCursor@x:
   418                           	opt callstack 0
   419  000011                     ___lodiv@divisor:
   420                           	opt callstack 0
   421  000011                     ___lomod@divisor:
   422                           	opt callstack 0
   423                           
   424                           ; 8 bytes @ 0x10
   425  000011                     	ds	1
   426  000012                     ??_atoi:
   427  000012                     print@k:
   428                           	opt callstack 0
   429  000012                     fputs@s:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x11
   433  000012                     	ds	2
   434  000014                     fputs@fp:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x13
   438  000014                     	ds	2
   439  000016                     fputs@c:
   440                           	opt callstack 0
   441  000016                     atoi@neg:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x15
   445  000016                     	ds	1
   446  000017                     fputs@i:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x16
   450  000017                     	ds	1
   451  000018                     _atoi$1326:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x17
   455  000018                     	ds	1
   456  000019                     ?_pad:
   457                           	opt callstack 0
   458  000019                     ___lomod@counter:
   459                           	opt callstack 0
   460  000019                     pad@fp:
   461                           	opt callstack 0
   462  000019                     ___lodiv@quotient:
   463                           	opt callstack 0
   464                           
   465                           ; 8 bytes @ 0x18
   466  000019                     	ds	1
   467  00001A                     _atoi$1328:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x19
   471  00001A                     	ds	1
   472  00001B                     pad@buf:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x1A
   476  00001B                     	ds	1
   477  00001C                     _atoi$1327:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0x1B
   481  00001C                     	ds	1
   482  00001D                     pad@p:
   483                           	opt callstack 0
   484  00001D                     atoi@n:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x1C
   488  00001D                     	ds	2
   489  00001F                     ??_pad:
   490                           
   491                           ; 1 bytes @ 0x1E
   492  00001F                     	ds	1
   493  000020                     pad@i:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x1F
   497  000020                     	ds	1
   498  000021                     ___lodiv@counter:
   499                           	opt callstack 0
   500                           
   501                           ; 1 bytes @ 0x20
   502  000021                     	ds	1
   503  000022                     pad@w:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x21
   507  000022                     	ds	2
   508  000024                     ?_utoa:
   509                           	opt callstack 0
   510  000024                     utoa@fp:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x23
   514  000024                     	ds	2
   515  000026                     utoa@d:
   516                           	opt callstack 0
   517                           
   518                           ; 8 bytes @ 0x25
   519  000026                     	ds	8
   520  00002E                     ??_utoa:
   521                           
   522                           ; 1 bytes @ 0x2D
   523  00002E                     	ds	8
   524  000036                     utoa@p:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x35
   528  000036                     	ds	2
   529  000038                     utoa@w:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x37
   533  000038                     	ds	2
   534  00003A                     utoa@n:
   535                           	opt callstack 0
   536                           
   537                           ; 8 bytes @ 0x39
   538  00003A                     	ds	8
   539  000042                     utoa@i:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x41
   543  000042                     	ds	2
   544  000044                     ?_vfpfcnvrt:
   545                           	opt callstack 0
   546  000044                     vfpfcnvrt@fp:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x43
   550  000044                     	ds	2
   551  000046                     vfpfcnvrt@fmt:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x45
   555  000046                     	ds	2
   556  000048                     vfpfcnvrt@ap:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x47
   560  000048                     	ds	2
   561  00004A                     ??_vfpfcnvrt:
   562                           
   563                           ; 1 bytes @ 0x49
   564  00004A                     	ds	4
   565  00004E                     
   566                           ; 1 bytes @ 0x4D
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 6 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   586 ;;      Params:         0       0       0       0       0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0
   589 ;;      Totals:         0       0       0       0       0       0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels required when called:   15
   592 ;; This function calls:
   593 ;;		_SYSTEM_Initialize
   594 ;;		_begin
   595 ;;		_ocultarcursor
   596 ;;		_print
   597 ;;		_setCursor
   598 ;;		_sprintf
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605  0010FA                     __ptext0:
   606                           	opt callstack 0
   607  0010FA                     _main:
   608                           	opt callstack 16
   609  0010FA                     
   610                           ;main.c: 9:     SYSTEM_Initialize();
   611  0010FA  ECC8  F00C         	call	_SYSTEM_Initialize	;wreg free
   612  0010FE                     
   613                           ;main.c: 11:     (INTCONbits.GIEH = 1);
   614  0010FE  8EF2               	bsf	242,7,c	;volatile
   615  001100                     
   616                           ;main.c: 12:     (INTCONbits.GIEL = 1);
   617  001100  8CF2               	bsf	242,6,c	;volatile
   618  001102                     
   619                           ;main.c: 13:     (INTCONbits.PEIE = 1);
   620  001102  8CF2               	bsf	242,6,c	;volatile
   621  001104                     
   622                           ;main.c: 14:     begin();
   623  001104  EC6D  F00B         	call	_begin	;wreg free
   624  001108                     
   625                           ;main.c: 15:     ocultarcursor();
   626  001108  ECD3  F00C         	call	_ocultarcursor	;wreg free
   627  00110C                     
   628                           ;main.c: 16:     print("funcionando");
   629  00110C  0E01               	movlw	low STR_1
   630  00110E  6E0E               	movwf	print@a^0,c
   631  001110  0E08               	movlw	high STR_1
   632  001112  6E0F               	movwf	(print@a+1)^0,c
   633  001114  EC7D  F00A         	call	_print	;wreg free
   634  001118                     l2957:
   635                           
   636                           ;main.c: 20:     {;main.c: 21:         sprintf(segun,"%02u",cont);
   637  001118  0E90               	movlw	low _segun
   638  00111A  0100               	movlb	0	; () banked
   639  00111C  6FA8               	movwf	sprintf@s& (0+255),b
   640  00111E  0E00               	movlw	high _segun
   641  001120  6FA9               	movwf	(sprintf@s+1)& (0+255),b
   642  001122  0E0D               	movlw	low STR_2
   643  001124  6FAA               	movwf	sprintf@fmt& (0+255),b
   644  001126  0E08               	movlw	high STR_2
   645  001128  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
   646  00112A  C066  F0AC         	movff	_cont,?_sprintf+4
   647  00112E  C067  F0AD         	movff	_cont+1,?_sprintf+5
   648  001132  EC1B  F00B         	call	_sprintf	;wreg free
   649  001136                     
   650                           ;main.c: 22:         sprintf(minut,"%02u",cont1);
   651  001136  0E8C               	movlw	low _minut
   652  001138  0100               	movlb	0	; () banked
   653  00113A  6FA8               	movwf	sprintf@s& (0+255),b
   654  00113C  0E00               	movlw	high _minut
   655  00113E  6FA9               	movwf	(sprintf@s+1)& (0+255),b
   656  001140  0E0D               	movlw	low STR_2
   657  001142  6FAA               	movwf	sprintf@fmt& (0+255),b
   658  001144  0E08               	movlw	high STR_2
   659  001146  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
   660  001148  C064  F0AC         	movff	_cont1,?_sprintf+4
   661  00114C  C065  F0AD         	movff	_cont1+1,?_sprintf+5
   662  001150  EC1B  F00B         	call	_sprintf	;wreg free
   663  001154                     
   664                           ;main.c: 23:         sprintf(horas,"%02u",cont2);
   665  001154  0E88               	movlw	low _horas
   666  001156  0100               	movlb	0	; () banked
   667  001158  6FA8               	movwf	sprintf@s& (0+255),b
   668  00115A  0E00               	movlw	high _horas
   669  00115C  6FA9               	movwf	(sprintf@s+1)& (0+255),b
   670  00115E  0E0D               	movlw	low STR_2
   671  001160  6FAA               	movwf	sprintf@fmt& (0+255),b
   672  001162  0E08               	movlw	high STR_2
   673  001164  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
   674  001166  C062  F0AC         	movff	_cont2,?_sprintf+4
   675  00116A  C063  F0AD         	movff	_cont2+1,?_sprintf+5
   676  00116E  EC1B  F00B         	call	_sprintf	;wreg free
   677  001172                     
   678                           ;main.c: 25:         setCursor(7,2);
   679  001172  0E02               	movlw	2
   680  001174  6E0B               	movwf	setCursor@y^0,c
   681  001176  0E07               	movlw	7
   682  001178  EC78  F007         	call	_setCursor
   683  00117C                     
   684                           ;main.c: 26:         print(horas);
   685  00117C  0E88               	movlw	low _horas
   686  00117E  6E0E               	movwf	print@a^0,c
   687  001180  0E00               	movlw	high _horas
   688  001182  6E0F               	movwf	(print@a+1)^0,c
   689  001184  EC7D  F00A         	call	_print	;wreg free
   690  001188                     
   691                           ;main.c: 27:         setCursor(10,2);
   692  001188  0E02               	movlw	2
   693  00118A  6E0B               	movwf	setCursor@y^0,c
   694  00118C  0E0A               	movlw	10
   695  00118E  EC78  F007         	call	_setCursor
   696  001192                     
   697                           ;main.c: 28:         print(minut);
   698  001192  0E8C               	movlw	low _minut
   699  001194  6E0E               	movwf	print@a^0,c
   700  001196  0E00               	movlw	high _minut
   701  001198  6E0F               	movwf	(print@a+1)^0,c
   702  00119A  EC7D  F00A         	call	_print	;wreg free
   703  00119E                     
   704                           ;main.c: 29:         setCursor(13,2);
   705  00119E  0E02               	movlw	2
   706  0011A0  6E0B               	movwf	setCursor@y^0,c
   707  0011A2  0E0D               	movlw	13
   708  0011A4  EC78  F007         	call	_setCursor
   709  0011A8                     
   710                           ;main.c: 30:         print(segun);
   711  0011A8  0E90               	movlw	low _segun
   712  0011AA  6E0E               	movwf	print@a^0,c
   713  0011AC  0E00               	movlw	high _segun
   714  0011AE  6E0F               	movwf	(print@a+1)^0,c
   715  0011B0  EC7D  F00A         	call	_print	;wreg free
   716  0011B4                     
   717                           ;main.c: 31:         setCursor(9,2);
   718  0011B4  0E02               	movlw	2
   719  0011B6  6E0B               	movwf	setCursor@y^0,c
   720  0011B8  0E09               	movlw	9
   721  0011BA  EC78  F007         	call	_setCursor
   722  0011BE                     
   723                           ;main.c: 32:         print(":");
   724  0011BE  0E12               	movlw	low STR_5
   725  0011C0  6E0E               	movwf	print@a^0,c
   726  0011C2  0E08               	movlw	high STR_5
   727  0011C4  6E0F               	movwf	(print@a+1)^0,c
   728  0011C6  EC7D  F00A         	call	_print	;wreg free
   729  0011CA                     
   730                           ;main.c: 33:         setCursor(12,2);
   731  0011CA  0E02               	movlw	2
   732  0011CC  6E0B               	movwf	setCursor@y^0,c
   733  0011CE  0E0C               	movlw	12
   734  0011D0  EC78  F007         	call	_setCursor
   735  0011D4                     
   736                           ;main.c: 34:         print(":");
   737  0011D4  0E12               	movlw	low STR_5
   738  0011D6  6E0E               	movwf	print@a^0,c
   739  0011D8  0E08               	movlw	high STR_5
   740  0011DA  6E0F               	movwf	(print@a+1)^0,c
   741  0011DC  EC7D  F00A         	call	_print	;wreg free
   742  0011E0  EF8C  F008         	goto	l2957
   743  0011E4  EF66  F000         	goto	start
   744  0011E8                     __end_of_main:
   745                           	opt callstack 0
   746                           
   747 ;; *************** function _sprintf *****************
   748 ;; Defined at:
   749 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  s               2   20[BANK0 ] PTR unsigned char 
   752 ;;		 -> horas(4), minut(4), segun(4), 
   753 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
   754 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  f               6   30[BANK0 ] struct _IO_FILE
   757 ;;  ap              2   28[BANK0 ] PTR void [1]
   758 ;;		 -> ?_sprintf(2), 
   759 ;;  ret             2    0        int 
   760 ;; Return value:  Size  Location     Type
   761 ;;                  2   20[BANK0 ] int 
   762 ;; Registers used:
   763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   769 ;;      Params:         0       6       0       0       0       0       0       0       0
   770 ;;      Locals:         0      10       0       0       0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0
   772 ;;      Totals:         0      16       0       0       0       0       0       0       0
   773 ;;Total ram usage:       16 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:   14
   776 ;; This function calls:
   777 ;;		_vfprintf
   778 ;; This function is called by:
   779 ;;		_main
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text1
   784  001636                     __ptext1:
   785                           	opt callstack 0
   786  001636                     _sprintf:
   787                           	opt callstack 16
   788  001636  0EAC               	movlw	low (?_sprintf+4)
   789  001638  0100               	movlb	0	; () banked
   790  00163A  6FB0               	movwf	sprintf@ap& (0+255),b
   791  00163C  0E00               	movlw	high (?_sprintf+4)
   792  00163E  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
   793  001640  C0A8  F0B2         	movff	sprintf@s,sprintf@f
   794  001644  C0A9  F0B3         	movff	sprintf@s+1,sprintf@f+1
   795  001648                     
   796                           ; BSR set to: 0
   797  001648  0E00               	movlw	0
   798  00164A  6FB5               	movwf	(sprintf@f+3)& (0+255),b
   799  00164C  0E00               	movlw	0
   800  00164E  6FB4               	movwf	(sprintf@f+2)& (0+255),b
   801  001650                     
   802                           ; BSR set to: 0
   803  001650  0E00               	movlw	0
   804  001652  6FB7               	movwf	(sprintf@f+5)& (0+255),b
   805  001654  0E00               	movlw	0
   806  001656  6FB6               	movwf	(sprintf@f+4)& (0+255),b
   807  001658                     
   808                           ; BSR set to: 0
   809  001658  0EB2               	movlw	low sprintf@f
   810  00165A  6FA0               	movwf	vfprintf@fp& (0+255),b
   811  00165C  0E00               	movlw	high sprintf@f
   812  00165E  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
   813  001660  C0AA  F0A2         	movff	sprintf@fmt,vfprintf@fmt
   814  001664  C0AB  F0A3         	movff	sprintf@fmt+1,vfprintf@fmt+1
   815  001668  0EB0               	movlw	low sprintf@ap
   816  00166A  6FA4               	movwf	vfprintf@ap& (0+255),b
   817  00166C  0E00               	movlw	high sprintf@ap
   818  00166E  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
   819  001670  ECBC  F00A         	call	_vfprintf	;wreg free
   820  001674  0100               	movlb	0	; () banked
   821  001676  51B4               	movf	(sprintf@f+2)& (0+255),w,b
   822  001678  25A8               	addwf	sprintf@s& (0+255),w,b
   823  00167A  6ED9               	movwf	fsr2l,c
   824  00167C  51B5               	movf	(sprintf@f+3)& (0+255),w,b
   825  00167E  21A9               	addwfc	(sprintf@s+1)& (0+255),w,b
   826  001680  6EDA               	movwf	fsr2h,c
   827  001682  0E00               	movlw	0
   828  001684  6EDF               	movwf	indf2,c
   829  001686                     
   830                           ; BSR set to: 0
   831  001686  0012               	return		;funcret
   832  001688                     __end_of_sprintf:
   833                           	opt callstack 0
   834                           
   835 ;; *************** function _vfprintf *****************
   836 ;; Defined at:
   837 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
   840 ;;		 -> sprintf@f(6), 
   841 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
   842 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   843 ;;  ap              2   16[BANK0 ] PTR PTR void 
   844 ;;		 -> sprintf@ap(2), 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  cfmt            2   18[BANK0 ] PTR unsigned char 
   847 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  2   12[BANK0 ] int 
   850 ;; Registers used:
   851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:         0       6       0       0       0       0       0       0       0
   858 ;;      Locals:         0       2       0       0       0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0
   860 ;;      Totals:         0       8       0       0       0       0       0       0       0
   861 ;;Total ram usage:        8 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:   13
   864 ;; This function calls:
   865 ;;		_vfpfcnvrt
   866 ;; This function is called by:
   867 ;;		_sprintf
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text2
   872  001578                     __ptext2:
   873                           	opt callstack 0
   874  001578                     _vfprintf:
   875                           	opt callstack 16
   876  001578                     
   877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   878  001578  C0A2  F0A6         	movff	vfprintf@fmt,vfprintf@cfmt
   879  00157C  C0A3  F0A7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   880  001580                     
   881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   882  001580  0E00               	movlw	0
   883  001582  0100               	movlb	0	; () banked
   884  001584  6F61               	movwf	(_nout+1)& (0+255),b
   885  001586  0E00               	movlw	0
   886  001588  6F60               	movwf	_nout& (0+255),b
   887                           
   888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   889  00158A  EFDA  F00A         	goto	l2929
   890  00158E                     l2927:
   891                           
   892                           ; BSR set to: 0
   893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   894  00158E  C0A0  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
   895  001592  C0A1  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   896  001596  0EA6               	movlw	low vfprintf@cfmt
   897  001598  6E46               	movwf	vfpfcnvrt@fmt^0,c
   898  00159A  0E00               	movlw	high vfprintf@cfmt
   899  00159C  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
   900  00159E  C0A4  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
   901  0015A2  C0A5  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   902  0015A6  EC0B  F004         	call	_vfpfcnvrt	;wreg free
   903  0015AA  5044               	movf	?_vfpfcnvrt^0,w,c
   904  0015AC  0100               	movlb	0	; () banked
   905  0015AE  2760               	addwf	_nout& (0+255),f,b
   906  0015B0  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
   907  0015B2  2361               	addwfc	(_nout+1)& (0+255),f,b
   908  0015B4                     l2929:
   909                           
   910                           ; BSR set to: 0
   911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   912  0015B4  C0A6  FFF6         	movff	vfprintf@cfmt,tblptrl
   913  0015B8  C0A7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   914  0015BC                     	if	0	;tblptru may be non-zero
   915  0015BC                     	endif
   916  0015BC                     	if	0	;tblptru may be non-zero
   917  0015BC                     	endif
   918  0015BC  0008               	tblrd		*
   919  0015BE  50F5               	movf	tablat,w,c
   920  0015C0  0900               	iorlw	0
   921  0015C2  A4D8               	btfss	status,2,c
   922  0015C4  EFE6  F00A         	goto	u2081
   923  0015C8  EFE8  F00A         	goto	u2080
   924  0015CC                     u2081:
   925  0015CC  EFC7  F00A         	goto	l2927
   926  0015D0                     u2080:
   927  0015D0                     
   928                           ; BSR set to: 0
   929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   930  0015D0  C060  F0A0         	movff	_nout,?_vfprintf
   931  0015D4  C061  F0A1         	movff	_nout+1,?_vfprintf+1
   932  0015D8                     
   933                           ; BSR set to: 0
   934  0015D8  0012               	return		;funcret
   935  0015DA                     __end_of_vfprintf:
   936                           	opt callstack 0
   937                           
   938 ;; *************** function _vfpfcnvrt *****************
   939 ;; Defined at:
   940 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
   943 ;;		 -> sprintf@f(6), 
   944 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
   945 ;;		 -> vfprintf@cfmt(2), 
   946 ;;  ap              2   71[COMRAM] PTR PTR void 
   947 ;;		 -> sprintf@ap(2), 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  llu             8    0[BANK0 ] unsigned long long 
   950 ;;  ll              8    0        long long 
   951 ;;  f               4    0        long long 
   952 ;;  vp              3    0        PTR void 
   953 ;;  ct              3    0        unsigned char [3]
   954 ;;  cp              3    0        PTR unsigned char 
   955 ;;  done            2    8[BANK0 ] int 
   956 ;;  i               2    0        int 
   957 ;;  c               1    0        unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  2   67[COMRAM] int 
   960 ;; Registers used:
   961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         6       0       0       0       0       0       0       0       0
   968 ;;      Locals:         0      12       0       0       0       0       0       0       0
   969 ;;      Temps:          4       0       0       0       0       0       0       0       0
   970 ;;      Totals:        10      12       0       0       0       0       0       0       0
   971 ;;Total ram usage:       22 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:   12
   974 ;; This function calls:
   975 ;;		_atoi
   976 ;;		_fputc
   977 ;;		_isdigit
   978 ;;		_utoa
   979 ;; This function is called by:
   980 ;;		_vfprintf
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text3
   985  000816                     __ptext3:
   986                           	opt callstack 0
   987  000816                     _vfpfcnvrt:
   988                           	opt callstack 16
   989  000816                     
   990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   991  000816  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   992  00081A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   993  00081E  CFDE FFF6          	movff	postinc2,tblptrl
   994  000822  CFDD FFF7          	movff	postdec2,tblptrh
   995  000826                     	if	0	;tblptru may be non-zero
   996  000826                     	endif
   997  000826                     	if	0	;tblptru may be non-zero
   998  000826                     	endif
   999  000826  0008               	tblrd		*
  1000  000828  50F5               	movf	tablat,w,c
  1001  00082A  0A25               	xorlw	37
  1002  00082C  A4D8               	btfss	status,2,c
  1003  00082E  EF1B  F004         	goto	u1981
  1004  000832  EF1D  F004         	goto	u1980
  1005  000836                     u1981:
  1006  000836  EF94  F005         	goto	l2905
  1007  00083A                     u1980:
  1008  00083A                     
  1009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1010  00083A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1011  00083E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1012  000842  2ADE               	incf	postinc2,f,c
  1013  000844  0E00               	movlw	0
  1014  000846  22DD               	addwfc	postdec2,f,c
  1015  000848                     
  1016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1017  000848  0E00               	movlw	0
  1018  00084A  6E4F               	movwf	(_width+1)^0,c
  1019  00084C  0E00               	movlw	0
  1020  00084E  6E4E               	movwf	_width^0,c
  1021  000850  C04E  F052         	movff	_width,_flags
  1022  000854  C04F  F053         	movff	_width+1,_flags+1
  1023  000858                     
  1024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1025  000858  6850               	setf	_prec^0,c
  1026  00085A  6851               	setf	(_prec+1)^0,c
  1027  00085C                     
  1028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1029  00085C  0E00               	movlw	0
  1030  00085E  0100               	movlb	0	; () banked
  1031  000860  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1032  000862  0E00               	movlw	0
  1033  000864  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  1034                           
  1035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1036  000866  EF7B  F004         	goto	l2859
  1037  00086A                     l2833:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1041  00086A  8052               	bsf	_flags^0,0,c
  1042  00086C                     l2835:
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1046  00086C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1047  000870  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1048  000874  2ADE               	incf	postinc2,f,c
  1049  000876  0E00               	movlw	0
  1050  000878  22DD               	addwfc	postdec2,f,c
  1051                           
  1052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1053  00087A  EF7B  F004         	goto	l2859
  1054  00087E                     l2837:
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1058  00087E  8252               	bsf	_flags^0,1,c
  1059  000880  EF36  F004         	goto	l2835
  1060  000884                     l2841:
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1064  000884  8452               	bsf	_flags^0,2,c
  1065  000886  EF36  F004         	goto	l2835
  1066  00088A                     l2845:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1070  00088A  8652               	bsf	_flags^0,3,c
  1071  00088C  EF36  F004         	goto	l2835
  1072  000890                     l2849:
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1076  000890  8852               	bsf	_flags^0,4,c
  1077  000892  EF36  F004         	goto	l2835
  1078  000896                     l2853:
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1082  000896  0E00               	movlw	0
  1083  000898  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1084  00089A  0E01               	movlw	1
  1085  00089C  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  1086                           
  1087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1088  00089E  EF7B  F004         	goto	l2859
  1089  0008A2                     l2857:
  1090                           
  1091                           ; BSR set to: 0
  1092  0008A2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1093  0008A6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1094  0008AA  CFDE FFF6          	movff	postinc2,tblptrl
  1095  0008AE  CFDD FFF7          	movff	postdec2,tblptrh
  1096  0008B2                     	if	0	;tblptru may be non-zero
  1097  0008B2                     	endif
  1098  0008B2                     	if	0	;tblptru may be non-zero
  1099  0008B2                     	endif
  1100  0008B2  0008               	tblrd		*
  1101  0008B4  50F5               	movf	tablat,w,c
  1102  0008B6  6E4A               	movwf	??_vfpfcnvrt^0,c
  1103  0008B8  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  1104                           
  1105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 1, Range of values is 0 to 0
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte            4     3 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112  0008BA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1113  0008BC  0A00               	xorlw	0	; case 0
  1114  0008BE  B4D8               	btfsc	status,2,c
  1115  0008C0  EF64  F004         	goto	l3053
  1116  0008C4  EF4B  F004         	goto	l2853
  1117  0008C8                     l3053:
  1118                           
  1119                           ; BSR set to: 0
  1120                           ; Switch size 1, requested type "simple"
  1121                           ; Number of cases is 5, Range of values is 32 to 48
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte           16     9 (average)
  1125                           ;	Chosen strategy is simple_byte
  1126  0008C8  504A               	movf	??_vfpfcnvrt^0,w,c
  1127  0008CA  0A20               	xorlw	32	; case 32
  1128  0008CC  B4D8               	btfsc	status,2,c
  1129  0008CE  EF45  F004         	goto	l2845
  1130  0008D2  0A03               	xorlw	3	; case 35
  1131  0008D4  B4D8               	btfsc	status,2,c
  1132  0008D6  EF48  F004         	goto	l2849
  1133  0008DA  0A08               	xorlw	8	; case 43
  1134  0008DC  B4D8               	btfsc	status,2,c
  1135  0008DE  EF42  F004         	goto	l2841
  1136  0008E2  0A06               	xorlw	6	; case 45
  1137  0008E4  B4D8               	btfsc	status,2,c
  1138  0008E6  EF35  F004         	goto	l2833
  1139  0008EA  0A1D               	xorlw	29	; case 48
  1140  0008EC  B4D8               	btfsc	status,2,c
  1141  0008EE  EF3F  F004         	goto	l2837
  1142  0008F2  EF4B  F004         	goto	l2853
  1143  0008F6                     l2859:
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1147  0008F6  519C               	movf	vfpfcnvrt@done& (0+255),w,b
  1148  0008F8  119D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1149  0008FA  B4D8               	btfsc	status,2,c
  1150  0008FC  EF82  F004         	goto	u1991
  1151  000900  EF84  F004         	goto	u1990
  1152  000904                     u1991:
  1153  000904  EF51  F004         	goto	l2857
  1154  000908                     u1990:
  1155  000908                     
  1156                           ; BSR set to: 0
  1157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1158  000908  A052               	btfss	_flags^0,0,c
  1159  00090A  EF89  F004         	goto	u2001
  1160  00090E  EF8B  F004         	goto	u2000
  1161  000912                     u2001:
  1162  000912  EF8C  F004         	goto	l2863
  1163  000916                     u2000:
  1164  000916                     
  1165                           ; BSR set to: 0
  1166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1167  000916  9252               	bcf	_flags^0,1,c
  1168  000918                     l2863:
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1172  000918  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1173  00091C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1174  000920  CFDE FFF6          	movff	postinc2,tblptrl
  1175  000924  CFDD FFF7          	movff	postdec2,tblptrh
  1176  000928                     	if	0	;tblptru may be non-zero
  1177  000928                     	endif
  1178  000928                     	if	0	;tblptru may be non-zero
  1179  000928                     	endif
  1180  000928  0008               	tblrd		*
  1181  00092A  50F5               	movf	tablat,w,c
  1182  00092C  0A2A               	xorlw	42
  1183  00092E  A4D8               	btfss	status,2,c
  1184  000930  EF9C  F004         	goto	u2011
  1185  000934  EF9E  F004         	goto	u2010
  1186  000938                     u2011:
  1187  000938  EFC7  F004         	goto	l2871
  1188  00093C                     u2010:
  1189  00093C                     
  1190                           ; BSR set to: 0
  1191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1192  00093C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1193  000940  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1194  000944  2ADE               	incf	postinc2,f,c
  1195  000946  0E00               	movlw	0
  1196  000948  22DD               	addwfc	postdec2,f,c
  1197                           
  1198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1199  00094A  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1200  00094E  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1201  000952  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1202  000956  0E02               	movlw	2
  1203  000958  26DE               	addwf	postinc2,f,c
  1204  00095A  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1205  00095E  0E00               	movlw	0
  1206  000960  22DD               	addwfc	postdec2,f,c
  1207  000962  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1208  000966  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1209  00096A  CFDE F04E          	movff	postinc2,_width
  1210  00096E  CFDD F04F          	movff	postdec2,_width+1
  1211  000972                     
  1212                           ; BSR set to: 0
  1213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1214  000972  BE4F               	btfsc	(_width+1)^0,7,c
  1215  000974  EFC0  F004         	goto	u2020
  1216  000978  EFBE  F004         	goto	u2021
  1217  00097C                     u2021:
  1218  00097C  EF0B  F005         	goto	l2881
  1219  000980                     u2020:
  1220  000980                     
  1221                           ; BSR set to: 0
  1222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1223  000980  8052               	bsf	_flags^0,0,c
  1224                           
  1225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1226  000982  6C4E               	negf	_width^0,c
  1227  000984  1E4F               	comf	(_width+1)^0,f,c
  1228  000986  B0D8               	btfsc	status,0,c
  1229  000988  2A4F               	incf	(_width+1)^0,f,c
  1230  00098A  EF0B  F005         	goto	l2881
  1231  00098E                     l2871:
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1235  00098E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1236  000992  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1237  000996  CFDE F010          	movff	postinc2,atoi@s
  1238  00099A  CFDD F011          	movff	postdec2,atoi@s+1
  1239  00099E  ECB0  F006         	call	_atoi	;wreg free
  1240  0009A2  C010  F04E         	movff	?_atoi,_width
  1241  0009A6  C011  F04F         	movff	?_atoi+1,_width+1
  1242                           
  1243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1244  0009AA  EFDE  F004         	goto	l2875
  1245  0009AE                     l2873:
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1249  0009AE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1250  0009B2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1251  0009B6  2ADE               	incf	postinc2,f,c
  1252  0009B8  0E00               	movlw	0
  1253  0009BA  22DD               	addwfc	postdec2,f,c
  1254  0009BC                     l2875:
  1255  0009BC  0ED0               	movlw	208
  1256  0009BE  6E4A               	movwf	??_vfpfcnvrt^0,c
  1257  0009C0  0EFF               	movlw	255
  1258  0009C2  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1259  0009C4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1260  0009C8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1261  0009CC  CFDE FFF6          	movff	postinc2,tblptrl
  1262  0009D0  CFDD FFF7          	movff	postdec2,tblptrh
  1263  0009D4                     	if	0	;tblptru may be non-zero
  1264  0009D4                     	endif
  1265  0009D4                     	if	0	;tblptru may be non-zero
  1266  0009D4                     	endif
  1267  0009D4  0008               	tblrd		*
  1268  0009D6  50F5               	movf	tablat,w,c
  1269  0009D8  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  1270  0009DA  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  1271  0009DC  504A               	movf	??_vfpfcnvrt^0,w,c
  1272  0009DE  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1273  0009E0  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1274  0009E2  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1275  0009E4  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1276  0009E6  E10A               	bnz	u2030
  1277  0009E8  0E0A               	movlw	10
  1278  0009EA  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1279  0009EC  A0D8               	btfss	status,0,c
  1280  0009EE  EFFB  F004         	goto	u2031
  1281  0009F2  EFFE  F004         	goto	u2030
  1282  0009F6                     u2031:
  1283  0009F6  0E01               	movlw	1
  1284  0009F8  EFFF  F004         	goto	u2040
  1285  0009FC                     u2030:
  1286  0009FC  0E00               	movlw	0
  1287  0009FE                     u2040:
  1288  0009FE  0100               	movlb	0	; () banked
  1289  000A00  6F9E               	movwf	_vfpfcnvrt$871& (0+255),b
  1290  000A02  6B9F               	clrf	(_vfpfcnvrt$871+1)& (0+255),b
  1291  000A04                     
  1292                           ; BSR set to: 0
  1293  000A04  519E               	movf	_vfpfcnvrt$871& (0+255),w,b
  1294  000A06  119F               	iorwf	(_vfpfcnvrt$871+1)& (0+255),w,b
  1295  000A08  A4D8               	btfss	status,2,c
  1296  000A0A  EF09  F005         	goto	u2051
  1297  000A0E  EF0B  F005         	goto	u2050
  1298  000A12                     u2051:
  1299  000A12  EFD7  F004         	goto	l2873
  1300  000A16                     u2050:
  1301  000A16                     l2881:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1305  000A16  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1306  000A1A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1307  000A1E  CFDE FFF6          	movff	postinc2,tblptrl
  1308  000A22  CFDD FFF7          	movff	postdec2,tblptrh
  1309  000A26                     	if	0	;tblptru may be non-zero
  1310  000A26                     	endif
  1311  000A26                     	if	0	;tblptru may be non-zero
  1312  000A26                     	endif
  1313  000A26  0008               	tblrd		*
  1314  000A28  50F5               	movf	tablat,w,c
  1315  000A2A  0A75               	xorlw	117
  1316  000A2C  A4D8               	btfss	status,2,c
  1317  000A2E  EF1B  F005         	goto	u2061
  1318  000A32  EF1D  F005         	goto	u2060
  1319  000A36                     u2061:
  1320  000A36  EF5E  F005         	goto	l2889
  1321  000A3A                     u2060:
  1322  000A3A                     
  1323                           ; BSR set to: 0
  1324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1325  000A3A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1326  000A3E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1327  000A42  2ADE               	incf	postinc2,f,c
  1328  000A44  0E00               	movlw	0
  1329  000A46  22DD               	addwfc	postdec2,f,c
  1330                           
  1331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1332  000A48  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1333  000A4C  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1334  000A50  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1335  000A54  0E02               	movlw	2
  1336  000A56  26DE               	addwf	postinc2,f,c
  1337  000A58  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1338  000A5C  0E00               	movlw	0
  1339  000A5E  22DD               	addwfc	postdec2,f,c
  1340  000A60  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1341  000A64  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1342  000A68  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+2
  1343  000A6C  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+3
  1344  000A70  C04C  F094         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1345  000A74  C04D  F095         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1346  000A78  6B96               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1347  000A7A  6B97               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1348  000A7C  6B98               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1349  000A7E  6B99               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1350  000A80  6B9A               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1351  000A82  6B9B               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1352  000A84                     
  1353                           ; BSR set to: 0
  1354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1355  000A84  C044  F024         	movff	vfpfcnvrt@fp,utoa@fp
  1356  000A88  C045  F025         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1357  000A8C  C094  F026         	movff	vfpfcnvrt@llu,utoa@d
  1358  000A90  C095  F027         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1359  000A94  C096  F028         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1360  000A98  C097  F029         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1361  000A9C  C098  F02A         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1362  000AA0  C099  F02B         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1363  000AA4  C09A  F02C         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1364  000AA8  C09B  F02D         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1365  000AAC  ECB0  F005         	call	_utoa	;wreg free
  1366  000AB0  C024  F044         	movff	?_utoa,?_vfpfcnvrt
  1367  000AB4  C025  F045         	movff	?_utoa+1,?_vfpfcnvrt+1
  1368  000AB8  EFAF  F005         	goto	l379
  1369  000ABC                     l2889:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1373  000ABC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1374  000AC0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1375  000AC4  CFDE FFF6          	movff	postinc2,tblptrl
  1376  000AC8  CFDD FFF7          	movff	postdec2,tblptrh
  1377  000ACC                     	if	0	;tblptru may be non-zero
  1378  000ACC                     	endif
  1379  000ACC                     	if	0	;tblptru may be non-zero
  1380  000ACC                     	endif
  1381  000ACC  0008               	tblrd		*
  1382  000ACE  50F5               	movf	tablat,w,c
  1383  000AD0  0A25               	xorlw	37
  1384  000AD2  A4D8               	btfss	status,2,c
  1385  000AD4  EF6E  F005         	goto	u2071
  1386  000AD8  EF70  F005         	goto	u2070
  1387  000ADC                     u2071:
  1388  000ADC  EF87  F005         	goto	l2899
  1389  000AE0                     u2070:
  1390  000AE0                     
  1391                           ; BSR set to: 0
  1392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1393  000AE0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1394  000AE4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1395  000AE8  2ADE               	incf	postinc2,f,c
  1396  000AEA  0E00               	movlw	0
  1397  000AEC  22DD               	addwfc	postdec2,f,c
  1398  000AEE                     
  1399                           ; BSR set to: 0
  1400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1401  000AEE  0E00               	movlw	0
  1402  000AF0  6E0A               	movwf	(fputc@c+1)^0,c
  1403  000AF2  0E25               	movlw	37
  1404  000AF4  6E09               	movwf	fputc@c^0,c
  1405  000AF6  C044  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1406  000AFA  C045  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1407  000AFE  EC5C  F009         	call	_fputc	;wreg free
  1408  000B02                     l2895:
  1409                           
  1410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1411  000B02  0E00               	movlw	0
  1412  000B04  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1413  000B06  0E01               	movlw	1
  1414  000B08  6E44               	movwf	?_vfpfcnvrt^0,c
  1415  000B0A  EFAF  F005         	goto	l379
  1416  000B0E                     l2899:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1420  000B0E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1421  000B12  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1422  000B16  2ADE               	incf	postinc2,f,c
  1423  000B18  0E00               	movlw	0
  1424  000B1A  22DD               	addwfc	postdec2,f,c
  1425  000B1C                     
  1426                           ; BSR set to: 0
  1427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1428  000B1C  0E00               	movlw	0
  1429  000B1E  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1430  000B20  0E00               	movlw	0
  1431  000B22  6E44               	movwf	?_vfpfcnvrt^0,c
  1432  000B24  EFAF  F005         	goto	l379
  1433  000B28                     l2905:
  1434                           
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1436  000B28  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1437  000B2C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1438  000B30  CFDE FFF6          	movff	postinc2,tblptrl
  1439  000B34  CFDD FFF7          	movff	postdec2,tblptrh
  1440  000B38                     	if	0	;tblptru may be non-zero
  1441  000B38                     	endif
  1442  000B38                     	if	0	;tblptru may be non-zero
  1443  000B38                     	endif
  1444  000B38  0008               	tblrd		*
  1445  000B3A  50F5               	movf	tablat,w,c
  1446  000B3C  6E09               	movwf	fputc@c^0,c
  1447  000B3E  6A0A               	clrf	(fputc@c+1)^0,c
  1448  000B40  C044  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1449  000B44  C045  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1450  000B48  EC5C  F009         	call	_fputc	;wreg free
  1451  000B4C                     
  1452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1453  000B4C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1454  000B50  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1455  000B54  2ADE               	incf	postinc2,f,c
  1456  000B56  0E00               	movlw	0
  1457  000B58  22DD               	addwfc	postdec2,f,c
  1458  000B5A  EF81  F005         	goto	l2895
  1459  000B5E                     l379:
  1460  000B5E  0012               	return		;funcret
  1461  000B60                     __end_of_vfpfcnvrt:
  1462                           	opt callstack 0
  1463                           
  1464 ;; *************** function _utoa *****************
  1465 ;; Defined at:
  1466 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  1469 ;;		 -> sprintf@f(6), 
  1470 ;;  d               8   37[COMRAM] unsigned long long 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  n               8   57[COMRAM] unsigned long long 
  1473 ;;  i               2   65[COMRAM] int 
  1474 ;;  w               2   55[COMRAM] int 
  1475 ;;  p               2   53[COMRAM] int 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2   35[COMRAM] int 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1485 ;;      Params:        10       0       0       0       0       0       0       0       0
  1486 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1487 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1488 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1489 ;;Total ram usage:       32 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:   11
  1492 ;; This function calls:
  1493 ;;		___lodiv
  1494 ;;		___lomod
  1495 ;;		_pad
  1496 ;; This function is called by:
  1497 ;;		_vfpfcnvrt
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text4
  1502  000B60                     __ptext4:
  1503                           	opt callstack 0
  1504  000B60                     _utoa:
  1505                           	opt callstack 16
  1506  000B60                     
  1507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1508  000B60  BE51               	btfsc	(_prec+1)^0,7,c
  1509  000B62  EFB5  F005         	goto	u1841
  1510  000B66  EFB7  F005         	goto	u1840
  1511  000B6A                     u1841:
  1512  000B6A  EFB8  F005         	goto	l2749
  1513  000B6E                     u1840:
  1514  000B6E                     
  1515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1516  000B6E  9252               	bcf	_flags^0,1,c
  1517  000B70                     l2749:
  1518                           
  1519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1520  000B70  BE51               	btfsc	(_prec+1)^0,7,c
  1521  000B72  EFC5  F005         	goto	u1850
  1522  000B76  5051               	movf	(_prec+1)^0,w,c
  1523  000B78  E106               	bnz	u1851
  1524  000B7A  0450               	decf	_prec^0,w,c
  1525  000B7C  B0D8               	btfsc	status,0,c
  1526  000B7E  EFC3  F005         	goto	u1851
  1527  000B82  EFC5  F005         	goto	u1850
  1528  000B86                     u1851:
  1529  000B86  EFCB  F005         	goto	l342
  1530  000B8A                     u1850:
  1531  000B8A  0E00               	movlw	0
  1532  000B8C  6E37               	movwf	(utoa@p+1)^0,c
  1533  000B8E  0E01               	movlw	1
  1534  000B90  6E36               	movwf	utoa@p^0,c
  1535  000B92  EFCF  F005         	goto	l344
  1536  000B96                     l342:
  1537  000B96  C050  F036         	movff	_prec,utoa@p
  1538  000B9A  C051  F037         	movff	_prec+1,utoa@p+1
  1539  000B9E                     l344:
  1540                           
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1542  000B9E  C04E  F038         	movff	_width,utoa@w
  1543  000BA2  C04F  F039         	movff	_width+1,utoa@w+1
  1544                           
  1545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1546  000BA6  C026  F03A         	movff	utoa@d,utoa@n
  1547  000BAA  C027  F03B         	movff	utoa@d+1,utoa@n+1
  1548  000BAE  C028  F03C         	movff	utoa@d+2,utoa@n+2
  1549  000BB2  C029  F03D         	movff	utoa@d+3,utoa@n+3
  1550  000BB6  C02A  F03E         	movff	utoa@d+4,utoa@n+4
  1551  000BBA  C02B  F03F         	movff	utoa@d+5,utoa@n+5
  1552  000BBE  C02C  F040         	movff	utoa@d+6,utoa@n+6
  1553  000BC2  C02D  F041         	movff	utoa@d+7,utoa@n+7
  1554  000BC6                     
  1555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1556  000BC6  0E00               	movlw	0
  1557  000BC8  6E43               	movwf	(utoa@i+1)^0,c
  1558  000BCA  0E1F               	movlw	31
  1559  000BCC  6E42               	movwf	utoa@i^0,c
  1560  000BCE                     
  1561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1562  000BCE  0E00               	movlw	0
  1563  000BD0  0100               	movlb	0	; () banked
  1564  000BD2  6F87               	movwf	(_dbuf+31)& (0+255),b
  1565                           
  1566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1567  000BD4  EF62  F006         	goto	l2767
  1568  000BD8                     l2757:
  1569                           
  1570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1571  000BD8  0642               	decf	utoa@i^0,f,c
  1572  000BDA  A0D8               	btfss	status,0,c
  1573  000BDC  0643               	decf	(utoa@i+1)^0,f,c
  1574  000BDE                     
  1575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1576  000BDE  0E68               	movlw	low _dbuf
  1577  000BE0  2442               	addwf	utoa@i^0,w,c
  1578  000BE2  6ED9               	movwf	fsr2l,c
  1579  000BE4  0E00               	movlw	high _dbuf
  1580  000BE6  2043               	addwfc	(utoa@i+1)^0,w,c
  1581  000BE8  6EDA               	movwf	fsr2h,c
  1582  000BEA  C03A  F009         	movff	utoa@n,___lomod@dividend
  1583  000BEE  C03B  F00A         	movff	utoa@n+1,___lomod@dividend+1
  1584  000BF2  C03C  F00B         	movff	utoa@n+2,___lomod@dividend+2
  1585  000BF6  C03D  F00C         	movff	utoa@n+3,___lomod@dividend+3
  1586  000BFA  C03E  F00D         	movff	utoa@n+4,___lomod@dividend+4
  1587  000BFE  C03F  F00E         	movff	utoa@n+5,___lomod@dividend+5
  1588  000C02  C040  F00F         	movff	utoa@n+6,___lomod@dividend+6
  1589  000C06  C041  F010         	movff	utoa@n+7,___lomod@dividend+7
  1590  000C0A  0E0A               	movlw	10
  1591  000C0C  6E11               	movwf	___lomod@divisor^0,c
  1592  000C0E  0E00               	movlw	0
  1593  000C10  6E12               	movwf	(___lomod@divisor+1)^0,c
  1594  000C12  0E00               	movlw	0
  1595  000C14  6E13               	movwf	(___lomod@divisor+2)^0,c
  1596  000C16  0E00               	movlw	0
  1597  000C18  6E14               	movwf	(___lomod@divisor+3)^0,c
  1598  000C1A  0E00               	movlw	0
  1599  000C1C  6E15               	movwf	(___lomod@divisor+4)^0,c
  1600  000C1E  0E00               	movlw	0
  1601  000C20  6E16               	movwf	(___lomod@divisor+5)^0,c
  1602  000C22  0E00               	movlw	0
  1603  000C24  6E17               	movwf	(___lomod@divisor+6)^0,c
  1604  000C26  0E00               	movlw	0
  1605  000C28  6E18               	movwf	(___lomod@divisor+7)^0,c
  1606  000C2A  ECF4  F008         	call	___lomod	;wreg free
  1607  000C2E  C009  F02E         	movff	?___lomod,??_utoa
  1608  000C32  C00A  F02F         	movff	?___lomod+1,??_utoa+1
  1609  000C36  C00B  F030         	movff	?___lomod+2,??_utoa+2
  1610  000C3A  C00C  F031         	movff	?___lomod+3,??_utoa+3
  1611  000C3E  C00D  F032         	movff	?___lomod+4,??_utoa+4
  1612  000C42  C00E  F033         	movff	?___lomod+5,??_utoa+5
  1613  000C46  C00F  F034         	movff	?___lomod+6,??_utoa+6
  1614  000C4A  C010  F035         	movff	?___lomod+7,??_utoa+7
  1615  000C4E  502E               	movf	??_utoa^0,w,c
  1616  000C50  0F30               	addlw	48
  1617  000C52  6EDF               	movwf	indf2,c
  1618  000C54                     
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1620  000C54  0636               	decf	utoa@p^0,f,c
  1621  000C56  A0D8               	btfss	status,0,c
  1622  000C58  0637               	decf	(utoa@p+1)^0,f,c
  1623  000C5A                     
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1625  000C5A  0638               	decf	utoa@w^0,f,c
  1626  000C5C  A0D8               	btfss	status,0,c
  1627  000C5E  0639               	decf	(utoa@w+1)^0,f,c
  1628  000C60                     
  1629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1630  000C60  C03A  F009         	movff	utoa@n,___lodiv@dividend
  1631  000C64  C03B  F00A         	movff	utoa@n+1,___lodiv@dividend+1
  1632  000C68  C03C  F00B         	movff	utoa@n+2,___lodiv@dividend+2
  1633  000C6C  C03D  F00C         	movff	utoa@n+3,___lodiv@dividend+3
  1634  000C70  C03E  F00D         	movff	utoa@n+4,___lodiv@dividend+4
  1635  000C74  C03F  F00E         	movff	utoa@n+5,___lodiv@dividend+5
  1636  000C78  C040  F00F         	movff	utoa@n+6,___lodiv@dividend+6
  1637  000C7C  C041  F010         	movff	utoa@n+7,___lodiv@dividend+7
  1638  000C80  0E0A               	movlw	10
  1639  000C82  6E11               	movwf	___lodiv@divisor^0,c
  1640  000C84  0E00               	movlw	0
  1641  000C86  6E12               	movwf	(___lodiv@divisor+1)^0,c
  1642  000C88  0E00               	movlw	0
  1643  000C8A  6E13               	movwf	(___lodiv@divisor+2)^0,c
  1644  000C8C  0E00               	movlw	0
  1645  000C8E  6E14               	movwf	(___lodiv@divisor+3)^0,c
  1646  000C90  0E00               	movlw	0
  1647  000C92  6E15               	movwf	(___lodiv@divisor+4)^0,c
  1648  000C94  0E00               	movlw	0
  1649  000C96  6E16               	movwf	(___lodiv@divisor+5)^0,c
  1650  000C98  0E00               	movlw	0
  1651  000C9A  6E17               	movwf	(___lodiv@divisor+6)^0,c
  1652  000C9C  0E00               	movlw	0
  1653  000C9E  6E18               	movwf	(___lodiv@divisor+7)^0,c
  1654  000CA0  EC05  F008         	call	___lodiv	;wreg free
  1655  000CA4  C009  F03A         	movff	?___lodiv,utoa@n
  1656  000CA8  C00A  F03B         	movff	?___lodiv+1,utoa@n+1
  1657  000CAC  C00B  F03C         	movff	?___lodiv+2,utoa@n+2
  1658  000CB0  C00C  F03D         	movff	?___lodiv+3,utoa@n+3
  1659  000CB4  C00D  F03E         	movff	?___lodiv+4,utoa@n+4
  1660  000CB8  C00E  F03F         	movff	?___lodiv+5,utoa@n+5
  1661  000CBC  C00F  F040         	movff	?___lodiv+6,utoa@n+6
  1662  000CC0  C010  F041         	movff	?___lodiv+7,utoa@n+7
  1663  000CC4                     l2767:
  1664                           
  1665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1666  000CC4  5042               	movf	utoa@i^0,w,c
  1667  000CC6  1043               	iorwf	(utoa@i+1)^0,w,c
  1668  000CC8  B4D8               	btfsc	status,2,c
  1669  000CCA  EF69  F006         	goto	u1861
  1670  000CCE  EF6B  F006         	goto	u1860
  1671  000CD2                     u1861:
  1672  000CD2  EF9B  F006         	goto	l2777
  1673  000CD6                     u1860:
  1674  000CD6  503A               	movf	utoa@n^0,w,c
  1675  000CD8  103B               	iorwf	(utoa@n+1)^0,w,c
  1676  000CDA  103C               	iorwf	(utoa@n+2)^0,w,c
  1677  000CDC  103D               	iorwf	(utoa@n+3)^0,w,c
  1678  000CDE  103E               	iorwf	(utoa@n+4)^0,w,c
  1679  000CE0  103F               	iorwf	(utoa@n+5)^0,w,c
  1680  000CE2  1040               	iorwf	(utoa@n+6)^0,w,c
  1681  000CE4  1041               	iorwf	(utoa@n+7)^0,w,c
  1682  000CE6  A4D8               	btfss	status,2,c
  1683  000CE8  EF78  F006         	goto	u1871
  1684  000CEC  EF7A  F006         	goto	u1870
  1685  000CF0                     u1871:
  1686  000CF0  EFEC  F005         	goto	l2757
  1687  000CF4                     u1870:
  1688  000CF4  BE37               	btfsc	(utoa@p+1)^0,7,c
  1689  000CF6  EF87  F006         	goto	u1880
  1690  000CFA  5037               	movf	(utoa@p+1)^0,w,c
  1691  000CFC  E106               	bnz	u1881
  1692  000CFE  0436               	decf	utoa@p^0,w,c
  1693  000D00  B0D8               	btfsc	status,0,c
  1694  000D02  EF85  F006         	goto	u1881
  1695  000D06  EF87  F006         	goto	u1880
  1696  000D0A                     u1881:
  1697  000D0A  EFEC  F005         	goto	l2757
  1698  000D0E                     u1880:
  1699  000D0E  BE39               	btfsc	(utoa@w+1)^0,7,c
  1700  000D10  EF92  F006         	goto	u1891
  1701  000D14  5039               	movf	(utoa@w+1)^0,w,c
  1702  000D16  E108               	bnz	u1890
  1703  000D18  0438               	decf	utoa@w^0,w,c
  1704  000D1A  A0D8               	btfss	status,0,c
  1705  000D1C  EF92  F006         	goto	u1891
  1706  000D20  EF94  F006         	goto	u1890
  1707  000D24                     u1891:
  1708  000D24  EF9B  F006         	goto	l2777
  1709  000D28                     u1890:
  1710  000D28  B252               	btfsc	_flags^0,1,c
  1711  000D2A  EF99  F006         	goto	u1901
  1712  000D2E  EF9B  F006         	goto	u1900
  1713  000D32                     u1901:
  1714  000D32  EFEC  F005         	goto	l2757
  1715  000D36                     u1900:
  1716  000D36                     l2777:
  1717                           
  1718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1719  000D36  C024  F019         	movff	utoa@fp,pad@fp
  1720  000D3A  C025  F01A         	movff	utoa@fp+1,pad@fp+1
  1721  000D3E  0E68               	movlw	low _dbuf
  1722  000D40  2442               	addwf	utoa@i^0,w,c
  1723  000D42  6E1B               	movwf	pad@buf^0,c
  1724  000D44  0E00               	movlw	high _dbuf
  1725  000D46  2043               	addwfc	(utoa@i+1)^0,w,c
  1726  000D48  6E1C               	movwf	(pad@buf+1)^0,c
  1727  000D4A  C038  F01D         	movff	utoa@w,pad@p
  1728  000D4E  C039  F01E         	movff	utoa@w+1,pad@p+1
  1729  000D52  ECC1  F009         	call	_pad	;wreg free
  1730  000D56  C019  F024         	movff	?_pad,?_utoa
  1731  000D5A  C01A  F025         	movff	?_pad+1,?_utoa+1
  1732  000D5E  0012               	return		;funcret
  1733  000D60                     __end_of_utoa:
  1734                           	opt callstack 0
  1735                           
  1736 ;; *************** function _pad *****************
  1737 ;; Defined at:
  1738 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  1741 ;;		 -> sprintf@f(6), 
  1742 ;;  buf             2   26[COMRAM] PTR unsigned char 
  1743 ;;		 -> dbuf(32), 
  1744 ;;  p               2   28[COMRAM] int 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  w               2   33[COMRAM] int 
  1747 ;;  i               2   31[COMRAM] int 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2   24[COMRAM] int 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         6       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1760 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:       11 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:   10
  1764 ;; This function calls:
  1765 ;;		_fputc
  1766 ;;		_fputs
  1767 ;;		_strlen
  1768 ;; This function is called by:
  1769 ;;		_utoa
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text5
  1774  001382                     __ptext5:
  1775                           	opt callstack 0
  1776  001382                     _pad:
  1777                           	opt callstack 16
  1778  001382                     
  1779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1780  001382  A052               	btfss	_flags^0,0,c
  1781  001384  EFC6  F009         	goto	u1691
  1782  001388  EFC8  F009         	goto	u1690
  1783  00138C                     u1691:
  1784  00138C  EFD2  F009         	goto	l2667
  1785  001390                     u1690:
  1786  001390                     
  1787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1788  001390  C01B  F012         	movff	pad@buf,fputs@s
  1789  001394  C01C  F013         	movff	pad@buf+1,fputs@s+1
  1790  001398  C019  F014         	movff	pad@fp,fputs@fp
  1791  00139C  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  1792  0013A0  EC92  F00B         	call	_fputs	;wreg free
  1793  0013A4                     l2667:
  1794                           
  1795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1796  0013A4  BE1E               	btfsc	(pad@p+1)^0,7,c
  1797  0013A6  EFD7  F009         	goto	u1701
  1798  0013AA  EFD9  F009         	goto	u1700
  1799  0013AE                     u1701:
  1800  0013AE  EFDF  F009         	goto	l2671
  1801  0013B2                     u1700:
  1802  0013B2  C01D  F022         	movff	pad@p,pad@w
  1803  0013B6  C01E  F023         	movff	pad@p+1,pad@w+1
  1804  0013BA  EFE3  F009         	goto	l332
  1805  0013BE                     l2671:
  1806  0013BE  0E00               	movlw	0
  1807  0013C0  6E23               	movwf	(pad@w+1)^0,c
  1808  0013C2  0E00               	movlw	0
  1809  0013C4  6E22               	movwf	pad@w^0,c
  1810  0013C6                     l332:
  1811                           
  1812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1813  0013C6  0E00               	movlw	0
  1814  0013C8  6E21               	movwf	(pad@i+1)^0,c
  1815  0013CA  0E00               	movlw	0
  1816  0013CC  6E20               	movwf	pad@i^0,c
  1817                           
  1818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1819  0013CE  EFF5  F009         	goto	l2677
  1820  0013D2                     l2673:
  1821                           
  1822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1823  0013D2  0E00               	movlw	0
  1824  0013D4  6E0A               	movwf	(fputc@c+1)^0,c
  1825  0013D6  0E20               	movlw	32
  1826  0013D8  6E09               	movwf	fputc@c^0,c
  1827  0013DA  C019  F00B         	movff	pad@fp,fputc@fp
  1828  0013DE  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  1829  0013E2  EC5C  F009         	call	_fputc	;wreg free
  1830  0013E6                     
  1831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1832  0013E6  4A20               	infsnz	pad@i^0,f,c
  1833  0013E8  2A21               	incf	(pad@i+1)^0,f,c
  1834  0013EA                     l2677:
  1835                           
  1836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1837  0013EA  5022               	movf	pad@w^0,w,c
  1838  0013EC  5C20               	subwf	pad@i^0,w,c
  1839  0013EE  5021               	movf	(pad@i+1)^0,w,c
  1840  0013F0  0A80               	xorlw	128
  1841  0013F2  6E1F               	movwf	??_pad^0,c
  1842  0013F4  5023               	movf	(pad@w+1)^0,w,c
  1843  0013F6  0A80               	xorlw	128
  1844  0013F8  581F               	subwfb	??_pad^0,w,c
  1845  0013FA  A0D8               	btfss	status,0,c
  1846  0013FC  EF02  F00A         	goto	u1711
  1847  001400  EF04  F00A         	goto	u1710
  1848  001404                     u1711:
  1849  001404  EFE9  F009         	goto	l2673
  1850  001408                     u1710:
  1851  001408                     
  1852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1853  001408  B052               	btfsc	_flags^0,0,c
  1854  00140A  EF09  F00A         	goto	u1721
  1855  00140E  EF0B  F00A         	goto	u1720
  1856  001412                     u1721:
  1857  001412  EF15  F00A         	goto	l2681
  1858  001416                     u1720:
  1859  001416                     
  1860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1861  001416  C01B  F012         	movff	pad@buf,fputs@s
  1862  00141A  C01C  F013         	movff	pad@buf+1,fputs@s+1
  1863  00141E  C019  F014         	movff	pad@fp,fputs@fp
  1864  001422  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  1865  001426  EC92  F00B         	call	_fputs	;wreg free
  1866  00142A                     l2681:
  1867                           
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1869  00142A  C01B  F009         	movff	pad@buf,strlen@s
  1870  00142E  C01C  F00A         	movff	pad@buf+1,strlen@s+1
  1871  001432  EC0E  F00C         	call	_strlen	;wreg free
  1872  001436  5022               	movf	pad@w^0,w,c
  1873  001438  2409               	addwf	?_strlen^0,w,c
  1874  00143A  6E19               	movwf	?_pad^0,c
  1875  00143C  5023               	movf	(pad@w+1)^0,w,c
  1876  00143E  200A               	addwfc	(?_strlen+1)^0,w,c
  1877  001440  6E1A               	movwf	(?_pad+1)^0,c
  1878  001442  0012               	return		;funcret
  1879  001444                     __end_of_pad:
  1880                           	opt callstack 0
  1881                           
  1882 ;; *************** function _strlen *****************
  1883 ;; Defined at:
  1884 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  s               2    8[COMRAM] PTR const unsigned char 
  1887 ;;		 -> dbuf(32), 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  a               2   10[COMRAM] PTR const unsigned char 
  1890 ;;		 -> dbuf(32), 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2    8[COMRAM] unsigned int 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1900 ;;      Params:         2       0       0       0       0       0       0       0       0
  1901 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1903 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1904 ;;Total ram usage:        4 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    7
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_pad
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text6
  1915  00181C                     __ptext6:
  1916                           	opt callstack 0
  1917  00181C                     _strlen:
  1918                           	opt callstack 18
  1919  00181C  C009  F00B         	movff	strlen@s,strlen@a
  1920  001820  C00A  F00C         	movff	strlen@s+1,strlen@a+1
  1921  001824  EF16  F00C         	goto	l2657
  1922  001828                     l2655:
  1923  001828  4A09               	infsnz	strlen@s^0,f,c
  1924  00182A  2A0A               	incf	(strlen@s+1)^0,f,c
  1925  00182C                     l2657:
  1926  00182C  C009  FFD9         	movff	strlen@s,fsr2l
  1927  001830  C00A  FFDA         	movff	strlen@s+1,fsr2h
  1928  001834  50DF               	movf	indf2,w,c
  1929  001836  A4D8               	btfss	status,2,c
  1930  001838  EF20  F00C         	goto	u1681
  1931  00183C  EF22  F00C         	goto	u1680
  1932  001840                     u1681:
  1933  001840  EF14  F00C         	goto	l2655
  1934  001844                     u1680:
  1935  001844  500B               	movf	strlen@a^0,w,c
  1936  001846  5C09               	subwf	strlen@s^0,w,c
  1937  001848  6E09               	movwf	?_strlen^0,c
  1938  00184A  500C               	movf	(strlen@a+1)^0,w,c
  1939  00184C  580A               	subwfb	(strlen@s+1)^0,w,c
  1940  00184E  6E0A               	movwf	(?_strlen+1)^0,c
  1941  001850  0012               	return		;funcret
  1942  001852                     __end_of_strlen:
  1943                           	opt callstack 0
  1944                           
  1945 ;; *************** function _fputs *****************
  1946 ;; Defined at:
  1947 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  s               2   17[COMRAM] PTR const unsigned char 
  1950 ;;		 -> dbuf(32), 
  1951 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  1952 ;;		 -> sprintf@f(6), 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  i               2   22[COMRAM] int 
  1955 ;;  c               1   21[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2   17[COMRAM] int 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1965 ;;      Params:         4       0       0       0       0       0       0       0       0
  1966 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1968 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1969 ;;Total ram usage:        7 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    9
  1972 ;; This function calls:
  1973 ;;		_fputc
  1974 ;; This function is called by:
  1975 ;;		_pad
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text7
  1980  001724                     __ptext7:
  1981                           	opt callstack 0
  1982  001724                     _fputs:
  1983                           	opt callstack 16
  1984  001724  0E00               	movlw	0
  1985  001726  6E18               	movwf	(fputs@i+1)^0,c
  1986  001728  0E00               	movlw	0
  1987  00172A  6E17               	movwf	fputs@i^0,c
  1988  00172C  EFA3  F00B         	goto	l2651
  1989  001730                     l2647:
  1990  001730  C016  F009         	movff	fputs@c,fputc@c
  1991  001734  6A0A               	clrf	(fputc@c+1)^0,c
  1992  001736  C014  F00B         	movff	fputs@fp,fputc@fp
  1993  00173A  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  1994  00173E  EC5C  F009         	call	_fputc	;wreg free
  1995  001742  4A17               	infsnz	fputs@i^0,f,c
  1996  001744  2A18               	incf	(fputs@i+1)^0,f,c
  1997  001746                     l2651:
  1998  001746  5017               	movf	fputs@i^0,w,c
  1999  001748  2412               	addwf	fputs@s^0,w,c
  2000  00174A  6ED9               	movwf	fsr2l,c
  2001  00174C  5018               	movf	(fputs@i+1)^0,w,c
  2002  00174E  2013               	addwfc	(fputs@s+1)^0,w,c
  2003  001750  6EDA               	movwf	fsr2h,c
  2004  001752  50DF               	movf	indf2,w,c
  2005  001754  6E16               	movwf	fputs@c^0,c
  2006  001756  5016               	movf	fputs@c^0,w,c
  2007  001758  A4D8               	btfss	status,2,c
  2008  00175A  EFB1  F00B         	goto	u1671
  2009  00175E  EFB3  F00B         	goto	u1670
  2010  001762                     u1671:
  2011  001762  EF98  F00B         	goto	l2647
  2012  001766                     u1670:
  2013  001766  0012               	return		;funcret
  2014  001768                     __end_of_fputs:
  2015                           	opt callstack 0
  2016                           
  2017 ;; *************** function _fputc *****************
  2018 ;; Defined at:
  2019 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  c               2    8[COMRAM] int 
  2022 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2023 ;;		 -> sprintf@f(6), 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2    8[COMRAM] int 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2035 ;;      Params:         4       0       0       0       0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2037 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2038 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2039 ;;Total ram usage:        9 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    8
  2042 ;; This function calls:
  2043 ;;		_putch
  2044 ;; This function is called by:
  2045 ;;		_pad
  2046 ;;		_vfpfcnvrt
  2047 ;;		_fputs
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text8
  2052  0012B8                     __ptext8:
  2053                           	opt callstack 0
  2054  0012B8                     _fputc:
  2055                           	opt callstack 16
  2056  0012B8  500B               	movf	fputc@fp^0,w,c
  2057  0012BA  100C               	iorwf	(fputc@fp+1)^0,w,c
  2058  0012BC  B4D8               	btfsc	status,2,c
  2059  0012BE  EF63  F009         	goto	u1631
  2060  0012C2  EF65  F009         	goto	u1630
  2061  0012C6                     u1631:
  2062  0012C6  EF6E  F009         	goto	l2635
  2063  0012CA                     u1630:
  2064  0012CA  500B               	movf	fputc@fp^0,w,c
  2065  0012CC  100C               	iorwf	(fputc@fp+1)^0,w,c
  2066  0012CE  A4D8               	btfss	status,2,c
  2067  0012D0  EF6C  F009         	goto	u1641
  2068  0012D4  EF6E  F009         	goto	u1640
  2069  0012D8                     u1641:
  2070  0012D8  EF73  F009         	goto	l2637
  2071  0012DC                     u1640:
  2072  0012DC                     l2635:
  2073  0012DC  5009               	movf	fputc@c^0,w,c
  2074  0012DE  ECFB  F00C         	call	_putch
  2075  0012E2  EFC0  F009         	goto	l1117
  2076  0012E6                     l2637:
  2077  0012E6  EE20 F004          	lfsr	2,4
  2078  0012EA  500B               	movf	fputc@fp^0,w,c
  2079  0012EC  26D9               	addwf	fsr2l,f,c
  2080  0012EE  500C               	movf	(fputc@fp+1)^0,w,c
  2081  0012F0  22DA               	addwfc	fsr2h,f,c
  2082  0012F2  50DE               	movf	postinc2,w,c
  2083  0012F4  10DE               	iorwf	postinc2,w,c
  2084  0012F6  B4D8               	btfsc	status,2,c
  2085  0012F8  EF80  F009         	goto	u1651
  2086  0012FC  EF82  F009         	goto	u1650
  2087  001300                     u1651:
  2088  001300  EF9D  F009         	goto	l2641
  2089  001304                     u1650:
  2090  001304  EE20 F004          	lfsr	2,4
  2091  001308  500B               	movf	fputc@fp^0,w,c
  2092  00130A  26D9               	addwf	fsr2l,f,c
  2093  00130C  500C               	movf	(fputc@fp+1)^0,w,c
  2094  00130E  22DA               	addwfc	fsr2h,f,c
  2095  001310  EE10 F002          	lfsr	1,2
  2096  001314  500B               	movf	fputc@fp^0,w,c
  2097  001316  26E1               	addwf	fsr1l,f,c
  2098  001318  500C               	movf	(fputc@fp+1)^0,w,c
  2099  00131A  22E2               	addwfc	fsr1h,f,c
  2100  00131C  50DE               	movf	postinc2,w,c
  2101  00131E  5CE6               	subwf	postinc1,w,c
  2102  001320  50E6               	movf	postinc1,w,c
  2103  001322  0A80               	xorlw	128
  2104  001324  6E11               	movwf	(??_fputc+4)^0,c
  2105  001326  50DE               	movf	postinc2,w,c
  2106  001328  0A80               	xorlw	128
  2107  00132A  5811               	subwfb	(??_fputc+4)^0,w,c
  2108  00132C  B0D8               	btfsc	status,0,c
  2109  00132E  EF9B  F009         	goto	u1661
  2110  001332  EF9D  F009         	goto	u1660
  2111  001336                     u1661:
  2112  001336  EFC0  F009         	goto	l1117
  2113  00133A                     u1660:
  2114  00133A                     l2641:
  2115  00133A  EE20 F002          	lfsr	2,2
  2116  00133E  500B               	movf	fputc@fp^0,w,c
  2117  001340  26D9               	addwf	fsr2l,f,c
  2118  001342  500C               	movf	(fputc@fp+1)^0,w,c
  2119  001344  22DA               	addwfc	fsr2h,f,c
  2120  001346  CFDE F00D          	movff	postinc2,??_fputc
  2121  00134A  CFDD F00E          	movff	postdec2,??_fputc+1
  2122  00134E  C00B  FFD9         	movff	fputc@fp,fsr2l
  2123  001352  C00C  FFDA         	movff	fputc@fp+1,fsr2h
  2124  001356  CFDE F00F          	movff	postinc2,??_fputc+2
  2125  00135A  CFDD F010          	movff	postdec2,??_fputc+3
  2126  00135E  500D               	movf	??_fputc^0,w,c
  2127  001360  240F               	addwf	(??_fputc+2)^0,w,c
  2128  001362  6ED9               	movwf	fsr2l,c
  2129  001364  500E               	movf	(??_fputc+1)^0,w,c
  2130  001366  2010               	addwfc	(??_fputc+3)^0,w,c
  2131  001368  6EDA               	movwf	fsr2h,c
  2132  00136A  C009  FFDF         	movff	fputc@c,indf2
  2133  00136E  EE20 F002          	lfsr	2,2
  2134  001372  500B               	movf	fputc@fp^0,w,c
  2135  001374  26D9               	addwf	fsr2l,f,c
  2136  001376  500C               	movf	(fputc@fp+1)^0,w,c
  2137  001378  22DA               	addwfc	fsr2h,f,c
  2138  00137A  2ADE               	incf	postinc2,f,c
  2139  00137C  0E00               	movlw	0
  2140  00137E  22DD               	addwfc	postdec2,f,c
  2141  001380                     l1117:
  2142  001380  0012               	return		;funcret
  2143  001382                     __end_of_fputc:
  2144                           	opt callstack 0
  2145                           
  2146 ;; *************** function _putch *****************
  2147 ;; Defined at:
  2148 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  c               1    wreg     unsigned char 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  c               1    0[COMRAM] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2162 ;;      Params:         0       0       0       0       0       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2165 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2166 ;;Total ram usage:        0 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    7
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_fputc
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text9
  2177  0019F6                     __ptext9:
  2178                           	opt callstack 0
  2179  0019F6                     _putch:
  2180                           	opt callstack 16
  2181  0019F6  0012               	return		;funcret
  2182  0019F8                     __end_of_putch:
  2183                           	opt callstack 0
  2184                           
  2185 ;; *************** function ___lomod *****************
  2186 ;; Defined at:
  2187 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  dividend        8    8[COMRAM] unsigned long long 
  2190 ;;  divisor         8   16[COMRAM] unsigned long long 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  counter         1   24[COMRAM] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  8    8[COMRAM] unsigned long long 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2202 ;;      Params:        16       0       0       0       0       0       0       0       0
  2203 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2205 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2206 ;;Total ram usage:       17 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    7
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_utoa
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text10
  2217  0011E8                     __ptext10:
  2218                           	opt callstack 0
  2219  0011E8                     ___lomod:
  2220                           	opt callstack 19
  2221  0011E8  5011               	movf	___lomod@divisor^0,w,c
  2222  0011EA  1012               	iorwf	(___lomod@divisor+1)^0,w,c
  2223  0011EC  1013               	iorwf	(___lomod@divisor+2)^0,w,c
  2224  0011EE  1014               	iorwf	(___lomod@divisor+3)^0,w,c
  2225  0011F0  1015               	iorwf	(___lomod@divisor+4)^0,w,c
  2226  0011F2  1016               	iorwf	(___lomod@divisor+5)^0,w,c
  2227  0011F4  1017               	iorwf	(___lomod@divisor+6)^0,w,c
  2228  0011F6  1018               	iorwf	(___lomod@divisor+7)^0,w,c
  2229  0011F8  B4D8               	btfsc	status,2,c
  2230  0011FA  EF01  F009         	goto	u1791
  2231  0011FE  EF03  F009         	goto	u1790
  2232  001202                     u1791:
  2233  001202  EF4B  F009         	goto	l837
  2234  001206                     u1790:
  2235  001206  0E01               	movlw	1
  2236  001208  6E19               	movwf	___lomod@counter^0,c
  2237  00120A  EF11  F009         	goto	l2723
  2238  00120E                     l2721:
  2239  00120E  90D8               	bcf	status,0,c
  2240  001210  3611               	rlcf	___lomod@divisor^0,f,c
  2241  001212  3612               	rlcf	(___lomod@divisor+1)^0,f,c
  2242  001214  3613               	rlcf	(___lomod@divisor+2)^0,f,c
  2243  001216  3614               	rlcf	(___lomod@divisor+3)^0,f,c
  2244  001218  3615               	rlcf	(___lomod@divisor+4)^0,f,c
  2245  00121A  3616               	rlcf	(___lomod@divisor+5)^0,f,c
  2246  00121C  3617               	rlcf	(___lomod@divisor+6)^0,f,c
  2247  00121E  3618               	rlcf	(___lomod@divisor+7)^0,f,c
  2248  001220  2A19               	incf	___lomod@counter^0,f,c
  2249  001222                     l2723:
  2250  001222  AE18               	btfss	(___lomod@divisor+7)^0,7,c
  2251  001224  EF16  F009         	goto	u1801
  2252  001228  EF18  F009         	goto	u1800
  2253  00122C                     u1801:
  2254  00122C  EF07  F009         	goto	l2721
  2255  001230                     u1800:
  2256  001230                     l2725:
  2257  001230  5011               	movf	___lomod@divisor^0,w,c
  2258  001232  5C09               	subwf	___lomod@dividend^0,w,c
  2259  001234  5012               	movf	(___lomod@divisor+1)^0,w,c
  2260  001236  580A               	subwfb	(___lomod@dividend+1)^0,w,c
  2261  001238  5013               	movf	(___lomod@divisor+2)^0,w,c
  2262  00123A  580B               	subwfb	(___lomod@dividend+2)^0,w,c
  2263  00123C  5014               	movf	(___lomod@divisor+3)^0,w,c
  2264  00123E  580C               	subwfb	(___lomod@dividend+3)^0,w,c
  2265  001240  5015               	movf	(___lomod@divisor+4)^0,w,c
  2266  001242  580D               	subwfb	(___lomod@dividend+4)^0,w,c
  2267  001244  5016               	movf	(___lomod@divisor+5)^0,w,c
  2268  001246  580E               	subwfb	(___lomod@dividend+5)^0,w,c
  2269  001248  5017               	movf	(___lomod@divisor+6)^0,w,c
  2270  00124A  580F               	subwfb	(___lomod@dividend+6)^0,w,c
  2271  00124C  5018               	movf	(___lomod@divisor+7)^0,w,c
  2272  00124E  5810               	subwfb	(___lomod@dividend+7)^0,w,c
  2273  001250  A0D8               	btfss	status,0,c
  2274  001252  EF2D  F009         	goto	u1811
  2275  001256  EF2F  F009         	goto	u1810
  2276  00125A                     u1811:
  2277  00125A  EF3F  F009         	goto	l2729
  2278  00125E                     u1810:
  2279  00125E  5011               	movf	___lomod@divisor^0,w,c
  2280  001260  5E09               	subwf	___lomod@dividend^0,f,c
  2281  001262  5012               	movf	(___lomod@divisor+1)^0,w,c
  2282  001264  5A0A               	subwfb	(___lomod@dividend+1)^0,f,c
  2283  001266  5013               	movf	(___lomod@divisor+2)^0,w,c
  2284  001268  5A0B               	subwfb	(___lomod@dividend+2)^0,f,c
  2285  00126A  5014               	movf	(___lomod@divisor+3)^0,w,c
  2286  00126C  5A0C               	subwfb	(___lomod@dividend+3)^0,f,c
  2287  00126E  5015               	movf	(___lomod@divisor+4)^0,w,c
  2288  001270  5A0D               	subwfb	(___lomod@dividend+4)^0,f,c
  2289  001272  5016               	movf	(___lomod@divisor+5)^0,w,c
  2290  001274  5A0E               	subwfb	(___lomod@dividend+5)^0,f,c
  2291  001276  5017               	movf	(___lomod@divisor+6)^0,w,c
  2292  001278  5A0F               	subwfb	(___lomod@dividend+6)^0,f,c
  2293  00127A  5018               	movf	(___lomod@divisor+7)^0,w,c
  2294  00127C  5A10               	subwfb	(___lomod@dividend+7)^0,f,c
  2295  00127E                     l2729:
  2296  00127E  90D8               	bcf	status,0,c
  2297  001280  3218               	rrcf	(___lomod@divisor+7)^0,f,c
  2298  001282  3217               	rrcf	(___lomod@divisor+6)^0,f,c
  2299  001284  3216               	rrcf	(___lomod@divisor+5)^0,f,c
  2300  001286  3215               	rrcf	(___lomod@divisor+4)^0,f,c
  2301  001288  3214               	rrcf	(___lomod@divisor+3)^0,f,c
  2302  00128A  3213               	rrcf	(___lomod@divisor+2)^0,f,c
  2303  00128C  3212               	rrcf	(___lomod@divisor+1)^0,f,c
  2304  00128E  3211               	rrcf	___lomod@divisor^0,f,c
  2305  001290  2E19               	decfsz	___lomod@counter^0,f,c
  2306  001292  EF18  F009         	goto	l2725
  2307  001296                     l837:
  2308  001296  C009  F009         	movff	___lomod@dividend,?___lomod
  2309  00129A  C00A  F00A         	movff	___lomod@dividend+1,?___lomod+1
  2310  00129E  C00B  F00B         	movff	___lomod@dividend+2,?___lomod+2
  2311  0012A2  C00C  F00C         	movff	___lomod@dividend+3,?___lomod+3
  2312  0012A6  C00D  F00D         	movff	___lomod@dividend+4,?___lomod+4
  2313  0012AA  C00E  F00E         	movff	___lomod@dividend+5,?___lomod+5
  2314  0012AE  C00F  F00F         	movff	___lomod@dividend+6,?___lomod+6
  2315  0012B2  C010  F010         	movff	___lomod@dividend+7,?___lomod+7
  2316  0012B6  0012               	return		;funcret
  2317  0012B8                     __end_of___lomod:
  2318                           	opt callstack 0
  2319                           
  2320 ;; *************** function ___lodiv *****************
  2321 ;; Defined at:
  2322 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  dividend        8    8[COMRAM] unsigned long long 
  2325 ;;  divisor         8   16[COMRAM] unsigned long long 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  quotient        8   24[COMRAM] unsigned long long 
  2328 ;;  counter         1   32[COMRAM] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  8    8[COMRAM] unsigned long long 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2338 ;;      Params:        16       0       0       0       0       0       0       0       0
  2339 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2341 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2342 ;;Total ram usage:       25 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    7
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_utoa
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text11
  2353  00100A                     __ptext11:
  2354                           	opt callstack 0
  2355  00100A                     ___lodiv:
  2356                           	opt callstack 19
  2357  00100A  EE20  F019         	lfsr	2,___lodiv@quotient
  2358  00100E  0E07               	movlw	7
  2359  001010                     u1751:
  2360  001010  6ADE               	clrf	postinc2,c
  2361  001012  06E8               	decf	wreg,f,c
  2362  001014  E2FD               	bc	u1751
  2363  001016  5011               	movf	___lodiv@divisor^0,w,c
  2364  001018  1012               	iorwf	(___lodiv@divisor+1)^0,w,c
  2365  00101A  1013               	iorwf	(___lodiv@divisor+2)^0,w,c
  2366  00101C  1014               	iorwf	(___lodiv@divisor+3)^0,w,c
  2367  00101E  1015               	iorwf	(___lodiv@divisor+4)^0,w,c
  2368  001020  1016               	iorwf	(___lodiv@divisor+5)^0,w,c
  2369  001022  1017               	iorwf	(___lodiv@divisor+6)^0,w,c
  2370  001024  1018               	iorwf	(___lodiv@divisor+7)^0,w,c
  2371  001026  B4D8               	btfsc	status,2,c
  2372  001028  EF18  F008         	goto	u1761
  2373  00102C  EF1A  F008         	goto	u1760
  2374  001030                     u1761:
  2375  001030  EF6C  F008         	goto	l827
  2376  001034                     u1760:
  2377  001034  0E01               	movlw	1
  2378  001036  6E21               	movwf	___lodiv@counter^0,c
  2379  001038  EF28  F008         	goto	l2703
  2380  00103C                     l2701:
  2381  00103C  90D8               	bcf	status,0,c
  2382  00103E  3611               	rlcf	___lodiv@divisor^0,f,c
  2383  001040  3612               	rlcf	(___lodiv@divisor+1)^0,f,c
  2384  001042  3613               	rlcf	(___lodiv@divisor+2)^0,f,c
  2385  001044  3614               	rlcf	(___lodiv@divisor+3)^0,f,c
  2386  001046  3615               	rlcf	(___lodiv@divisor+4)^0,f,c
  2387  001048  3616               	rlcf	(___lodiv@divisor+5)^0,f,c
  2388  00104A  3617               	rlcf	(___lodiv@divisor+6)^0,f,c
  2389  00104C  3618               	rlcf	(___lodiv@divisor+7)^0,f,c
  2390  00104E  2A21               	incf	___lodiv@counter^0,f,c
  2391  001050                     l2703:
  2392  001050  AE18               	btfss	(___lodiv@divisor+7)^0,7,c
  2393  001052  EF2D  F008         	goto	u1771
  2394  001056  EF2F  F008         	goto	u1770
  2395  00105A                     u1771:
  2396  00105A  EF1E  F008         	goto	l2701
  2397  00105E                     u1770:
  2398  00105E                     l2705:
  2399  00105E  90D8               	bcf	status,0,c
  2400  001060  3619               	rlcf	___lodiv@quotient^0,f,c
  2401  001062  361A               	rlcf	(___lodiv@quotient+1)^0,f,c
  2402  001064  361B               	rlcf	(___lodiv@quotient+2)^0,f,c
  2403  001066  361C               	rlcf	(___lodiv@quotient+3)^0,f,c
  2404  001068  361D               	rlcf	(___lodiv@quotient+4)^0,f,c
  2405  00106A  361E               	rlcf	(___lodiv@quotient+5)^0,f,c
  2406  00106C  361F               	rlcf	(___lodiv@quotient+6)^0,f,c
  2407  00106E  3620               	rlcf	(___lodiv@quotient+7)^0,f,c
  2408  001070  5011               	movf	___lodiv@divisor^0,w,c
  2409  001072  5C09               	subwf	___lodiv@dividend^0,w,c
  2410  001074  5012               	movf	(___lodiv@divisor+1)^0,w,c
  2411  001076  580A               	subwfb	(___lodiv@dividend+1)^0,w,c
  2412  001078  5013               	movf	(___lodiv@divisor+2)^0,w,c
  2413  00107A  580B               	subwfb	(___lodiv@dividend+2)^0,w,c
  2414  00107C  5014               	movf	(___lodiv@divisor+3)^0,w,c
  2415  00107E  580C               	subwfb	(___lodiv@dividend+3)^0,w,c
  2416  001080  5015               	movf	(___lodiv@divisor+4)^0,w,c
  2417  001082  580D               	subwfb	(___lodiv@dividend+4)^0,w,c
  2418  001084  5016               	movf	(___lodiv@divisor+5)^0,w,c
  2419  001086  580E               	subwfb	(___lodiv@dividend+5)^0,w,c
  2420  001088  5017               	movf	(___lodiv@divisor+6)^0,w,c
  2421  00108A  580F               	subwfb	(___lodiv@dividend+6)^0,w,c
  2422  00108C  5018               	movf	(___lodiv@divisor+7)^0,w,c
  2423  00108E  5810               	subwfb	(___lodiv@dividend+7)^0,w,c
  2424  001090  A0D8               	btfss	status,0,c
  2425  001092  EF4D  F008         	goto	u1781
  2426  001096  EF4F  F008         	goto	u1780
  2427  00109A                     u1781:
  2428  00109A  EF60  F008         	goto	l2713
  2429  00109E                     u1780:
  2430  00109E  5011               	movf	___lodiv@divisor^0,w,c
  2431  0010A0  5E09               	subwf	___lodiv@dividend^0,f,c
  2432  0010A2  5012               	movf	(___lodiv@divisor+1)^0,w,c
  2433  0010A4  5A0A               	subwfb	(___lodiv@dividend+1)^0,f,c
  2434  0010A6  5013               	movf	(___lodiv@divisor+2)^0,w,c
  2435  0010A8  5A0B               	subwfb	(___lodiv@dividend+2)^0,f,c
  2436  0010AA  5014               	movf	(___lodiv@divisor+3)^0,w,c
  2437  0010AC  5A0C               	subwfb	(___lodiv@dividend+3)^0,f,c
  2438  0010AE  5015               	movf	(___lodiv@divisor+4)^0,w,c
  2439  0010B0  5A0D               	subwfb	(___lodiv@dividend+4)^0,f,c
  2440  0010B2  5016               	movf	(___lodiv@divisor+5)^0,w,c
  2441  0010B4  5A0E               	subwfb	(___lodiv@dividend+5)^0,f,c
  2442  0010B6  5017               	movf	(___lodiv@divisor+6)^0,w,c
  2443  0010B8  5A0F               	subwfb	(___lodiv@dividend+6)^0,f,c
  2444  0010BA  5018               	movf	(___lodiv@divisor+7)^0,w,c
  2445  0010BC  5A10               	subwfb	(___lodiv@dividend+7)^0,f,c
  2446  0010BE  8019               	bsf	___lodiv@quotient^0,0,c
  2447  0010C0                     l2713:
  2448  0010C0  90D8               	bcf	status,0,c
  2449  0010C2  3218               	rrcf	(___lodiv@divisor+7)^0,f,c
  2450  0010C4  3217               	rrcf	(___lodiv@divisor+6)^0,f,c
  2451  0010C6  3216               	rrcf	(___lodiv@divisor+5)^0,f,c
  2452  0010C8  3215               	rrcf	(___lodiv@divisor+4)^0,f,c
  2453  0010CA  3214               	rrcf	(___lodiv@divisor+3)^0,f,c
  2454  0010CC  3213               	rrcf	(___lodiv@divisor+2)^0,f,c
  2455  0010CE  3212               	rrcf	(___lodiv@divisor+1)^0,f,c
  2456  0010D0  3211               	rrcf	___lodiv@divisor^0,f,c
  2457  0010D2  2E21               	decfsz	___lodiv@counter^0,f,c
  2458  0010D4  EF2F  F008         	goto	l2705
  2459  0010D8                     l827:
  2460  0010D8  C019  F009         	movff	___lodiv@quotient,?___lodiv
  2461  0010DC  C01A  F00A         	movff	___lodiv@quotient+1,?___lodiv+1
  2462  0010E0  C01B  F00B         	movff	___lodiv@quotient+2,?___lodiv+2
  2463  0010E4  C01C  F00C         	movff	___lodiv@quotient+3,?___lodiv+3
  2464  0010E8  C01D  F00D         	movff	___lodiv@quotient+4,?___lodiv+4
  2465  0010EC  C01E  F00E         	movff	___lodiv@quotient+5,?___lodiv+5
  2466  0010F0  C01F  F00F         	movff	___lodiv@quotient+6,?___lodiv+6
  2467  0010F4  C020  F010         	movff	___lodiv@quotient+7,?___lodiv+7
  2468  0010F8  0012               	return		;funcret
  2469  0010FA                     __end_of___lodiv:
  2470                           	opt callstack 0
  2471                           
  2472 ;; *************** function _atoi *****************
  2473 ;; Defined at:
  2474 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2477 ;;		 -> STR_4(5), STR_3(5), STR_2(5), 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  n               2   28[COMRAM] int 
  2480 ;;  neg             2   21[COMRAM] int 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  2   15[COMRAM] int 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2490 ;;      Params:         2       0       0       0       0       0       0       0       0
  2491 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2492 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2493 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2494 ;;Total ram usage:       15 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    8
  2497 ;; This function calls:
  2498 ;;		___wmul
  2499 ;;		_isdigit
  2500 ;;		_isspace
  2501 ;; This function is called by:
  2502 ;;		_vfpfcnvrt
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text12
  2507  000D60                     __ptext12:
  2508                           	opt callstack 0
  2509  000D60                     _atoi:
  2510                           	opt callstack 19
  2511  000D60  0E00               	movlw	0
  2512  000D62  6E1E               	movwf	(atoi@n+1)^0,c
  2513  000D64  0E00               	movlw	0
  2514  000D66  6E1D               	movwf	atoi@n^0,c
  2515  000D68  0E00               	movlw	0
  2516  000D6A  6E17               	movwf	(atoi@neg+1)^0,c
  2517  000D6C  0E00               	movlw	0
  2518  000D6E  6E16               	movwf	atoi@neg^0,c
  2519  000D70  EFBC  F006         	goto	l2785
  2520  000D74                     l2783:
  2521  000D74  4A10               	infsnz	atoi@s^0,f,c
  2522  000D76  2A11               	incf	(atoi@s+1)^0,f,c
  2523  000D78                     l2785:
  2524  000D78  0E01               	movlw	1
  2525  000D7A  6E1C               	movwf	_atoi$1327^0,c
  2526  000D7C  C010  FFF6         	movff	atoi@s,tblptrl
  2527  000D80  C011  FFF7         	movff	atoi@s+1,tblptrh
  2528  000D84                     	if	0	;tblptru may be non-zero
  2529  000D84                     	endif
  2530  000D84                     	if	0	;tblptru may be non-zero
  2531  000D84                     	endif
  2532  000D84  0008               	tblrd		*
  2533  000D86  50F5               	movf	tablat,w,c
  2534  000D88  0A20               	xorlw	32
  2535  000D8A  B4D8               	btfsc	status,2,c
  2536  000D8C  EFCA  F006         	goto	u1911
  2537  000D90  EFCC  F006         	goto	u1910
  2538  000D94                     u1911:
  2539  000D94  EFE9  F006         	goto	l2793
  2540  000D98                     u1910:
  2541  000D98  0EF7               	movlw	247
  2542  000D9A  6E12               	movwf	??_atoi^0,c
  2543  000D9C  0EFF               	movlw	255
  2544  000D9E  6E13               	movwf	(??_atoi+1)^0,c
  2545  000DA0  C010  FFF6         	movff	atoi@s,tblptrl
  2546  000DA4  C011  FFF7         	movff	atoi@s+1,tblptrh
  2547  000DA8                     	if	0	;tblptru may be non-zero
  2548  000DA8                     	endif
  2549  000DA8                     	if	0	;tblptru may be non-zero
  2550  000DA8                     	endif
  2551  000DA8  0008               	tblrd		*
  2552  000DAA  50F5               	movf	tablat,w,c
  2553  000DAC  6E14               	movwf	(??_atoi+2)^0,c
  2554  000DAE  6A15               	clrf	(??_atoi+3)^0,c
  2555  000DB0  5012               	movf	??_atoi^0,w,c
  2556  000DB2  2614               	addwf	(??_atoi+2)^0,f,c
  2557  000DB4  5013               	movf	(??_atoi+1)^0,w,c
  2558  000DB6  2215               	addwfc	(??_atoi+3)^0,f,c
  2559  000DB8  5015               	movf	(??_atoi+3)^0,w,c
  2560  000DBA  E109               	bnz	u1920
  2561  000DBC  0E05               	movlw	5
  2562  000DBE  5C14               	subwf	(??_atoi+2)^0,w,c
  2563  000DC0  A0D8               	btfss	status,0,c
  2564  000DC2  EFE5  F006         	goto	u1921
  2565  000DC6  EFE7  F006         	goto	u1920
  2566  000DCA                     u1921:
  2567  000DCA  EFE9  F006         	goto	l2793
  2568  000DCE                     u1920:
  2569  000DCE  0E00               	movlw	0
  2570  000DD0  6E1C               	movwf	_atoi$1327^0,c
  2571  000DD2                     l2793:
  2572  000DD2  C01C  F018         	movff	_atoi$1327,_atoi$1326
  2573  000DD6  6A19               	clrf	(_atoi$1326+1)^0,c
  2574  000DD8  5018               	movf	_atoi$1326^0,w,c
  2575  000DDA  1019               	iorwf	(_atoi$1326+1)^0,w,c
  2576  000DDC  A4D8               	btfss	status,2,c
  2577  000DDE  EFF3  F006         	goto	u1931
  2578  000DE2  EFF5  F006         	goto	u1930
  2579  000DE6                     u1931:
  2580  000DE6  EFBA  F006         	goto	l2783
  2581  000DEA                     u1930:
  2582  000DEA  EFFF  F006         	goto	l2803
  2583  000DEE                     l2799:
  2584  000DEE  0E00               	movlw	0
  2585  000DF0  6E17               	movwf	(atoi@neg+1)^0,c
  2586  000DF2  0E01               	movlw	1
  2587  000DF4  6E16               	movwf	atoi@neg^0,c
  2588  000DF6                     l2801:
  2589  000DF6  4A10               	infsnz	atoi@s^0,f,c
  2590  000DF8  2A11               	incf	(atoi@s+1)^0,f,c
  2591  000DFA  EF34  F007         	goto	l2809
  2592  000DFE                     l2803:
  2593  000DFE  C010  FFF6         	movff	atoi@s,tblptrl
  2594  000E02  C011  FFF7         	movff	atoi@s+1,tblptrh
  2595  000E06                     	if	0	;tblptru may be non-zero
  2596  000E06                     	endif
  2597  000E06                     	if	0	;tblptru may be non-zero
  2598  000E06                     	endif
  2599  000E06  0008               	tblrd		*
  2600  000E08  50F5               	movf	tablat,w,c
  2601  000E0A  6E12               	movwf	??_atoi^0,c
  2602  000E0C  6A13               	clrf	(??_atoi+1)^0,c
  2603                           
  2604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2605                           ; Switch size 1, requested type "simple"
  2606                           ; Number of cases is 1, Range of values is 0 to 0
  2607                           ; switch strategies available:
  2608                           ; Name         Instructions Cycles
  2609                           ; simple_byte            4     3 (average)
  2610                           ;	Chosen strategy is simple_byte
  2611  000E0E  5013               	movf	(??_atoi+1)^0,w,c
  2612  000E10  0A00               	xorlw	0	; case 0
  2613  000E12  B4D8               	btfsc	status,2,c
  2614  000E14  EF0E  F007         	goto	l3055
  2615  000E18  EF34  F007         	goto	l2809
  2616  000E1C                     l3055:
  2617                           
  2618                           ; Switch size 1, requested type "simple"
  2619                           ; Number of cases is 2, Range of values is 43 to 45
  2620                           ; switch strategies available:
  2621                           ; Name         Instructions Cycles
  2622                           ; simple_byte            7     4 (average)
  2623                           ;	Chosen strategy is simple_byte
  2624  000E1C  5012               	movf	??_atoi^0,w,c
  2625  000E1E  0A2B               	xorlw	43	; case 43
  2626  000E20  B4D8               	btfsc	status,2,c
  2627  000E22  EFFB  F006         	goto	l2801
  2628  000E26  0A06               	xorlw	6	; case 45
  2629  000E28  B4D8               	btfsc	status,2,c
  2630  000E2A  EFF7  F006         	goto	l2799
  2631  000E2E  EF34  F007         	goto	l2809
  2632  000E32                     l2805:
  2633  000E32  C01D  F009         	movff	atoi@n,___wmul@multiplier
  2634  000E36  C01E  F00A         	movff	atoi@n+1,___wmul@multiplier+1
  2635  000E3A  0E00               	movlw	0
  2636  000E3C  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  2637  000E3E  0E0A               	movlw	10
  2638  000E40  6E0B               	movwf	___wmul@multiplicand^0,c
  2639  000E42  EC87  F00C         	call	___wmul	;wreg free
  2640  000E46  C010  FFF6         	movff	atoi@s,tblptrl
  2641  000E4A  C011  FFF7         	movff	atoi@s+1,tblptrh
  2642  000E4E                     	if	0	;tblptru may be non-zero
  2643  000E4E                     	endif
  2644  000E4E                     	if	0	;tblptru may be non-zero
  2645  000E4E                     	endif
  2646  000E4E  0008               	tblrd		*
  2647  000E50  50F5               	movf	tablat,w,c
  2648  000E52  5E09               	subwf	?___wmul^0,f,c
  2649  000E54  0E00               	movlw	0
  2650  000E56  5A0A               	subwfb	(?___wmul+1)^0,f,c
  2651  000E58  0E30               	movlw	48
  2652  000E5A  2409               	addwf	?___wmul^0,w,c
  2653  000E5C  6E1D               	movwf	atoi@n^0,c
  2654  000E5E  0E00               	movlw	0
  2655  000E60  200A               	addwfc	(?___wmul+1)^0,w,c
  2656  000E62  6E1E               	movwf	(atoi@n+1)^0,c
  2657  000E64  EFFB  F006         	goto	l2801
  2658  000E68                     l2809:
  2659  000E68  0ED0               	movlw	208
  2660  000E6A  6E12               	movwf	??_atoi^0,c
  2661  000E6C  0EFF               	movlw	255
  2662  000E6E  6E13               	movwf	(??_atoi+1)^0,c
  2663  000E70  C010  FFF6         	movff	atoi@s,tblptrl
  2664  000E74  C011  FFF7         	movff	atoi@s+1,tblptrh
  2665  000E78                     	if	0	;tblptru may be non-zero
  2666  000E78                     	endif
  2667  000E78                     	if	0	;tblptru may be non-zero
  2668  000E78                     	endif
  2669  000E78  0008               	tblrd		*
  2670  000E7A  50F5               	movf	tablat,w,c
  2671  000E7C  6E14               	movwf	(??_atoi+2)^0,c
  2672  000E7E  6A15               	clrf	(??_atoi+3)^0,c
  2673  000E80  5012               	movf	??_atoi^0,w,c
  2674  000E82  2614               	addwf	(??_atoi+2)^0,f,c
  2675  000E84  5013               	movf	(??_atoi+1)^0,w,c
  2676  000E86  2215               	addwfc	(??_atoi+3)^0,f,c
  2677  000E88  5015               	movf	(??_atoi+3)^0,w,c
  2678  000E8A  E10A               	bnz	u1940
  2679  000E8C  0E0A               	movlw	10
  2680  000E8E  5C14               	subwf	(??_atoi+2)^0,w,c
  2681  000E90  A0D8               	btfss	status,0,c
  2682  000E92  EF4D  F007         	goto	u1941
  2683  000E96  EF50  F007         	goto	u1940
  2684  000E9A                     u1941:
  2685  000E9A  0E01               	movlw	1
  2686  000E9C  EF51  F007         	goto	u1950
  2687  000EA0                     u1940:
  2688  000EA0  0E00               	movlw	0
  2689  000EA2                     u1950:
  2690  000EA2  6E1A               	movwf	_atoi$1328^0,c
  2691  000EA4  6A1B               	clrf	(_atoi$1328+1)^0,c
  2692  000EA6  501A               	movf	_atoi$1328^0,w,c
  2693  000EA8  101B               	iorwf	(_atoi$1328+1)^0,w,c
  2694  000EAA  A4D8               	btfss	status,2,c
  2695  000EAC  EF5A  F007         	goto	u1961
  2696  000EB0  EF5C  F007         	goto	u1960
  2697  000EB4                     u1961:
  2698  000EB4  EF19  F007         	goto	l2805
  2699  000EB8                     u1960:
  2700  000EB8  5016               	movf	atoi@neg^0,w,c
  2701  000EBA  1017               	iorwf	(atoi@neg+1)^0,w,c
  2702  000EBC  A4D8               	btfss	status,2,c
  2703  000EBE  EF63  F007         	goto	u1971
  2704  000EC2  EF65  F007         	goto	u1970
  2705  000EC6                     u1971:
  2706  000EC6  EF73  F007         	goto	l1088
  2707  000ECA                     u1970:
  2708  000ECA  C01D  F012         	movff	atoi@n,??_atoi
  2709  000ECE  C01E  F013         	movff	atoi@n+1,??_atoi+1
  2710  000ED2  1E12               	comf	??_atoi^0,f,c
  2711  000ED4  1E13               	comf	(??_atoi+1)^0,f,c
  2712  000ED6  4A12               	infsnz	??_atoi^0,f,c
  2713  000ED8  2A13               	incf	(??_atoi+1)^0,f,c
  2714  000EDA  C012  F010         	movff	??_atoi,?_atoi
  2715  000EDE  C013  F011         	movff	??_atoi+1,?_atoi+1
  2716  000EE2  EF77  F007         	goto	l1091
  2717  000EE6                     l1088:
  2718  000EE6  C01D  F010         	movff	atoi@n,?_atoi
  2719  000EEA  C01E  F011         	movff	atoi@n+1,?_atoi+1
  2720  000EEE                     l1091:
  2721  000EEE  0012               	return		;funcret
  2722  000EF0                     __end_of_atoi:
  2723                           	opt callstack 0
  2724                           
  2725 ;; *************** function _isspace *****************
  2726 ;; Defined at:
  2727 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  c               2    8[COMRAM] int 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  2    8[COMRAM] int 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2741 ;;      Params:         2       0       0       0       0       0       0       0       0
  2742 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2743 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2744 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2745 ;;Total ram usage:        7 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    7
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_atoi
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text13
  2756  001688                     __ptext13:
  2757                           	opt callstack 0
  2758  001688                     _isspace:
  2759                           	opt callstack 19
  2760  001688  0E01               	movlw	1
  2761  00168A  6E0F               	movwf	_isspace$1344^0,c
  2762  00168C  0E20               	movlw	32
  2763  00168E  1809               	xorwf	isspace@c^0,w,c
  2764  001690  100A               	iorwf	(isspace@c+1)^0,w,c
  2765  001692  B4D8               	btfsc	status,2,c
  2766  001694  EF4E  F00B         	goto	u1821
  2767  001698  EF50  F00B         	goto	u1820
  2768  00169C                     u1821:
  2769  00169C  EF69  F00B         	goto	l2741
  2770  0016A0                     u1820:
  2771  0016A0  0EF7               	movlw	247
  2772  0016A2  6E0B               	movwf	??_isspace^0,c
  2773  0016A4  0EFF               	movlw	255
  2774  0016A6  6E0C               	movwf	(??_isspace+1)^0,c
  2775  0016A8  C009  F00D         	movff	isspace@c,??_isspace+2
  2776  0016AC  C00A  F00E         	movff	isspace@c+1,??_isspace+3
  2777  0016B0  500B               	movf	??_isspace^0,w,c
  2778  0016B2  260D               	addwf	(??_isspace+2)^0,f,c
  2779  0016B4  500C               	movf	(??_isspace+1)^0,w,c
  2780  0016B6  220E               	addwfc	(??_isspace+3)^0,f,c
  2781  0016B8  500E               	movf	(??_isspace+3)^0,w,c
  2782  0016BA  E109               	bnz	u1830
  2783  0016BC  0E05               	movlw	5
  2784  0016BE  5C0D               	subwf	(??_isspace+2)^0,w,c
  2785  0016C0  A0D8               	btfss	status,0,c
  2786  0016C2  EF65  F00B         	goto	u1831
  2787  0016C6  EF67  F00B         	goto	u1830
  2788  0016CA                     u1831:
  2789  0016CA  EF69  F00B         	goto	l2741
  2790  0016CE                     u1830:
  2791  0016CE  0E00               	movlw	0
  2792  0016D0  6E0F               	movwf	_isspace$1344^0,c
  2793  0016D2                     l2741:
  2794  0016D2  C00F  F009         	movff	_isspace$1344,?_isspace
  2795  0016D6  6A0A               	clrf	(?_isspace+1)^0,c
  2796  0016D8  0012               	return		;funcret
  2797  0016DA                     __end_of_isspace:
  2798                           	opt callstack 0
  2799                           
  2800 ;; *************** function _isdigit *****************
  2801 ;; Defined at:
  2802 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  c               2    8[COMRAM] int 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  2    8[COMRAM] int 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2816 ;;      Params:         2       0       0       0       0       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2818 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2819 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2820 ;;Total ram usage:        6 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    7
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_vfpfcnvrt
  2827 ;;		_atoi
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text14
  2832  0017E4                     __ptext14:
  2833                           	opt callstack 0
  2834  0017E4                     _isdigit:
  2835                           	opt callstack 20
  2836  0017E4  0ED0               	movlw	208
  2837  0017E6  6E0B               	movwf	??_isdigit^0,c
  2838  0017E8  0EFF               	movlw	255
  2839  0017EA  6E0C               	movwf	(??_isdigit+1)^0,c
  2840  0017EC  C009  F00D         	movff	isdigit@c,??_isdigit+2
  2841  0017F0  C00A  F00E         	movff	isdigit@c+1,??_isdigit+3
  2842  0017F4  500B               	movf	??_isdigit^0,w,c
  2843  0017F6  260D               	addwf	(??_isdigit+2)^0,f,c
  2844  0017F8  500C               	movf	(??_isdigit+1)^0,w,c
  2845  0017FA  220E               	addwfc	(??_isdigit+3)^0,f,c
  2846  0017FC  500E               	movf	(??_isdigit+3)^0,w,c
  2847  0017FE  E10A               	bnz	u1730
  2848  001800  0E0A               	movlw	10
  2849  001802  5C0D               	subwf	(??_isdigit+2)^0,w,c
  2850  001804  A0D8               	btfss	status,0,c
  2851  001806  EF07  F00C         	goto	u1731
  2852  00180A  EF0A  F00C         	goto	u1730
  2853  00180E                     u1731:
  2854  00180E  0E01               	movlw	1
  2855  001810  EF0B  F00C         	goto	u1740
  2856  001814                     u1730:
  2857  001814  0E00               	movlw	0
  2858  001816                     u1740:
  2859  001816  6E09               	movwf	?_isdigit^0,c
  2860  001818  6A0A               	clrf	(?_isdigit+1)^0,c
  2861  00181A  0012               	return		;funcret
  2862  00181C                     __end_of_isdigit:
  2863                           	opt callstack 0
  2864                           
  2865 ;; *************** function ___wmul *****************
  2866 ;; Defined at:
  2867 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  multiplier      2    8[COMRAM] unsigned int 
  2870 ;;  multiplicand    2   10[COMRAM] unsigned int 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  product         2   12[COMRAM] unsigned int 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2    8[COMRAM] unsigned int 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, prodl, prodh
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2882 ;;      Params:         4       0       0       0       0       0       0       0       0
  2883 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2885 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2886 ;;Total ram usage:        6 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    7
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_atoi
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text15
  2897  00190E                     __ptext15:
  2898                           	opt callstack 0
  2899  00190E                     ___wmul:
  2900                           	opt callstack 19
  2901  00190E  5009               	movf	___wmul@multiplier^0,w,c
  2902  001910  020B               	mulwf	___wmul@multiplicand^0,c
  2903  001912  CFF3 F00D          	movff	prodl,___wmul@product
  2904  001916  CFF4 F00E          	movff	prodh,___wmul@product+1
  2905  00191A  5009               	movf	___wmul@multiplier^0,w,c
  2906  00191C  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  2907  00191E  50F3               	movf	243,w,c
  2908  001920  260E               	addwf	(___wmul@product+1)^0,f,c
  2909  001922  500A               	movf	(___wmul@multiplier+1)^0,w,c
  2910  001924  020B               	mulwf	___wmul@multiplicand^0,c
  2911  001926  50F3               	movf	243,w,c
  2912  001928  260E               	addwf	(___wmul@product+1)^0,f,c
  2913  00192A  C00D  F009         	movff	___wmul@product,?___wmul
  2914  00192E  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  2915  001932  0012               	return		;funcret
  2916  001934                     __end_of___wmul:
  2917                           	opt callstack 0
  2918                           
  2919 ;; *************** function _setCursor *****************
  2920 ;; Defined at:
  2921 ;;		line 56 in file "LCD.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  x               1    wreg     unsigned char 
  2924 ;;  y               1   10[COMRAM] unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  x               1   16[COMRAM] unsigned char 
  2927 ;;  n               1   15[COMRAM] unsigned char 
  2928 ;;  m               1   14[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2938 ;;      Params:         1       0       0       0       0       0       0       0       0
  2939 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2940 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2941 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2942 ;;Total ram usage:        7 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    9
  2945 ;; This function calls:
  2946 ;;		_comando
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text16
  2953  000EF0                     __ptext16:
  2954                           	opt callstack 0
  2955  000EF0                     _setCursor:
  2956                           	opt callstack 21
  2957                           
  2958                           ;incstack = 0
  2959                           ;setCursor@x stored from wreg
  2960  000EF0  6E11               	movwf	setCursor@x^0,c
  2961  000EF2                     
  2962                           ;LCD.c: 57:     char m;;LCD.c: 58:     char n;;LCD.c: 59:     if(y==1){
  2963  000EF2  040B               	decf	setCursor@y^0,w,c
  2964  000EF4  A4D8               	btfss	status,2,c
  2965  000EF6  EF7F  F007         	goto	u1411
  2966  000EFA  EF81  F007         	goto	u1410
  2967  000EFE                     u1411:
  2968  000EFE  EF9B  F007         	goto	l273
  2969  000F02                     u1410:
  2970  000F02                     
  2971                           ;LCD.c: 60:         m=0x80 + x;
  2972  000F02  5011               	movf	setCursor@x^0,w,c
  2973  000F04  0F80               	addlw	128
  2974  000F06  6E0F               	movwf	setCursor@m^0,c
  2975                           
  2976                           ;LCD.c: 61:         n=(0x80 + x) >> 4;
  2977  000F08  5011               	movf	setCursor@x^0,w,c
  2978  000F0A  6E0C               	movwf	??_setCursor^0,c
  2979  000F0C  6A0D               	clrf	(??_setCursor+1)^0,c
  2980  000F0E  0E80               	movlw	128
  2981  000F10  260C               	addwf	??_setCursor^0,f,c
  2982  000F12  0E00               	movlw	0
  2983  000F14  220D               	addwfc	(??_setCursor+1)^0,f,c
  2984  000F16  0E04               	movlw	4
  2985  000F18  6E0E               	movwf	(??_setCursor+2)^0,c
  2986  000F1A                     u1425:
  2987  000F1A  340D               	rlcf	(??_setCursor+1)^0,w,c
  2988  000F1C  320D               	rrcf	(??_setCursor+1)^0,f,c
  2989  000F1E  320C               	rrcf	??_setCursor^0,f,c
  2990  000F20  2E0E               	decfsz	(??_setCursor+2)^0,f,c
  2991  000F22  EF8D  F007         	goto	u1425
  2992  000F26  500C               	movf	??_setCursor^0,w,c
  2993  000F28  6E10               	movwf	setCursor@n^0,c
  2994  000F2A                     
  2995                           ;LCD.c: 62:         comando(n);
  2996  000F2A  5010               	movf	setCursor@n^0,w,c
  2997  000F2C  ECBC  F00C         	call	_comando
  2998  000F30                     
  2999                           ;LCD.c: 63:         comando(m);
  3000  000F30  500F               	movf	setCursor@m^0,w,c
  3001  000F32  ECBC  F00C         	call	_comando
  3002  000F36                     l273:
  3003                           
  3004                           ;LCD.c: 65:     if(y==2){
  3005  000F36  0E02               	movlw	2
  3006  000F38  180B               	xorwf	setCursor@y^0,w,c
  3007  000F3A  A4D8               	btfss	status,2,c
  3008  000F3C  EFA2  F007         	goto	u1431
  3009  000F40  EFA4  F007         	goto	u1430
  3010  000F44                     u1431:
  3011  000F44  EFBE  F007         	goto	l274
  3012  000F48                     u1430:
  3013  000F48                     
  3014                           ;LCD.c: 66:         m=0xC0 + x;
  3015  000F48  5011               	movf	setCursor@x^0,w,c
  3016  000F4A  0FC0               	addlw	192
  3017  000F4C  6E0F               	movwf	setCursor@m^0,c
  3018                           
  3019                           ;LCD.c: 67:         n=(0xC0 + x) >> 4;
  3020  000F4E  5011               	movf	setCursor@x^0,w,c
  3021  000F50  6E0C               	movwf	??_setCursor^0,c
  3022  000F52  6A0D               	clrf	(??_setCursor+1)^0,c
  3023  000F54  0EC0               	movlw	192
  3024  000F56  260C               	addwf	??_setCursor^0,f,c
  3025  000F58  0E00               	movlw	0
  3026  000F5A  220D               	addwfc	(??_setCursor+1)^0,f,c
  3027  000F5C  0E04               	movlw	4
  3028  000F5E  6E0E               	movwf	(??_setCursor+2)^0,c
  3029  000F60                     u1445:
  3030  000F60  340D               	rlcf	(??_setCursor+1)^0,w,c
  3031  000F62  320D               	rrcf	(??_setCursor+1)^0,f,c
  3032  000F64  320C               	rrcf	??_setCursor^0,f,c
  3033  000F66  2E0E               	decfsz	(??_setCursor+2)^0,f,c
  3034  000F68  EFB0  F007         	goto	u1445
  3035  000F6C  500C               	movf	??_setCursor^0,w,c
  3036  000F6E  6E10               	movwf	setCursor@n^0,c
  3037  000F70                     
  3038                           ;LCD.c: 68:         comando(n);
  3039  000F70  5010               	movf	setCursor@n^0,w,c
  3040  000F72  ECBC  F00C         	call	_comando
  3041  000F76                     
  3042                           ;LCD.c: 69:         comando(m);
  3043  000F76  500F               	movf	setCursor@m^0,w,c
  3044  000F78  ECBC  F00C         	call	_comando
  3045  000F7C                     l274:
  3046                           
  3047                           ;LCD.c: 71:     if(y==3){
  3048  000F7C  0E03               	movlw	3
  3049  000F7E  180B               	xorwf	setCursor@y^0,w,c
  3050  000F80  A4D8               	btfss	status,2,c
  3051  000F82  EFC5  F007         	goto	u1451
  3052  000F86  EFC7  F007         	goto	u1450
  3053  000F8A                     u1451:
  3054  000F8A  EFE1  F007         	goto	l275
  3055  000F8E                     u1450:
  3056  000F8E                     
  3057                           ;LCD.c: 72:         m=0x80 +20+ x;
  3058  000F8E  5011               	movf	setCursor@x^0,w,c
  3059  000F90  0F94               	addlw	148
  3060  000F92  6E0F               	movwf	setCursor@m^0,c
  3061                           
  3062                           ;LCD.c: 73:         n=(0x80+20 + x) >> 4;
  3063  000F94  5011               	movf	setCursor@x^0,w,c
  3064  000F96  6E0C               	movwf	??_setCursor^0,c
  3065  000F98  6A0D               	clrf	(??_setCursor+1)^0,c
  3066  000F9A  0E94               	movlw	148
  3067  000F9C  260C               	addwf	??_setCursor^0,f,c
  3068  000F9E  0E00               	movlw	0
  3069  000FA0  220D               	addwfc	(??_setCursor+1)^0,f,c
  3070  000FA2  0E04               	movlw	4
  3071  000FA4  6E0E               	movwf	(??_setCursor+2)^0,c
  3072  000FA6                     u1465:
  3073  000FA6  340D               	rlcf	(??_setCursor+1)^0,w,c
  3074  000FA8  320D               	rrcf	(??_setCursor+1)^0,f,c
  3075  000FAA  320C               	rrcf	??_setCursor^0,f,c
  3076  000FAC  2E0E               	decfsz	(??_setCursor+2)^0,f,c
  3077  000FAE  EFD3  F007         	goto	u1465
  3078  000FB2  500C               	movf	??_setCursor^0,w,c
  3079  000FB4  6E10               	movwf	setCursor@n^0,c
  3080  000FB6                     
  3081                           ;LCD.c: 74:         comando(n);
  3082  000FB6  5010               	movf	setCursor@n^0,w,c
  3083  000FB8  ECBC  F00C         	call	_comando
  3084  000FBC                     
  3085                           ;LCD.c: 75:         comando(m);
  3086  000FBC  500F               	movf	setCursor@m^0,w,c
  3087  000FBE  ECBC  F00C         	call	_comando
  3088  000FC2                     l275:
  3089                           
  3090                           ;LCD.c: 77:     if(y==4){
  3091  000FC2  0E04               	movlw	4
  3092  000FC4  180B               	xorwf	setCursor@y^0,w,c
  3093  000FC6  A4D8               	btfss	status,2,c
  3094  000FC8  EFE8  F007         	goto	u1471
  3095  000FCC  EFEA  F007         	goto	u1470
  3096  000FD0                     u1471:
  3097  000FD0  EF04  F008         	goto	l277
  3098  000FD4                     u1470:
  3099  000FD4                     
  3100                           ;LCD.c: 78:         m=0xC0 +20+ x;
  3101  000FD4  5011               	movf	setCursor@x^0,w,c
  3102  000FD6  0FD4               	addlw	212
  3103  000FD8  6E0F               	movwf	setCursor@m^0,c
  3104                           
  3105                           ;LCD.c: 79:         n=(0xC0 + 20+ x) >> 4;
  3106  000FDA  5011               	movf	setCursor@x^0,w,c
  3107  000FDC  6E0C               	movwf	??_setCursor^0,c
  3108  000FDE  6A0D               	clrf	(??_setCursor+1)^0,c
  3109  000FE0  0ED4               	movlw	212
  3110  000FE2  260C               	addwf	??_setCursor^0,f,c
  3111  000FE4  0E00               	movlw	0
  3112  000FE6  220D               	addwfc	(??_setCursor+1)^0,f,c
  3113  000FE8  0E04               	movlw	4
  3114  000FEA  6E0E               	movwf	(??_setCursor+2)^0,c
  3115  000FEC                     u1485:
  3116  000FEC  340D               	rlcf	(??_setCursor+1)^0,w,c
  3117  000FEE  320D               	rrcf	(??_setCursor+1)^0,f,c
  3118  000FF0  320C               	rrcf	??_setCursor^0,f,c
  3119  000FF2  2E0E               	decfsz	(??_setCursor+2)^0,f,c
  3120  000FF4  EFF6  F007         	goto	u1485
  3121  000FF8  500C               	movf	??_setCursor^0,w,c
  3122  000FFA  6E10               	movwf	setCursor@n^0,c
  3123  000FFC                     
  3124                           ;LCD.c: 80:         comando(n);
  3125  000FFC  5010               	movf	setCursor@n^0,w,c
  3126  000FFE  ECBC  F00C         	call	_comando
  3127  001002                     
  3128                           ;LCD.c: 81:         comando(m);
  3129  001002  500F               	movf	setCursor@m^0,w,c
  3130  001004  ECBC  F00C         	call	_comando
  3131  001008                     l277:
  3132  001008  0012               	return		;funcret
  3133  00100A                     __end_of_setCursor:
  3134                           	opt callstack 0
  3135                           
  3136 ;; *************** function _print *****************
  3137 ;; Defined at:
  3138 ;;		line 95 in file "LCD.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  a               2   13[COMRAM] PTR unsigned char 
  3141 ;;		 -> STR_6(2), STR_5(2), horas(4), minut(4), 
  3142 ;;		 -> segun(4), STR_1(12), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  k               2   17[COMRAM] int 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3154 ;;      Params:         2       0       0       0       0       0       0       0       0
  3155 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3156 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3157 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3158 ;;Total ram usage:        6 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:   10
  3161 ;; This function calls:
  3162 ;;		_caracter
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text17
  3169  0014FA                     __ptext17:
  3170                           	opt callstack 0
  3171  0014FA                     _print:
  3172                           	opt callstack 20
  3173  0014FA                     
  3174                           ;LCD.c: 96:     for (int k=0;a[k]!='\0';k++){
  3175  0014FA  0E00               	movlw	0
  3176  0014FC  6E13               	movwf	(print@k+1)^0,c
  3177  0014FE  0E00               	movlw	0
  3178  001500  6E12               	movwf	print@k^0,c
  3179  001502  EF9D  F00A         	goto	l2305
  3180  001506                     l2301:
  3181                           
  3182                           ;LCD.c: 97:         caracter(a[k]);
  3183  001506  5012               	movf	print@k^0,w,c
  3184  001508  240E               	addwf	print@a^0,w,c
  3185  00150A  6E10               	movwf	??_print^0,c
  3186  00150C  5013               	movf	(print@k+1)^0,w,c
  3187  00150E  200F               	addwfc	(print@a+1)^0,w,c
  3188  001510  6E11               	movwf	(??_print+1)^0,c
  3189  001512  C010  FFF6         	movff	??_print,tblptrl
  3190  001516  C011  FFF7         	movff	??_print+1,tblptrh
  3191  00151A  6AF8               	clrf	tblptru,c
  3192  00151C  0E07               	movlw	(high __ramtop+-1)
  3193  00151E  64F7               	cpfsgt	tblptrh,c
  3194  001520  D003               	bra	u1387
  3195  001522  0008               	tblrd		*
  3196  001524  50F5               	movf	tablat,w,c
  3197  001526  D005               	bra	u1380
  3198  001528                     u1387:
  3199  001528  CFF6 FFE1          	movff	tblptrl,fsr1l
  3200  00152C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3201  001530  50E7               	movf	indf1,w,c
  3202  001532                     u1380:
  3203  001532  ECAD  F00C         	call	_caracter
  3204  001536                     
  3205                           ;LCD.c: 98:     }
  3206  001536  4A12               	infsnz	print@k^0,f,c
  3207  001538  2A13               	incf	(print@k+1)^0,f,c
  3208  00153A                     l2305:
  3209  00153A  5012               	movf	print@k^0,w,c
  3210  00153C  240E               	addwf	print@a^0,w,c
  3211  00153E  6E10               	movwf	??_print^0,c
  3212  001540  5013               	movf	(print@k+1)^0,w,c
  3213  001542  200F               	addwfc	(print@a+1)^0,w,c
  3214  001544  6E11               	movwf	(??_print+1)^0,c
  3215  001546  C010  FFF6         	movff	??_print,tblptrl
  3216  00154A  C011  FFF7         	movff	??_print+1,tblptrh
  3217  00154E  6AF8               	clrf	tblptru,c
  3218  001550  0E07               	movlw	(high __ramtop+-1)
  3219  001552  64F7               	cpfsgt	tblptrh,c
  3220  001554  D003               	bra	u1397
  3221  001556  0008               	tblrd		*
  3222  001558  50F5               	movf	tablat,w,c
  3223  00155A  D005               	bra	u1390
  3224  00155C                     u1397:
  3225  00155C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3226  001560  CFF7 FFE2          	movff	tblptrh,fsr1h
  3227  001564  50E7               	movf	indf1,w,c
  3228  001566                     u1390:
  3229  001566  0900               	iorlw	0
  3230  001568  A4D8               	btfss	status,2,c
  3231  00156A  EFB9  F00A         	goto	u1401
  3232  00156E  EFBB  F00A         	goto	u1400
  3233  001572                     u1401:
  3234  001572  EF83  F00A         	goto	l2301
  3235  001576                     u1400:
  3236  001576  0012               	return		;funcret
  3237  001578                     __end_of_print:
  3238                           	opt callstack 0
  3239                           
  3240 ;; *************** function _caracter *****************
  3241 ;; Defined at:
  3242 ;;		line 85 in file "LCD.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  a               1    wreg     unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  a               1   12[COMRAM] unsigned char 
  3247 ;;  n               1   11[COMRAM] unsigned char 
  3248 ;;  m               1   10[COMRAM] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3258 ;;      Params:         0       0       0       0       0       0       0       0       0
  3259 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3261 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3262 ;;Total ram usage:        3 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    9
  3265 ;; This function calls:
  3266 ;;		_comando
  3267 ;; This function is called by:
  3268 ;;		_print
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text18
  3273  00195A                     __ptext18:
  3274                           	opt callstack 0
  3275  00195A                     _caracter:
  3276                           	opt callstack 20
  3277                           
  3278                           ;incstack = 0
  3279                           ;caracter@a stored from wreg
  3280  00195A  6E0D               	movwf	caracter@a^0,c
  3281  00195C                     
  3282                           ;LCD.c: 86:     char m,n;;LCD.c: 87:     m=a>>4;
  3283  00195C  380D               	swapf	caracter@a^0,w,c
  3284  00195E  0B0F               	andlw	15
  3285  001960  6E0B               	movwf	caracter@m^0,c
  3286  001962                     
  3287                           ;LCD.c: 88:     n=a;
  3288  001962  C00D  F00C         	movff	caracter@a,caracter@n
  3289  001966                     
  3290                           ;LCD.c: 89:     PORTEbits.RE0=1;
  3291  001966  8084               	bsf	132,0,c	;volatile
  3292  001968                     
  3293                           ;LCD.c: 90:     comando(m);
  3294  001968  500B               	movf	caracter@m^0,w,c
  3295  00196A  ECBC  F00C         	call	_comando
  3296  00196E                     
  3297                           ;LCD.c: 91:     comando(n);
  3298  00196E  500C               	movf	caracter@n^0,w,c
  3299  001970  ECBC  F00C         	call	_comando
  3300  001974                     
  3301                           ;LCD.c: 92:     PORTEbits.RE0=0;
  3302  001974  9084               	bcf	132,0,c	;volatile
  3303  001976  0012               	return		;funcret
  3304  001978                     __end_of_caracter:
  3305                           	opt callstack 0
  3306                           
  3307 ;; *************** function _ocultarcursor *****************
  3308 ;; Defined at:
  3309 ;;		line 207 in file "LCD.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    9
  3330 ;; This function calls:
  3331 ;;		_comando
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text19
  3338  0019A6                     __ptext19:
  3339                           	opt callstack 0
  3340  0019A6                     _ocultarcursor:
  3341                           	opt callstack 21
  3342  0019A6                     
  3343                           ;LCD.c: 208:     comando(0x00);
  3344  0019A6  0E00               	movlw	0
  3345  0019A8  ECBC  F00C         	call	_comando
  3346                           
  3347                           ;LCD.c: 209:     comando(0x0c);
  3348  0019AC  0E0C               	movlw	12
  3349  0019AE  ECBC  F00C         	call	_comando
  3350  0019B2  0012               	return		;funcret
  3351  0019B4                     __end_of_ocultarcursor:
  3352                           	opt callstack 0
  3353                           
  3354 ;; *************** function _begin *****************
  3355 ;; Defined at:
  3356 ;;		line 41 in file "LCD.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    9
  3377 ;; This function calls:
  3378 ;;		_comando
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text20
  3385  0016DA                     __ptext20:
  3386                           	opt callstack 0
  3387  0016DA                     _begin:
  3388                           	opt callstack 21
  3389  0016DA                     
  3390                           ;LCD.c: 42:     comando(0x03);
  3391  0016DA  0E03               	movlw	3
  3392  0016DC  ECBC  F00C         	call	_comando
  3393                           
  3394                           ;LCD.c: 43:     comando(0x03);
  3395  0016E0  0E03               	movlw	3
  3396  0016E2  ECBC  F00C         	call	_comando
  3397                           
  3398                           ;LCD.c: 44:     comando(0x03);
  3399  0016E6  0E03               	movlw	3
  3400  0016E8  ECBC  F00C         	call	_comando
  3401                           
  3402                           ;LCD.c: 45:     comando(0x02);
  3403  0016EC  0E02               	movlw	2
  3404  0016EE  ECBC  F00C         	call	_comando
  3405                           
  3406                           ;LCD.c: 46:     comando(0x02);
  3407  0016F2  0E02               	movlw	2
  3408  0016F4  ECBC  F00C         	call	_comando
  3409                           
  3410                           ;LCD.c: 47:     comando(0x08);
  3411  0016F8  0E08               	movlw	8
  3412  0016FA  ECBC  F00C         	call	_comando
  3413                           
  3414                           ;LCD.c: 48:     comando(0x00);
  3415  0016FE  0E00               	movlw	0
  3416  001700  ECBC  F00C         	call	_comando
  3417                           
  3418                           ;LCD.c: 49:     comando(0x08);
  3419  001704  0E08               	movlw	8
  3420  001706  ECBC  F00C         	call	_comando
  3421                           
  3422                           ;LCD.c: 50:     comando(0x00);
  3423  00170A  0E00               	movlw	0
  3424  00170C  ECBC  F00C         	call	_comando
  3425                           
  3426                           ;LCD.c: 51:     comando(0x01);
  3427  001710  0E01               	movlw	1
  3428  001712  ECBC  F00C         	call	_comando
  3429                           
  3430                           ;LCD.c: 52:     comando(0x00);
  3431  001716  0E00               	movlw	0
  3432  001718  ECBC  F00C         	call	_comando
  3433                           
  3434                           ;LCD.c: 53:     comando(0x0D);
  3435  00171C  0E0D               	movlw	13
  3436  00171E  ECBC  F00C         	call	_comando
  3437  001722  0012               	return		;funcret
  3438  001724                     __end_of_begin:
  3439                           	opt callstack 0
  3440                           
  3441 ;; *************** function _comando *****************
  3442 ;; Defined at:
  3443 ;;		line 32 in file "LCD.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  a               1    wreg     unsigned char 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  a               1    9[COMRAM] unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0
  3458 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3460 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3461 ;;Total ram usage:        1 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    8
  3464 ;; This function calls:
  3465 ;;		_busdata
  3466 ;; This function is called by:
  3467 ;;		_begin
  3468 ;;		_setCursor
  3469 ;;		_caracter
  3470 ;;		_ocultarcursor
  3471 ;;		_create
  3472 ;;		_writecaracter
  3473 ;;		_clear
  3474 ;;		_home
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text21
  3479  001978                     __ptext21:
  3480                           	opt callstack 0
  3481  001978                     _comando:
  3482                           	opt callstack 21
  3483                           
  3484                           ;incstack = 0
  3485                           ;comando@a stored from wreg
  3486  001978  6E0A               	movwf	comando@a^0,c
  3487  00197A                     
  3488                           ;LCD.c: 33:     PORTEbits.RE2=0;
  3489  00197A  9484               	bcf	132,2,c	;volatile
  3490                           
  3491                           ;LCD.c: 34:     PORTEbits.RE2=1;
  3492  00197C  8484               	bsf	132,2,c	;volatile
  3493  00197E                     
  3494                           ;LCD.c: 36:     busdata(a);
  3495  00197E  500A               	movf	comando@a^0,w,c
  3496  001980  ECED  F00A         	call	_busdata
  3497  001984                     
  3498                           ;LCD.c: 37:     _delay((unsigned long)((1)*(2000000/4000.0)));
  3499  001984  0EA6               	movlw	166
  3500  001986                     u2097:
  3501  001986  2EE8               	decfsz	wreg,f,c
  3502  001988  D7FE               	bra	u2097
  3503  00198A  D000               	nop2	
  3504  00198C                     
  3505                           ;LCD.c: 38:     PORTEbits.RE2=0;
  3506  00198C  9484               	bcf	132,2,c	;volatile
  3507  00198E  0012               	return		;funcret
  3508  001990                     __end_of_comando:
  3509                           	opt callstack 0
  3510                           
  3511 ;; *************** function _busdata *****************
  3512 ;; Defined at:
  3513 ;;		line 4 in file "LCD.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  a               1    wreg     unsigned char 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  a               1    8[COMRAM] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3527 ;;      Params:         0       0       0       0       0       0       0       0       0
  3528 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3530 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3531 ;;Total ram usage:        1 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    7
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_comando
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text22
  3542  0015DA                     __ptext22:
  3543                           	opt callstack 0
  3544  0015DA                     _busdata:
  3545                           	opt callstack 21
  3546                           
  3547                           ;incstack = 0
  3548                           ;busdata@a stored from wreg
  3549  0015DA  6E09               	movwf	busdata@a^0,c
  3550  0015DC                     
  3551                           ;LCD.c: 5:     if (a & 0x01){
  3552  0015DC  A009               	btfss	busdata@a^0,0,c
  3553  0015DE  EFF3  F00A         	goto	u1031
  3554  0015E2  EFF5  F00A         	goto	u1030
  3555  0015E6                     u1031:
  3556  0015E6  EFF8  F00A         	goto	l256
  3557  0015EA                     u1030:
  3558  0015EA                     
  3559                           ;LCD.c: 6:         PORTDbits.RD4=1;
  3560  0015EA  8883               	bsf	131,4,c	;volatile
  3561                           
  3562                           ;LCD.c: 7:     }
  3563  0015EC  EFF9  F00A         	goto	l1997
  3564  0015F0                     l256:
  3565                           
  3566                           ;LCD.c: 9:         PORTDbits.RD4=0;
  3567  0015F0  9883               	bcf	131,4,c	;volatile
  3568  0015F2                     l1997:
  3569                           
  3570                           ;LCD.c: 11:     if (a & 0x02){
  3571  0015F2  A209               	btfss	busdata@a^0,1,c
  3572  0015F4  EFFE  F00A         	goto	u1041
  3573  0015F8  EF00  F00B         	goto	u1040
  3574  0015FC                     u1041:
  3575  0015FC  EF03  F00B         	goto	l258
  3576  001600                     u1040:
  3577  001600                     
  3578                           ;LCD.c: 12:         PORTDbits.RD5=1;
  3579  001600  8A83               	bsf	131,5,c	;volatile
  3580                           
  3581                           ;LCD.c: 13:     }
  3582  001602  EF04  F00B         	goto	l2001
  3583  001606                     l258:
  3584                           
  3585                           ;LCD.c: 15:         PORTDbits.RD5=0;
  3586  001606  9A83               	bcf	131,5,c	;volatile
  3587  001608                     l2001:
  3588                           
  3589                           ;LCD.c: 17:     if (a & 0x04){
  3590  001608  A409               	btfss	busdata@a^0,2,c
  3591  00160A  EF09  F00B         	goto	u1051
  3592  00160E  EF0B  F00B         	goto	u1050
  3593  001612                     u1051:
  3594  001612  EF0E  F00B         	goto	l260
  3595  001616                     u1050:
  3596  001616                     
  3597                           ;LCD.c: 18:         PORTDbits.RD6=1;
  3598  001616  8C83               	bsf	131,6,c	;volatile
  3599                           
  3600                           ;LCD.c: 19:     }
  3601  001618  EF0F  F00B         	goto	l2005
  3602  00161C                     l260:
  3603                           
  3604                           ;LCD.c: 21:         PORTDbits.RD6=0;
  3605  00161C  9C83               	bcf	131,6,c	;volatile
  3606  00161E                     l2005:
  3607                           
  3608                           ;LCD.c: 23:     if (a & 0x08){
  3609  00161E  A609               	btfss	busdata@a^0,3,c
  3610  001620  EF14  F00B         	goto	u1061
  3611  001624  EF16  F00B         	goto	u1060
  3612  001628                     u1061:
  3613  001628  EF19  F00B         	goto	l262
  3614  00162C                     u1060:
  3615  00162C                     
  3616                           ;LCD.c: 24:         PORTDbits.RD7=1;
  3617  00162C  8E83               	bsf	131,7,c	;volatile
  3618                           
  3619                           ;LCD.c: 25:     }
  3620  00162E  EF1A  F00B         	goto	l264
  3621  001632                     l262:
  3622                           
  3623                           ;LCD.c: 27:         PORTDbits.RD7=0;
  3624  001632  9E83               	bcf	131,7,c	;volatile
  3625  001634                     l264:
  3626  001634  0012               	return		;funcret
  3627  001636                     __end_of_busdata:
  3628                           	opt callstack 0
  3629                           
  3630 ;; *************** function _SYSTEM_Initialize *****************
  3631 ;; Defined at:
  3632 ;;		line 5 in file "mcc_generated_files/mcc.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3646 ;;      Params:         0       0       0       0       0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    9
  3653 ;; This function calls:
  3654 ;;		_EXT_INT_Initialize
  3655 ;;		_INTERRUPT_Initialize
  3656 ;;		_OSCILLATOR_Initialize
  3657 ;;		_PIN_MANAGER_Initialize
  3658 ;;		_TMR0_Initialize
  3659 ;; This function is called by:
  3660 ;;		_main
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text23
  3665  001990                     __ptext23:
  3666                           	opt callstack 0
  3667  001990                     _SYSTEM_Initialize:
  3668                           	opt callstack 21
  3669  001990                     
  3670                           ;mcc_generated_files/mcc.c: 8:     INTERRUPT_Initialize();
  3671  001990  ECE4  F00C         	call	_INTERRUPT_Initialize	;wreg free
  3672  001994                     
  3673                           ;mcc_generated_files/mcc.c: 9:     PIN_MANAGER_Initialize();
  3674  001994  ECB4  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  3675  001998                     
  3676                           ;mcc_generated_files/mcc.c: 10:     OSCILLATOR_Initialize();
  3677  001998  ECDF  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  3678  00199C                     
  3679                           ;mcc_generated_files/mcc.c: 11:     EXT_INT_Initialize();
  3680  00199C  EC9A  F00C         	call	_EXT_INT_Initialize	;wreg free
  3681  0019A0                     
  3682                           ;mcc_generated_files/mcc.c: 12:     TMR0_Initialize();
  3683  0019A0  EC29  F00C         	call	_TMR0_Initialize	;wreg free
  3684  0019A4  0012               	return		;funcret
  3685  0019A6                     __end_of_SYSTEM_Initialize:
  3686                           	opt callstack 0
  3687                           
  3688 ;; *************** function _TMR0_Initialize *****************
  3689 ;; Defined at:
  3690 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3704 ;;      Params:         0       0       0       0       0       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3706 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3707 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3708 ;;Total ram usage:        2 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    8
  3711 ;; This function calls:
  3712 ;;		_TMR0_SetInterruptHandler
  3713 ;; This function is called by:
  3714 ;;		_SYSTEM_Initialize
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text24
  3719  001852                     __ptext24:
  3720                           	opt callstack 0
  3721  001852                     _TMR0_Initialize:
  3722                           	opt callstack 21
  3723  001852                     
  3724                           ;mcc_generated_files/tmr0.c: 23:     T0CONbits.T08BIT = 0;
  3725  001852  9CD5               	bcf	213,6,c	;volatile
  3726  001854                     
  3727                           ;mcc_generated_files/tmr0.c: 26:     TMR0H = 0x0B;
  3728  001854  0E0B               	movlw	11
  3729  001856  6ED7               	movwf	215,c	;volatile
  3730                           
  3731                           ;mcc_generated_files/tmr0.c: 29:     TMR0L = 0xDB;
  3732  001858  0EDB               	movlw	219
  3733  00185A  6ED6               	movwf	214,c	;volatile
  3734  00185C                     
  3735                           ;mcc_generated_files/tmr0.c: 33:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3736  00185C  50D6               	movf	214,w,c	;volatile
  3737  00185E  CFD7 F00B          	movff	4055,??_TMR0_Initialize	;volatile
  3738  001862  6A0C               	clrf	(??_TMR0_Initialize+1)^0,c
  3739  001864  C00B  F00C         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3740  001868  6A0B               	clrf	??_TMR0_Initialize^0,c
  3741  00186A  100B               	iorwf	??_TMR0_Initialize^0,w,c
  3742  00186C  6E54               	movwf	_timer0ReloadVal^0,c	;volatile
  3743  00186E  500C               	movf	(??_TMR0_Initialize+1)^0,w,c
  3744  001870  6E55               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3745  001872                     
  3746                           ;mcc_generated_files/tmr0.c: 36:     INTCONbits.TMR0IF = 0;
  3747  001872  94F2               	bcf	242,2,c	;volatile
  3748  001874                     
  3749                           ;mcc_generated_files/tmr0.c: 39:     INTCONbits.TMR0IE = 1;
  3750  001874  8AF2               	bsf	242,5,c	;volatile
  3751  001876                     
  3752                           ;mcc_generated_files/tmr0.c: 42:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3753  001876  0EFC               	movlw	low _TMR0_DefaultInterruptHandler
  3754  001878  6E09               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3755  00187A  0E19               	movlw	high _TMR0_DefaultInterruptHandler
  3756  00187C  6E0A               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3757  00187E  ECDA  F00C         	call	_TMR0_SetInterruptHandler	;wreg free
  3758  001882                     
  3759                           ;mcc_generated_files/tmr0.c: 45:     T0CON = 0x92;
  3760  001882  0E92               	movlw	146
  3761  001884  6ED5               	movwf	213,c	;volatile
  3762  001886  0012               	return		;funcret
  3763  001888                     __end_of_TMR0_Initialize:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _TMR0_SetInterruptHandler *****************
  3767 ;; Defined at:
  3768 ;;		line 107 in file "mcc_generated_files/tmr0.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  3771 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3783 ;;      Params:         2       0       0       0       0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3786 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3787 ;;Total ram usage:        2 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    7
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_TMR0_Initialize
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text25
  3798  0019B4                     __ptext25:
  3799                           	opt callstack 0
  3800  0019B4                     _TMR0_SetInterruptHandler:
  3801                           	opt callstack 21
  3802  0019B4                     
  3803                           ;mcc_generated_files/tmr0.c: 108:     TMR0_InterruptHandler = InterruptHandler;
  3804  0019B4  C009  F0B8         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3805  0019B8  C00A  F0B9         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3806  0019BC  0012               	return		;funcret
  3807  0019BE                     __end_of_TMR0_SetInterruptHandler:
  3808                           	opt callstack 0
  3809                           
  3810 ;; *************** function _PIN_MANAGER_Initialize *****************
  3811 ;; Defined at:
  3812 ;;		line 9 in file "mcc_generated_files/pin_manager.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3826 ;;      Params:         0       0       0       0       0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3829 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    7
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_SYSTEM_Initialize
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text26
  3841  001768                     __ptext26:
  3842                           	opt callstack 0
  3843  001768                     _PIN_MANAGER_Initialize:
  3844                           	opt callstack 22
  3845  001768                     
  3846                           ;mcc_generated_files/pin_manager.c: 14:     LATE = 0x00;
  3847  001768  0E00               	movlw	0
  3848  00176A  6E8D               	movwf	141,c	;volatile
  3849                           
  3850                           ;mcc_generated_files/pin_manager.c: 15:     LATD = 0x00;
  3851  00176C  0E00               	movlw	0
  3852  00176E  6E8C               	movwf	140,c	;volatile
  3853                           
  3854                           ;mcc_generated_files/pin_manager.c: 16:     LATA = 0x00;
  3855  001770  0E00               	movlw	0
  3856  001772  6E89               	movwf	137,c	;volatile
  3857                           
  3858                           ;mcc_generated_files/pin_manager.c: 17:     LATB = 0x00;
  3859  001774  0E00               	movlw	0
  3860  001776  6E8A               	movwf	138,c	;volatile
  3861                           
  3862                           ;mcc_generated_files/pin_manager.c: 18:     LATC = 0x00;
  3863  001778  0E00               	movlw	0
  3864  00177A  6E8B               	movwf	139,c	;volatile
  3865                           
  3866                           ;mcc_generated_files/pin_manager.c: 23:     TRISE = 0x02;
  3867  00177C  0E02               	movlw	2
  3868  00177E  6E96               	movwf	150,c	;volatile
  3869  001780                     
  3870                           ;mcc_generated_files/pin_manager.c: 24:     TRISA = 0xFF;
  3871  001780  6892               	setf	146,c	;volatile
  3872  001782                     
  3873                           ;mcc_generated_files/pin_manager.c: 25:     TRISB = 0xFF;
  3874  001782  6893               	setf	147,c	;volatile
  3875                           
  3876                           ;mcc_generated_files/pin_manager.c: 26:     TRISC = 0xC7;
  3877  001784  0EC7               	movlw	199
  3878  001786  6E94               	movwf	148,c	;volatile
  3879                           
  3880                           ;mcc_generated_files/pin_manager.c: 27:     TRISD = 0x0E;
  3881  001788  0E0E               	movlw	14
  3882  00178A  6E95               	movwf	149,c	;volatile
  3883                           
  3884                           ;mcc_generated_files/pin_manager.c: 32:     ANSELD = 0x0E;
  3885  00178C  0E0E               	movlw	14
  3886  00178E  010F               	movlb	15	; () banked
  3887  001790  6F5E               	movwf	94,b	;volatile
  3888                           
  3889                           ;mcc_generated_files/pin_manager.c: 33:     ANSELC = 0xC4;
  3890  001792  0EC4               	movlw	196
  3891  001794  6F5D               	movwf	93,b	;volatile
  3892                           
  3893                           ;mcc_generated_files/pin_manager.c: 34:     ANSELB = 0x39;
  3894  001796  0E39               	movlw	57
  3895  001798  6F5C               	movwf	92,b	;volatile
  3896                           
  3897                           ;mcc_generated_files/pin_manager.c: 35:     ANSELE = 0x02;
  3898  00179A  0E02               	movlw	2
  3899  00179C  6F5F               	movwf	95,b	;volatile
  3900                           
  3901                           ;mcc_generated_files/pin_manager.c: 36:     ANSELA = 0x2F;
  3902  00179E  0E2F               	movlw	47
  3903  0017A0  6F5B               	movwf	91,b	;volatile
  3904                           
  3905                           ;mcc_generated_files/pin_manager.c: 41:     WPUB = 0x00;
  3906  0017A2  0E00               	movlw	0
  3907  0017A4  6E85               	movwf	133,c	;volatile
  3908  0017A6                     
  3909                           ; BSR set to: 15
  3910                           ;mcc_generated_files/pin_manager.c: 42:     INTCON2bits.nRBPU = 1;
  3911  0017A6  8EF1               	bsf	241,7,c	;volatile
  3912  0017A8                     
  3913                           ; BSR set to: 15
  3914  0017A8  0012               	return		;funcret
  3915  0017AA                     __end_of_PIN_MANAGER_Initialize:
  3916                           	opt callstack 0
  3917                           
  3918 ;; *************** function _OSCILLATOR_Initialize *****************
  3919 ;; Defined at:
  3920 ;;		line 15 in file "mcc_generated_files/mcc.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3937 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3938 ;;Total ram usage:        0 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    7
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_SYSTEM_Initialize
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text27
  3949  0019BE                     __ptext27:
  3950                           	opt callstack 0
  3951  0019BE                     _OSCILLATOR_Initialize:
  3952                           	opt callstack 22
  3953  0019BE                     
  3954                           ;mcc_generated_files/mcc.c: 18:     OSCCON = 0x40;
  3955  0019BE  0E40               	movlw	64
  3956  0019C0  6ED3               	movwf	211,c	;volatile
  3957                           
  3958                           ;mcc_generated_files/mcc.c: 20:     OSCCON2 = 0x00;
  3959  0019C2  0E00               	movlw	0
  3960  0019C4  6ED2               	movwf	210,c	;volatile
  3961  0019C6  0012               	return		;funcret
  3962  0019C8                     __end_of_OSCILLATOR_Initialize:
  3963                           	opt callstack 0
  3964                           
  3965 ;; *************** function _INTERRUPT_Initialize *****************
  3966 ;; Defined at:
  3967 ;;		line 5 in file "mcc_generated_files/interrupt_manager.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		None
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3981 ;;      Params:         0       0       0       0       0       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3984 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    7
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_SYSTEM_Initialize
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text28
  3996  0019C8                     __ptext28:
  3997                           	opt callstack 0
  3998  0019C8                     _INTERRUPT_Initialize:
  3999                           	opt callstack 22
  4000  0019C8                     
  4001                           ;mcc_generated_files/interrupt_manager.c: 8:     RCONbits.IPEN = 1;
  4002  0019C8  8ED0               	bsf	208,7,c	;volatile
  4003                           
  4004                           ;mcc_generated_files/interrupt_manager.c: 13:     INTCON2bits.TMR0IP = 1;
  4005  0019CA  84F1               	bsf	241,2,c	;volatile
  4006                           
  4007                           ;mcc_generated_files/interrupt_manager.c: 17:     INTCON3bits.INT1IP = 0;
  4008  0019CC  9CF0               	bcf	240,6,c	;volatile
  4009                           
  4010                           ;mcc_generated_files/interrupt_manager.c: 20:     INTCON3bits.INT2IP = 0;
  4011  0019CE  9EF0               	bcf	240,7,c	;volatile
  4012  0019D0  0012               	return		;funcret
  4013  0019D2                     __end_of_INTERRUPT_Initialize:
  4014                           	opt callstack 0
  4015                           
  4016 ;; *************** function _EXT_INT_Initialize *****************
  4017 ;; Defined at:
  4018 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    8
  4039 ;; This function calls:
  4040 ;;		_INT1_SetInterruptHandler
  4041 ;;		_INT2_SetInterruptHandler
  4042 ;; This function is called by:
  4043 ;;		_SYSTEM_Initialize
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text29
  4048  001934                     __ptext29:
  4049                           	opt callstack 0
  4050  001934                     _EXT_INT_Initialize:
  4051                           	opt callstack 21
  4052  001934                     
  4053                           ;mcc_generated_files/ext_int.c: 91:     (INTCON3bits.INT1IF = 0);
  4054  001934  90F0               	bcf	240,0,c	;volatile
  4055                           
  4056                           ;mcc_generated_files/ext_int.c: 92:     (INTCON2bits.INTEDG1 = 0);
  4057  001936  9AF1               	bcf	241,5,c	;volatile
  4058  001938                     
  4059                           ;mcc_generated_files/ext_int.c: 94:     INT1_SetInterruptHandler(INT1_DefaultInterruptHa
      +                          ndler);
  4060  001938  0EFA               	movlw	low _INT1_DefaultInterruptHandler
  4061  00193A  6E09               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  4062  00193C  0E19               	movlw	high _INT1_DefaultInterruptHandler
  4063  00193E  6E0A               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  4064  001940  ECEE  F00C         	call	_INT1_SetInterruptHandler	;wreg free
  4065  001944                     
  4066                           ;mcc_generated_files/ext_int.c: 95:     (INTCON3bits.INT1IE = 1);
  4067  001944  86F0               	bsf	240,3,c	;volatile
  4068  001946                     
  4069                           ;mcc_generated_files/ext_int.c: 100:     (INTCON3bits.INT2IF = 0);
  4070  001946  92F0               	bcf	240,1,c	;volatile
  4071  001948                     
  4072                           ;mcc_generated_files/ext_int.c: 101:     (INTCON2bits.INTEDG2 = 0);
  4073  001948  98F1               	bcf	241,4,c	;volatile
  4074                           
  4075                           ;mcc_generated_files/ext_int.c: 103:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  4076  00194A  0EF8               	movlw	low _INT2_DefaultInterruptHandler
  4077  00194C  6E09               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  4078  00194E  0E19               	movlw	high _INT2_DefaultInterruptHandler
  4079  001950  6E0A               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  4080  001952  ECE9  F00C         	call	_INT2_SetInterruptHandler	;wreg free
  4081  001956                     
  4082                           ;mcc_generated_files/ext_int.c: 104:     (INTCON3bits.INT2IE = 1);
  4083  001956  88F0               	bsf	240,4,c	;volatile
  4084  001958  0012               	return		;funcret
  4085  00195A                     __end_of_EXT_INT_Initialize:
  4086                           	opt callstack 0
  4087                           
  4088 ;; *************** function _INT2_SetInterruptHandler *****************
  4089 ;; Defined at:
  4090 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  4093 ;;		 -> INT2_DefaultInterruptHandler(1), 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         2       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4108 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        2 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    7
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_EXT_INT_Initialize
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text30
  4120  0019D2                     __ptext30:
  4121                           	opt callstack 0
  4122  0019D2                     _INT2_SetInterruptHandler:
  4123                           	opt callstack 21
  4124  0019D2                     
  4125                           ;mcc_generated_files/ext_int.c: 78:     INT2_InterruptHandler = InterruptHandler;
  4126  0019D2  C009  F0BA         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4127  0019D6  C00A  F0BB         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4128  0019DA  0012               	return		;funcret
  4129  0019DC                     __end_of_INT2_SetInterruptHandler:
  4130                           	opt callstack 0
  4131                           
  4132 ;; *************** function _INT1_SetInterruptHandler *****************
  4133 ;; Defined at:
  4134 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
  4137 ;;		 -> INT1_DefaultInterruptHandler(1), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4149 ;;      Params:         2       0       0       0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4152 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4153 ;;Total ram usage:        2 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    7
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_EXT_INT_Initialize
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text31
  4164  0019DC                     __ptext31:
  4165                           	opt callstack 0
  4166  0019DC                     _INT1_SetInterruptHandler:
  4167                           	opt callstack 21
  4168  0019DC                     
  4169                           ;mcc_generated_files/ext_int.c: 52:     INT1_InterruptHandler = InterruptHandler;
  4170  0019DC  C009  F0BC         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4171  0019E0  C00A  F0BD         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4172  0019E4  0012               	return		;funcret
  4173  0019E6                     __end_of_INT1_SetInterruptHandler:
  4174                           	opt callstack 0
  4175                           
  4176 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  4177 ;; Defined at:
  4178 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4194 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4195 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4196 ;;Total ram usage:        5 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    6
  4199 ;; This function calls:
  4200 ;;		_INT1_ISR
  4201 ;;		_INT2_ISR
  4202 ;; This function is called by:
  4203 ;;		Interrupt level 1
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	intcodelo
  4208  000018                     __pintcodelo:
  4209                           	opt callstack 0
  4210  000018                     _INTERRUPT_InterruptManagerLow:
  4211                           	opt callstack 16
  4212                           
  4213                           ;incstack = 0
  4214  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4215  00001A  CFD8 F004          	movff	status,??_INTERRUPT_InterruptManagerLow
  4216  00001E  CFE8 F005          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  4217  000022  CFE0 F006          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  4218  000026  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  4219  00002A  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  4220  00002E                     
  4221                           ;mcc_generated_files/interrupt_manager.c: 54:     if(INTCON3bits.INT1IE == 1 && INTCON3b
      +                          its.INT1IF == 1)
  4222  00002E  A6F0               	btfss	240,3,c	;volatile
  4223  000030  EF1C  F000         	goto	i1u155_21
  4224  000034  EF1E  F000         	goto	i1u155_20
  4225  000038                     i1u155_21:
  4226  000038  EF3A  F000         	goto	i1l88
  4227  00003C                     i1u155_20:
  4228  00003C  A0F0               	btfss	240,0,c	;volatile
  4229  00003E  EF23  F000         	goto	i1u156_21
  4230  000042  EF25  F000         	goto	i1u156_20
  4231  000046                     i1u156_21:
  4232  000046  EF3A  F000         	goto	i1l88
  4233  00004A                     i1u156_20:
  4234  00004A                     
  4235                           ;mcc_generated_files/interrupt_manager.c: 55:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 56:         INT1_ISR();
  4236  00004A  ECF7  F00C         	call	_INT1_ISR	;wreg free
  4237  00004E                     
  4238                           ;mcc_generated_files/interrupt_manager.c: 57:         cont2++;
  4239  00004E  0100               	movlb	0	; () banked
  4240  000050  4B62               	infsnz	_cont2& (0+255),f,b
  4241  000052  2B63               	incf	(_cont2+1)& (0+255),f,b
  4242  000054                     
  4243                           ; BSR set to: 0
  4244                           ;mcc_generated_files/interrupt_manager.c: 58:         if(cont2==61){
  4245  000054  0E3D               	movlw	61
  4246  000056  1962               	xorwf	_cont2& (0+255),w,b
  4247  000058  1163               	iorwf	(_cont2+1)& (0+255),w,b
  4248  00005A  A4D8               	btfss	status,2,c
  4249  00005C  EF32  F000         	goto	i1u157_21
  4250  000060  EF34  F000         	goto	i1u157_20
  4251  000064                     i1u157_21:
  4252  000064  EF5A  F000         	goto	i1l94
  4253  000068                     i1u157_20:
  4254  000068                     i1l2381:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;mcc_generated_files/interrupt_manager.c: 59:             cont2=0;
  4258  000068  0E00               	movlw	0
  4259  00006A  6F63               	movwf	(_cont2+1)& (0+255),b
  4260  00006C  0E00               	movlw	0
  4261  00006E  6F62               	movwf	_cont2& (0+255),b
  4262  000070  EF5A  F000         	goto	i1l94
  4263  000074                     i1l88:
  4264  000074  A8F0               	btfss	240,4,c	;volatile
  4265  000076  EF3F  F000         	goto	i1u158_21
  4266  00007A  EF41  F000         	goto	i1u158_20
  4267  00007E                     i1u158_21:
  4268  00007E  EF5A  F000         	goto	i1l94
  4269  000082                     i1u158_20:
  4270  000082  A2F0               	btfss	240,1,c	;volatile
  4271  000084  EF46  F000         	goto	i1u159_21
  4272  000088  EF48  F000         	goto	i1u159_20
  4273  00008C                     i1u159_21:
  4274  00008C  EF5A  F000         	goto	i1l94
  4275  000090                     i1u159_20:
  4276  000090                     
  4277                           ;mcc_generated_files/interrupt_manager.c: 63:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         INT2_ISR();
  4278  000090  ECF3  F00C         	call	_INT2_ISR	;wreg free
  4279  000094                     
  4280                           ;mcc_generated_files/interrupt_manager.c: 65:         cont2--;
  4281  000094  0100               	movlb	0	; () banked
  4282  000096  0762               	decf	_cont2& (0+255),f,b
  4283  000098  A0D8               	btfss	status,0,c
  4284  00009A  0763               	decf	(_cont2+1)& (0+255),f,b
  4285  00009C                     
  4286                           ; BSR set to: 0
  4287                           ;mcc_generated_files/interrupt_manager.c: 66:         if(cont2==-1){
  4288  00009C  2962               	incf	_cont2& (0+255),w,b
  4289  00009E  E106               	bnz	i1u160_21
  4290  0000A0  2963               	incf	(_cont2+1)& (0+255),w,b
  4291  0000A2  A4D8               	btfss	status,2,c
  4292  0000A4  EF56  F000         	goto	i1u160_21
  4293  0000A8  EF58  F000         	goto	i1u160_20
  4294  0000AC                     i1u160_21:
  4295  0000AC  EF5A  F000         	goto	i1l94
  4296  0000B0                     i1u160_20:
  4297  0000B0  EF34  F000         	goto	i1l2381
  4298  0000B4                     i1l94:
  4299  0000B4  C008  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  4300  0000B8  C007  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  4301  0000BC  C006  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  4302  0000C0  C005  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  4303  0000C4  C004  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  4304  0000C8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4305  0000CA  0010               	retfie	
  4306  0000CC                     __end_of_INTERRUPT_InterruptManagerLow:
  4307                           	opt callstack 0
  4308                           
  4309 ;; *************** function _INT2_ISR *****************
  4310 ;; Defined at:
  4311 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4325 ;;      Params:         0       0       0       0       0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4329 ;;Total ram usage:        0 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    5
  4332 ;; This function calls:
  4333 ;;		_INT2_CallBack
  4334 ;; This function is called by:
  4335 ;;		_INTERRUPT_InterruptManagerLow
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text33
  4340  0019E6                     __ptext33:
  4341                           	opt callstack 0
  4342  0019E6                     _INT2_ISR:
  4343                           	opt callstack 16
  4344  0019E6                     
  4345                           ;mcc_generated_files/ext_int.c: 61:     (INTCON3bits.INT2IF = 0);
  4346  0019E6  92F0               	bcf	240,1,c	;volatile
  4347  0019E8                     
  4348                           ;mcc_generated_files/ext_int.c: 64:     INT2_CallBack();
  4349  0019E8  EC44  F00C         	call	_INT2_CallBack	;wreg free
  4350  0019EC  0012               	return		;funcret
  4351  0019EE                     __end_of_INT2_ISR:
  4352                           	opt callstack 0
  4353                           
  4354 ;; *************** function _INT2_CallBack *****************
  4355 ;; Defined at:
  4356 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    4
  4377 ;; This function calls:
  4378 ;;		Absolute function
  4379 ;;		_INT2_DefaultInterruptHandler
  4380 ;; This function is called by:
  4381 ;;		_INT2_ISR
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text34
  4386  001888                     __ptext34:
  4387                           	opt callstack 0
  4388  001888                     _INT2_CallBack:
  4389                           	opt callstack 16
  4390  001888                     
  4391                           ;mcc_generated_files/ext_int.c: 71:     if(INT2_InterruptHandler)
  4392  001888  0100               	movlb	0	; () banked
  4393  00188A  51BA               	movf	_INT2_InterruptHandler& (0+255),w,b
  4394  00188C  11BB               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  4395  00188E  B4D8               	btfsc	status,2,c
  4396  001890  EF4C  F00C         	goto	i1u133_21
  4397  001894  EF4E  F00C         	goto	i1u133_20
  4398  001898                     i1u133_21:
  4399  001898  EF5B  F00C         	goto	i1l126
  4400  00189C                     i1u133_20:
  4401  00189C                     
  4402                           ; BSR set to: 0
  4403                           ;mcc_generated_files/ext_int.c: 72:     {;mcc_generated_files/ext_int.c: 73:         INT
      +                          2_InterruptHandler();
  4404  00189C  D802               	call	i1u134_28
  4405  00189E  EF5B  F00C         	goto	i1u134_29
  4406  0018A2                     i1u134_28:
  4407  0018A2  0005               	push	
  4408  0018A4  6EFA               	movwf	pclath,c
  4409  0018A6  51BA               	movf	_INT2_InterruptHandler& (0+255),w,b
  4410  0018A8  6EFD               	movwf	tosl,c
  4411  0018AA  51BB               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  4412  0018AC  6EFE               	movwf	tosh,c
  4413  0018AE  50F8               	movf	tblptru,w,c
  4414  0018B0  6EFF               	movwf	tosu,c
  4415  0018B2  50FA               	movf	pclath,w,c
  4416  0018B4  0012               	return		;indir
  4417  0018B6                     i1u134_29:
  4418  0018B6                     i1l126:
  4419  0018B6  0012               	return		;funcret
  4420  0018B8                     __end_of_INT2_CallBack:
  4421                           	opt callstack 0
  4422                           
  4423 ;; *************** function _INT2_DefaultInterruptHandler *****************
  4424 ;; Defined at:
  4425 ;;		line 81 in file "mcc_generated_files/ext_int.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		None
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    3
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_EXT_INT_Initialize
  4450 ;;		_INT2_CallBack
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text35
  4455  0019F8                     __ptext35:
  4456                           	opt callstack 0
  4457  0019F8                     _INT2_DefaultInterruptHandler:
  4458                           	opt callstack 16
  4459  0019F8  0012               	return		;funcret
  4460  0019FA                     __end_of_INT2_DefaultInterruptHandler:
  4461                           	opt callstack 0
  4462                           
  4463 ;; *************** function _INT1_ISR *****************
  4464 ;; Defined at:
  4465 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4479 ;;      Params:         0       0       0       0       0       0       0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4482 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    5
  4486 ;; This function calls:
  4487 ;;		_INT1_CallBack
  4488 ;; This function is called by:
  4489 ;;		_INTERRUPT_InterruptManagerLow
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text36
  4494  0019EE                     __ptext36:
  4495                           	opt callstack 0
  4496  0019EE                     _INT1_ISR:
  4497                           	opt callstack 16
  4498  0019EE                     
  4499                           ;mcc_generated_files/ext_int.c: 35:     (INTCON3bits.INT1IF = 0);
  4500  0019EE  90F0               	bcf	240,0,c	;volatile
  4501  0019F0                     
  4502                           ;mcc_generated_files/ext_int.c: 38:     INT1_CallBack();
  4503  0019F0  EC5C  F00C         	call	_INT1_CallBack	;wreg free
  4504  0019F4  0012               	return		;funcret
  4505  0019F6                     __end_of_INT1_ISR:
  4506                           	opt callstack 0
  4507                           
  4508 ;; *************** function _INT1_CallBack *****************
  4509 ;; Defined at:
  4510 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    4
  4531 ;; This function calls:
  4532 ;;		Absolute function
  4533 ;;		_INT1_DefaultInterruptHandler
  4534 ;; This function is called by:
  4535 ;;		_INT1_ISR
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text37
  4540  0018B8                     __ptext37:
  4541                           	opt callstack 0
  4542  0018B8                     _INT1_CallBack:
  4543                           	opt callstack 16
  4544  0018B8                     
  4545                           ;mcc_generated_files/ext_int.c: 45:     if(INT1_InterruptHandler)
  4546  0018B8  0100               	movlb	0	; () banked
  4547  0018BA  51BC               	movf	_INT1_InterruptHandler& (0+255),w,b
  4548  0018BC  11BD               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  4549  0018BE  B4D8               	btfsc	status,2,c
  4550  0018C0  EF64  F00C         	goto	i1u131_21
  4551  0018C4  EF66  F00C         	goto	i1u131_20
  4552  0018C8                     i1u131_21:
  4553  0018C8  EF73  F00C         	goto	i1l113
  4554  0018CC                     i1u131_20:
  4555  0018CC                     
  4556                           ; BSR set to: 0
  4557                           ;mcc_generated_files/ext_int.c: 46:     {;mcc_generated_files/ext_int.c: 47:         INT
      +                          1_InterruptHandler();
  4558  0018CC  D802               	call	i1u132_28
  4559  0018CE  EF73  F00C         	goto	i1u132_29
  4560  0018D2                     i1u132_28:
  4561  0018D2  0005               	push	
  4562  0018D4  6EFA               	movwf	pclath,c
  4563  0018D6  51BC               	movf	_INT1_InterruptHandler& (0+255),w,b
  4564  0018D8  6EFD               	movwf	tosl,c
  4565  0018DA  51BD               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  4566  0018DC  6EFE               	movwf	tosh,c
  4567  0018DE  50F8               	movf	tblptru,w,c
  4568  0018E0  6EFF               	movwf	tosu,c
  4569  0018E2  50FA               	movf	pclath,w,c
  4570  0018E4  0012               	return		;indir
  4571  0018E6                     i1u132_29:
  4572  0018E6                     i1l113:
  4573  0018E6  0012               	return		;funcret
  4574  0018E8                     __end_of_INT1_CallBack:
  4575                           	opt callstack 0
  4576                           
  4577 ;; *************** function _INT1_DefaultInterruptHandler *****************
  4578 ;; Defined at:
  4579 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		None
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    3
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_EXT_INT_Initialize
  4604 ;;		_INT1_CallBack
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text38
  4609  0019FA                     __ptext38:
  4610                           	opt callstack 0
  4611  0019FA                     _INT1_DefaultInterruptHandler:
  4612                           	opt callstack 16
  4613  0019FA  0012               	return		;funcret
  4614  0019FC                     __end_of_INT1_DefaultInterruptHandler:
  4615                           	opt callstack 0
  4616                           
  4617 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  4618 ;; Defined at:
  4619 ;;		line 24 in file "mcc_generated_files/interrupt_manager.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4635 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4636 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4637 ;;Total ram usage:        3 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    2
  4640 ;; This function calls:
  4641 ;;		_TMR0_ISR
  4642 ;; This function is called by:
  4643 ;;		Interrupt level 2
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	intcode
  4648  000008                     __pintcode:
  4649                           	opt callstack 0
  4650  000008                     _INTERRUPT_InterruptManagerHigh:
  4651                           	opt callstack 16
  4652                           
  4653                           ;incstack = 0
  4654  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4655  00000A  EF22  F00A         	goto	int_func
  4656                           
  4657                           	psect	intcode_body
  4658  001444                     __pintcode_body:
  4659                           	opt callstack 16
  4660  001444                     int_func:
  4661                           	opt callstack 16
  4662  001444  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManagerHigh+1
  4663  001448  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+2
  4664  00144C                     
  4665                           ;mcc_generated_files/interrupt_manager.c: 27:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4666  00144C  AAF2               	btfss	242,5,c	;volatile
  4667  00144E  EF2B  F00A         	goto	i2u149_41
  4668  001452  EF2D  F00A         	goto	i2u149_40
  4669  001456                     i2u149_41:
  4670  001456  EF77  F00A         	goto	i2l83
  4671  00145A                     i2u149_40:
  4672  00145A  A4F2               	btfss	242,2,c	;volatile
  4673  00145C  EF32  F00A         	goto	i2u150_41
  4674  001460  EF34  F00A         	goto	i2u150_40
  4675  001464                     i2u150_41:
  4676  001464  EF77  F00A         	goto	i2l83
  4677  001468                     i2u150_40:
  4678  001468                     
  4679                           ;mcc_generated_files/interrupt_manager.c: 28:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 29:         TMR0_ISR();
  4680  001468  ECD5  F00B         	call	_TMR0_ISR	;wreg free
  4681  00146C                     
  4682                           ;mcc_generated_files/interrupt_manager.c: 30:         cont++;
  4683  00146C  0100               	movlb	0	; () banked
  4684  00146E  4B66               	infsnz	_cont& (0+255),f,b
  4685  001470  2B67               	incf	(_cont+1)& (0+255),f,b
  4686  001472                     
  4687                           ; BSR set to: 0
  4688                           ;mcc_generated_files/interrupt_manager.c: 31:         if(cont==60){
  4689  001472  0E3C               	movlw	60
  4690  001474  1966               	xorwf	_cont& (0+255),w,b
  4691  001476  1167               	iorwf	(_cont+1)& (0+255),w,b
  4692  001478  A4D8               	btfss	status,2,c
  4693  00147A  EF41  F00A         	goto	i2u151_41
  4694  00147E  EF43  F00A         	goto	i2u151_40
  4695  001482                     i2u151_41:
  4696  001482  EF49  F00A         	goto	i2l2359
  4697  001486                     i2u151_40:
  4698  001486                     
  4699                           ; BSR set to: 0
  4700                           ;mcc_generated_files/interrupt_manager.c: 32:             cont=0;
  4701  001486  0E00               	movlw	0
  4702  001488  6F67               	movwf	(_cont+1)& (0+255),b
  4703  00148A  0E00               	movlw	0
  4704  00148C  6F66               	movwf	_cont& (0+255),b
  4705  00148E                     
  4706                           ; BSR set to: 0
  4707                           ;mcc_generated_files/interrupt_manager.c: 33:             cont1++;
  4708  00148E  4B64               	infsnz	_cont1& (0+255),f,b
  4709  001490  2B65               	incf	(_cont1+1)& (0+255),f,b
  4710  001492                     i2l2359:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;mcc_generated_files/interrupt_manager.c: 35:         if(cont1==60){
  4714  001492  0E3C               	movlw	60
  4715  001494  1964               	xorwf	_cont1& (0+255),w,b
  4716  001496  1165               	iorwf	(_cont1+1)& (0+255),w,b
  4717  001498  A4D8               	btfss	status,2,c
  4718  00149A  EF51  F00A         	goto	i2u152_41
  4719  00149E  EF53  F00A         	goto	i2u152_40
  4720  0014A2                     i2u152_41:
  4721  0014A2  EF59  F00A         	goto	i2l2365
  4722  0014A6                     i2u152_40:
  4723  0014A6                     
  4724                           ; BSR set to: 0
  4725                           ;mcc_generated_files/interrupt_manager.c: 36:             cont1=0;
  4726  0014A6  0E00               	movlw	0
  4727  0014A8  6F65               	movwf	(_cont1+1)& (0+255),b
  4728  0014AA  0E00               	movlw	0
  4729  0014AC  6F64               	movwf	_cont1& (0+255),b
  4730  0014AE                     
  4731                           ; BSR set to: 0
  4732                           ;mcc_generated_files/interrupt_manager.c: 37:             cont2++;
  4733  0014AE  4B62               	infsnz	_cont2& (0+255),f,b
  4734  0014B0  2B63               	incf	(_cont2+1)& (0+255),f,b
  4735  0014B2                     i2l2365:
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;mcc_generated_files/interrupt_manager.c: 39:         if(cont2==24){
  4739  0014B2  0E18               	movlw	24
  4740  0014B4  1962               	xorwf	_cont2& (0+255),w,b
  4741  0014B6  1163               	iorwf	(_cont2+1)& (0+255),w,b
  4742  0014B8  A4D8               	btfss	status,2,c
  4743  0014BA  EF61  F00A         	goto	i2u153_41
  4744  0014BE  EF63  F00A         	goto	i2u153_40
  4745  0014C2                     i2u153_41:
  4746  0014C2  EF67  F00A         	goto	i2l2369
  4747  0014C6                     i2u153_40:
  4748  0014C6                     
  4749                           ; BSR set to: 0
  4750                           ;mcc_generated_files/interrupt_manager.c: 40:             cont2=0;
  4751  0014C6  0E00               	movlw	0
  4752  0014C8  6F63               	movwf	(_cont2+1)& (0+255),b
  4753  0014CA  0E00               	movlw	0
  4754  0014CC  6F62               	movwf	_cont2& (0+255),b
  4755  0014CE                     i2l2369:
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;mcc_generated_files/interrupt_manager.c: 43:         PORTDbits.RD0=~PORTDbits.RD0;
  4759  0014CE  B083               	btfsc	131,0,c	;volatile
  4760  0014D0  EF6C  F00A         	goto	i2u154_41
  4761  0014D4  EF6F  F00A         	goto	i2u154_40
  4762  0014D8                     i2u154_41:
  4763  0014D8  0E01               	movlw	1
  4764  0014DA  EF70  F00A         	goto	i2u154_46
  4765  0014DE                     i2u154_40:
  4766  0014DE  0E00               	movlw	0
  4767  0014E0                     i2u154_46:
  4768  0014E0  0AFF               	xorlw	255
  4769  0014E2  6E01               	movwf	??_INTERRUPT_InterruptManagerHigh^0,c
  4770  0014E4  5083               	movf	131,w,c	;volatile
  4771  0014E6  1801               	xorwf	??_INTERRUPT_InterruptManagerHigh^0,w,c
  4772  0014E8  0BFE               	andlw	-2
  4773  0014EA  1801               	xorwf	??_INTERRUPT_InterruptManagerHigh^0,w,c
  4774  0014EC  6E83               	movwf	131,c	;volatile
  4775  0014EE                     i2l83:
  4776  0014EE  C003  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+2,pclatu
  4777  0014F2  C002  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclath
  4778  0014F6  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4779  0014F8  0011               	retfie		f
  4780  0014FA                     __end_of_INTERRUPT_InterruptManagerHigh:
  4781                           	opt callstack 0
  4782                           
  4783 ;; *************** function _TMR0_ISR *****************
  4784 ;; Defined at:
  4785 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4802 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4803 ;;Total ram usage:        0 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    1
  4806 ;; This function calls:
  4807 ;;		Absolute function
  4808 ;;		_TMR0_DefaultInterruptHandler
  4809 ;; This function is called by:
  4810 ;;		_INTERRUPT_InterruptManagerHigh
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text40
  4815  0017AA                     __ptext40:
  4816                           	opt callstack 0
  4817  0017AA                     _TMR0_ISR:
  4818                           	opt callstack 16
  4819  0017AA                     
  4820                           ;mcc_generated_files/tmr0.c: 91:     INTCONbits.TMR0IF = 0;
  4821  0017AA  94F2               	bcf	242,2,c	;volatile
  4822  0017AC                     
  4823                           ;mcc_generated_files/tmr0.c: 95:     TMR0H = timer0ReloadVal >> 8;
  4824  0017AC  5055               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4825  0017AE  6ED7               	movwf	215,c	;volatile
  4826  0017B0                     
  4827                           ;mcc_generated_files/tmr0.c: 96:     TMR0L = (uint8_t) timer0ReloadVal;
  4828  0017B0  C054  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4829  0017B4                     
  4830                           ;mcc_generated_files/tmr0.c: 98:     if(TMR0_InterruptHandler)
  4831  0017B4  0100               	movlb	0	; () banked
  4832  0017B6  51B8               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4833  0017B8  11B9               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4834  0017BA  B4D8               	btfsc	status,2,c
  4835  0017BC  EFE2  F00B         	goto	i2u136_41
  4836  0017C0  EFE4  F00B         	goto	i2u136_40
  4837  0017C4                     i2u136_41:
  4838  0017C4  EFF1  F00B         	goto	i2l175
  4839  0017C8                     i2u136_40:
  4840  0017C8                     
  4841                           ; BSR set to: 0
  4842                           ;mcc_generated_files/tmr0.c: 99:     {;mcc_generated_files/tmr0.c: 100:         TMR0_Int
      +                          erruptHandler();
  4843  0017C8  D802               	call	i2u137_48
  4844  0017CA  EFF1  F00B         	goto	i2u137_49
  4845  0017CE                     i2u137_48:
  4846  0017CE  0005               	push	
  4847  0017D0  6EFA               	movwf	pclath,c
  4848  0017D2  51B8               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4849  0017D4  6EFD               	movwf	tosl,c
  4850  0017D6  51B9               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4851  0017D8  6EFE               	movwf	tosh,c
  4852  0017DA  50F8               	movf	tblptru,w,c
  4853  0017DC  6EFF               	movwf	tosu,c
  4854  0017DE  50FA               	movf	pclath,w,c
  4855  0017E0  0012               	return		;indir
  4856  0017E2                     i2u137_49:
  4857  0017E2                     i2l175:
  4858  0017E2  0012               	return		;funcret
  4859  0017E4                     __end_of_TMR0_ISR:
  4860                           	opt callstack 0
  4861                           
  4862 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4863 ;; Defined at:
  4864 ;;		line 111 in file "mcc_generated_files/tmr0.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		None
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4881 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4882 ;;Total ram usage:        0 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_TMR0_Initialize
  4888 ;;		_TMR0_ISR
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text41
  4893  0019FC                     __ptext41:
  4894                           	opt callstack 0
  4895  0019FC                     _TMR0_DefaultInterruptHandler:
  4896                           	opt callstack 16
  4897  0019FC  0012               	return		;funcret
  4898  0019FE                     __end_of_TMR0_DefaultInterruptHandler:
  4899                           	opt callstack 0
  4900                           
  4901                           	psect	text42
  4902  000000                     __ptext42:
  4903                           	opt callstack 0
  4904  000000                     
  4905                           	psect	rparam
  4906  0000                     
  4907                           	psect	temp
  4908  000056                     btemp:
  4909                           	opt callstack 0
  4910  000056                     	ds	1
  4911  0000                     int$flags	set	btemp
  4912  0000                     wtemp8	set	btemp+1
  4913  0000                     ttemp5	set	btemp+1
  4914  0000                     ttemp6	set	btemp+4
  4915  0000                     ttemp7	set	btemp+8
  4916                           tosu	equ	0xFFF
  4917                           tosh	equ	0xFFE
  4918                           tosl	equ	0xFFD
  4919                           stkptr	equ	0xFFC
  4920                           pclatu	equ	0xFFB
  4921                           pclath	equ	0xFFA
  4922                           pcl	equ	0xFF9
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           prodh	equ	0xFF4
  4928                           prodl	equ	0xFF3
  4929                           indf0	equ	0xFEF
  4930                           postinc0	equ	0xFEE
  4931                           postdec0	equ	0xFED
  4932                           preinc0	equ	0xFEC
  4933                           plusw0	equ	0xFEB
  4934                           fsr0h	equ	0xFEA
  4935                           fsr0l	equ	0xFE9
  4936                           wreg	equ	0xFE8
  4937                           indf1	equ	0xFE7
  4938                           postinc1	equ	0xFE6
  4939                           postdec1	equ	0xFE5
  4940                           preinc1	equ	0xFE4
  4941                           plusw1	equ	0xFE3
  4942                           fsr1h	equ	0xFE2
  4943                           fsr1l	equ	0xFE1
  4944                           bsr	equ	0xFE0
  4945                           indf2	equ	0xFDF
  4946                           postinc2	equ	0xFDE
  4947                           postdec2	equ	0xFDD
  4948                           preinc2	equ	0xFDC
  4949                           plusw2	equ	0xFDB
  4950                           fsr2h	equ	0xFDA
  4951                           fsr2l	equ	0xFD9
  4952                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         58
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      85
    BANK0           160     36      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1348_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> horas(BANK0[4]), minut(BANK0[4]), segun(BANK0[4]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    print@a	PTR unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[2]), STR_5(CODE[2]), horas(BANK0[4]), minut(BANK0[4]), 
		 -> segun(BANK0[4]), STR_1(CODE[12]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _setCursor->_comando
    _print->_caracter
    _caracter->_comando
    _ocultarcursor->_comando
    _begin->_comando
    _comando->_busdata
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12473
                  _SYSTEM_Initialize
                              _begin
                      _ocultarcursor
                              _print
                          _setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   10275
                                             20 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9423
                                             12 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    8896
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4829
                                             35 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              8 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              8 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1565
                                             15 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              8 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            7     6      1     938
                                             10 COMRAM     7     6      1
                            _comando
 ---------------------------------------------------------------------------------
 (1) _print                                                6     4      2     746
                                             13 COMRAM     6     4      2
                           _caracter
 ---------------------------------------------------------------------------------
 (2) _caracter                                             3     3      0     200
                                             10 COMRAM     3     3      0
                            _comando
 ---------------------------------------------------------------------------------
 (1) _ocultarcursor                                        0     0      0     110
                            _comando
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0     110
                            _comando
 ---------------------------------------------------------------------------------
 (2) _comando                                              1     1      0     110
                                              9 COMRAM     1     1      0
                            _busdata
 ---------------------------------------------------------------------------------
 (3) _busdata                                              1     1      0      88
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             10 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     196
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        5     5      0       0
                                              3 COMRAM     5     5      0
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (10) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                      3     3      0       0
                                              0 COMRAM     3     3      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _begin
     _comando
       _busdata
   _ocultarcursor
     _comando
       _busdata
   _print
     _caracter
       _comando
         _busdata
   _setCursor
     _comando
       _busdata
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _INTERRUPT_InterruptManagerLow (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      5E       5       58.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      55       1       90.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3       6        0.0%
DATA                 0      0      B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Oct 24 19:10:48 2020

                                      l39 17A8                                        l73 19D0  
                                      bsr 000FE0                       ___wmul@multiplicand 000B  
                         _timer0ReloadVal 0054                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l210 19A4                                       l116 19E4  
                                     l213 19C6                                       l135 1958  
                                     l303 19B2                                       l129 19DA  
                                     l156 1886                                       l260 161C  
                                     l332 13C6                                       l262 1632  
                                     l270 1722                                       l342 0B96  
                                     l335 1408                                       l264 1634  
                                     l256 15F0                                       l280 1976  
                                     l352 0D5E                                       l344 0B9E  
                                     l273 0F36                                       l337 1442  
                                     l178 19BC                                       l258 1606  
                                     l274 0F7C                                       l267 198E  
                                     l275 0FC2                                       l277 1008  
                                     l286 1576                                       l366 0908  
                                     l385 15D0                                       l386 15D8  
                                     l379 0B5E                                       l389 1932  
                                     l834 10F8                                       l827 10D8  
                                     l844 12B6                                       l837 1296  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     _pad 1382                                       tosl 000FFD  
                                     wreg 000FE8                             _INT1_CallBack 18B8  
                                    l1102 16D8                                      l2001 1608  
                                    l2003 1616                                      l1132 1686  
                                    l2005 161E                                      l1117 1380  
                                    l1125 1766                                      l1141 1850  
                                    l2007 162C                                      l1135 19F6  
                                    l2201 1768                                      l2203 1780  
                                    l1091 0EEE                                      l2221 1938  
                                    l2205 1782                                      l2301 1506  
                                    l1094 181A                                      l2223 1944  
                                    l2207 17A6                                      l2231 1852  
                                    l2303 1536                                      l1088 0EE6  
                                    l2225 1946                                      l2209 19C8  
                                    l2241 1876                                      l2233 1854  
                                    l2305 153A                                      l2321 0F02  
                                    l2227 1948                                      l2219 1934  
                                    l2091 19B4                                      l2243 1882  
                                    l2235 185C                                      l2251 1966  
                                    l2331 0F76                                      l2323 0F2A  
                                    l2229 1956                                      l2245 19BE  
                                    l2237 1872                                      l2093 197A  
                                    l2253 1968                                      l2341 0FFC  
                                    l2333 0F8E                                      l2325 0F30  
                                    l3053 08C8                                      l2087 19DC  
                                    l2239 1874                                      l2095 197E  
                                    l2255 196E                                      l2247 195C  
                                    l2343 1002                                      l2335 0FB6  
                                    l2327 0F48                                      l2319 0EF2  
                                    l3055 0E1C                                      l2089 19D2  
                                    l2097 1984                                      l2257 1974  
                                    l2249 1962                                      l2337 0FBC  
                                    l2329 0F70                                      l2291 199C  
                                    l2099 198C                                      l2339 0FD4  
                                    l2293 19A0                                      l2285 1990  
                                    l2701 103C                                      l2287 1994  
                                    l2295 16DA                                      l2711 10BE  
                                    l2703 1050                                      l2631 12B8  
                                    l2289 1998                                      l2297 19A6  
                                    l2801 0DF6                                      l2713 10C0  
                                    l2705 105E                                      l2721 120E  
                                    l2641 133A                                      l2633 12CA  
                                    l2299 14FA                                      l2803 0DFE  
                                    l2715 10D2                                      l2707 1070  
                                    l2731 1290                                      l2723 1222  
                                    l2635 12DC                                      l2651 1746  
                                    l2741 16D2                                      l2733 1688  
                                    l2813 0EA6                                      l2805 0E32  
                                    l2709 109E                                      l2725 1230  
                                    l2717 11E8                                      l2637 12E6  
                                    l2645 1724                                      l2653 181C  
                                    l2901 0B1C                                      l2735 168C  
                                    l2815 0EB8                                      l2727 125E  
                                    l2719 1206                                      l2639 1304  
                                    l2647 1730                                      l2655 1828  
                                    l2671 13BE                                      l2663 1382  
                                    l2751 0B8A                                      l2831 085C  
                                    l2823 0816                                      l2737 16A0  
                                    l2817 0ECA                                      l2809 0E68  
                                    l2729 127E                                      l2649 1742  
                                    l2657 182C                                      l2681 142A  
                                    l2673 13D2                                      l2665 1390  
                                    l2761 0C54                                      l2753 0BC6  
                                    l2745 0B60                                      l2841 0884  
                                    l2833 086A                                      l2825 083A  
                                    l2905 0B28                                      l2691 192A  
                                    l2739 16CE                                      l2659 1844  
                                    l2675 13E6                                      l2667 13A4  
                                    l2771 0CF4                                      l2763 0C5A  
                                    l2755 0BCE                                      l2747 0B6E  
                                    l2907 0B4C                                      l2835 086C  
                                    l2827 0848                                      l2923 1578  
                                    l2931 1636                                      l2685 17E4  
                                    l2781 0D60                                      l2677 13EA  
                                    l2669 13B2                                      l2773 0D0E  
                                    l2765 0C60                                      l2757 0BD8  
                                    l2749 0B70                                      l2861 0916  
                                    l2853 0896                                      l2845 088A  
                                    l2837 087E                                      l2829 0858  
                                    l2925 1580                                      l2933 1648  
                                    ?_pad 0019                                      l2791 0DCE  
                                    l2783 0D74                                      l2695 100A  
                                    l2679 1416                                      l2775 0D28  
                                    l2759 0BDE                                      l2767 0CC4  
                                    l2871 098E                                      l2863 0918  
                                    l2927 158E                                      l2935 1650  
                                    l2951 1104                                      l2943 10FA  
                                    l1993 15DC                                      l2689 190E  
                                    l2793 0DD2                                      l2785 0D78  
                                    l2697 1016                                      l2769 0CD6  
                                    l2777 0D36                                      l2873 09AE  
                                    l2881 0A16                                      l2865 093C  
                                    l2857 08A2                                      l2849 0890  
                                    l2929 15B4                                      l2937 1658  
                                    l2961 1154                                      l2953 1108  
                                    l2945 10FE                                      l1995 15EA  
                                    l2787 0D7C                                      l2699 1034  
                                    l2891 0AE0                                      l2883 0A3A  
                                    l2875 09BC                                      l2867 0972  
                                    l2859 08F6                                      l2939 1674  
                                    l2971 119E                                      l2963 1172  
                                    l2955 110C                                      l2947 1100  
                                    l1997 15F2                                      l2797 0DD8  
                                    l2789 0D98                                      l2893 0AEE  
                                    l2885 0A84                                      l2869 0980  
                                    l2981 11D4                                      l2973 11A8  
                                    l2965 117C                                      l2957 1118  
                                    l2949 1102                                      l1999 1600  
                                    l2799 0DEE                                      l2895 0B02  
                                    l2879 0A04                                      l2975 11B4  
                                    l2967 1188                                      l2959 1136  
                                    l2889 0ABC                                      l2977 11BE  
                                    l2969 1192                                      l2899 0B0E  
                                    l2979 11CA                                      STR_1 0801  
                                    STR_2 080D                                      STR_3 080D  
                                    STR_4 080D                                      STR_5 0812  
                                    STR_6 0812                                      u1030 15EA  
                                    u1031 15E6                                      u1040 1600  
                                    u2000 0916                                      u1041 15FC  
                                    u2001 0912                                      u1050 1616  
                                    u2010 093C                                      u1051 1612  
                                    u2011 0938                                      u1060 162C  
                                    u2020 0980                                      u1061 1628  
                                    u2021 097C                                      u2030 09FC  
                                    u2031 09F6                                      u1400 1576  
                                    u2040 09FE                                      u1401 1572  
                                    u1410 0F02                                      u2050 0A16  
                                    u1411 0EFE                                      u2051 0A12  
                                    u2060 0A3A                                      u2061 0A36  
                                    _LATA 000F89                                      u1430 0F48  
                                    u2070 0AE0                                      _LATB 000F8A  
                                    u1431 0F44                                      u2071 0ADC  
                                    _LATC 000F8B                                      u2080 15D0  
                                    _LATD 000F8C                                      u1425 0F1A  
                                    u2081 15CC                                      _LATE 000F8D  
                                    u1450 0F8E                                      u1451 0F8A  
                                    u1380 1532                                      u1700 13B2  
                                    u1445 0F60                                      u1701 13AE  
                                    u1390 1566                                      u1470 0FD4  
                                    u1630 12CA                                      u1710 1408  
                                    u1471 0FD0                                      u1631 12C6  
                                    u1711 1404                                      u1800 1230  
                                    u1640 12DC                                      u1720 1416  
                                    u2097 1986                                      u1465 0FA6  
                                    u1801 122C                                      u1641 12D8  
                                    u1721 1412                                      u1730 1814  
                                    u1810 125E                                      u1650 1304  
                                    u1387 1528                                      u1731 180E  
                                    u1811 125A                                      u1651 1300  
                                    u1740 1816                                      u1820 16A0  
                                    u1660 133A                                      u1900 0D36  
                                    u1397 155C                                      u1485 0FEC  
                                    u1821 169C                                      u1661 1336  
                                    u1901 0D32                                      u1830 16CE  
                                    u1910 0D98                                      u1670 1766  
                                    u1831 16CA                                      u1911 0D94  
                                    u1751 1010                                      u1671 1762  
                                    u1920 0DCE                                      u1760 1034  
                                    u1680 1844                                      u1840 0B6E  
                                    u1921 0DCA                                      u1761 1030  
                                    u1681 1840                                      u1841 0B6A  
                                    u1930 0DEA                                      u1770 105E  
                                    u1690 1390                                      u1850 0B8A  
                                    u1931 0DE6                                      u1771 105A  
                                    u1691 138C                                      u1851 0B86  
                                    u1940 0EA0                                      u1780 109E  
                                    u1860 0CD6                                      u1941 0E9A  
                                    u1781 109A                                      u1861 0CD2  
                                    u1950 0EA2                                      u1790 1206  
                                    u1870 0CF4                                      u1791 1202  
                                    u1871 0CF0                                      u1960 0EB8  
                                    u1880 0D0E                                      u1961 0EB4  
                                    u1881 0D0A                                      u1970 0ECA  
                                    u1890 0D28                                      u1971 0EC6  
                                    u1891 0D24                                      u1980 083A  
                                    u1981 0836                                      u1990 0908  
                                    u1991 0904                                      i1l94 00B4  
                                    i1l88 0074                                      i2l83 14EE  
                                    _WPUB 000F85                             _INT2_CallBack 1888  
                                    _dbuf 0068                                      _atoi 0D60  
                                    _cont 0066                                      _main 10FA  
                                    _prec 0050                                      _nout 0060  
                                    pad@i 0020                                      pad@p 001D  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 0022  
                                    fsr2l 000FD9                                      btemp 0056  
                                    _utoa 0B60                             __CFG_BORV$190 000000  
       __size_of_INT2_SetInterruptHandler 000A                 ?_INT2_SetInterruptHandler 0009  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                             __CFG_IESO$OFF 000000  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                                   ??_pad 001F                   __end_of_TMR0_Initialize 1888  
                        __end_of_INT1_ISR 19F6                          __end_of_INT2_ISR 19EE  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 19C8                                     ?_atoi 0010  
                                   ?_main 0001                     __end_of_ocultarcursor 19B4  
                                   ?_utoa 0024                                     _T0CON 000FD5  
                         __end_of___lodiv 10FA                           __end_of___lomod 12B8  
                          __CFG_DEBUG$OFF 000000                                     i1l113 18E6  
                                   i1l122 19EC                                     i1l132 19F8  
                                   i1l109 19F4                                     i1l126 18B6  
                                   i1l119 19FA                                     i2l181 19FC  
                                   i2l175 17E2                              vfpfcnvrt@fmt 0046  
                                   _TMR0H 000FD7                              vfpfcnvrt@llu 0094  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0009                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                           __end_of_comando 1990  
                        __end_of_TMR0_ISR 17E4                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          ?_INT1_CallBack 0001                                     _begin 16DA  
                          __CFG_EBTRB$OFF 000000                           __end_of_busdata 1636  
                                   _cont1 0064                                     _cont2 0062  
                                   _flags 0052            ??_INT1_DefaultInterruptHandler 0004  
                                   _horas 0088                                     _fputc 12B8  
                                   _fputs 1724                           __end_of_isdigit 181C  
                                   _minut 008C                                     _segun 0090  
                                   _print 14FA                                     atoi@n 001D  
                                   pad@fp 0019                                     atoi@s 0010  
                                   _width 004E                                     _putch 19F6  
                          ?_INT2_CallBack 0001                           __end_of_isspace 16DA  
                _INT1_SetInterruptHandler 19DC                                     pclath 000FFA  
                                   tablat 000FF5                                     ttemp5 0057  
                                   ttemp6 005A                                     ttemp7 005E  
                                   utoa@d 0026                                     utoa@i 0042  
                                   utoa@n 003A                                     utoa@p 0036  
                                   utoa@w 0038                                     status 000FD8  
                          __CFG_T3CMX$RC0 000000                                     wtemp8 0057  
                         __end_of_sprintf 1688                          ___lodiv@dividend 0009  
                          __CFG_ICPRT$OFF 000000            ?_INTERRUPT_InterruptManagerLow 0001  
                          __CFG_PBADEN$ON 000000                           __initialization 18E8  
                            __end_of_atoi 0EF0                              __end_of_main 11E8  
                            __end_of_utoa 0D60                            __CFG_PCLKEN$ON 000000  
                                  ??_atoi 0012                                    ??_main 004E  
                                  ??_utoa 002E                             __activetblptr 000002  
                        ___lodiv@quotient 0019                            __CFG_SDOMX$RB3 000000  
                         __CFG_CCP2MX$RC1 000000                                    ?_begin 0001  
                                  ?_fputc 0009                                    ?_fputs 0012  
                                  ?_print 000E                                    _ANSELA 000F5B  
                                  ?_putch 0001                                    _ANSELB 000F5C  
                                  _ANSELC 000F5D                                    _ANSELD 000F5E  
                                  _ANSELE 000F5F                                    i1l2211 18B8  
                                  i1l2213 18CC                                    i1l2215 1888  
                                  i1l2217 189C                                    i1l2281 19E6  
                                  i1l2283 19E8                                    i1l2371 002E  
                                  i1l2277 19EE                                    i1l2381 0068  
                                  i1l2373 003C                                    i1l2279 19F0  
                                  i1l2383 0082                                    i1l2375 004A  
                                  i1l2385 0090                                    i1l2377 004E  
                                  i1l2387 0094                                    i1l2379 0054  
                                  i1l2389 009C                                    i2l2271 17B0  
                                  i2l2351 146C                                    i2l2273 17B4  
                                  i2l2361 14A6                                    i2l2353 1472  
                                  i2l2345 144C                                    i2l2275 17C8  
                                  i2l2267 17AA                                    i2l2363 14AE  
                                  i2l2355 1486                                    i2l2347 145A  
                                  i2l2269 17AC                                    i2l2365 14B2  
                                  i2l2357 148E                                    i2l2349 1468  
                          __CFG_WDTEN$OFF 000000                                    i2l2367 14C6  
                                  i2l2359 1492                                    i2l2369 14CE  
                                  _OSCCON 000FD3                             vfpfcnvrt@done 009C  
                        __end_of_caracter 1978                            __CFG_XINST$OFF 000000  
                            vfprintf@cfmt 00A6                                    ___wmul 190E  
                          __CFG_STVREN$ON 000000                                 ??___lodiv 0019  
                               ??___lomod 0019                          ?_TMR0_Initialize 0001  
                                  clear_0 18EE                                    pad@buf 001B  
                               ??_comando 000A                                    _strlen 181C  
                               ??_busdata 0009                                    fputc@c 0009  
    __end_of_INT2_DefaultInterruptHandler 19FA     __size_of_INT2_DefaultInterruptHandler 0002  
            _INT2_DefaultInterruptHandler 19F8                                    fputs@c 0016  
                                  fputs@i 0017                                    fputs@s 0012  
                               ??_isdigit 000B                           ??_INT1_CallBack 0004  
                            __mediumconst 0000                                 ??_isspace 000B  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                    print@a 000E  
                                  print@k 0012                                    putch@c 0001  
                         ??_INT2_CallBack 0004                          __end_of_vfprintf 15DA  
                                  utoa@fp 0024  TMR0_SetInterruptHandler@InterruptHandler 0009  
INT2_SetInterruptHandler@InterruptHandler 0009  INT1_SetInterruptHandler@InterruptHandler 0009  
                               ??_sprintf 004E             __size_of_INTERRUPT_Initialize 000A  
                    __CFG_LS48MHZ$SYS24X4 000000          ??_INTERRUPT_InterruptManagerHigh 0001  
         ?_INTERRUPT_InterruptManagerHigh 0001                         _SYSTEM_Initialize 1990  
                              __accesstop 0060                   __end_of__initialization 1900  
                               ?_INT1_ISR 0001                                 ?_INT2_ISR 0001  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                          __CFG_nPWRTEN$OFF 000000  
                     ??_SYSTEM_Initialize 000D                             __end_of_begin 1724  
                               ?_TMR0_ISR 0001                             __end_of_fputc 1382  
                           __end_of_fputs 1768                             __end_of_print 1578  
                           __end_of_putch 19F8               __size_of_EXT_INT_Initialize 0026  
        __end_of_INT2_SetInterruptHandler 19DC           fp__INT2_DefaultInterruptHandler 0000  
           ?_INT2_DefaultInterruptHandler 0001                                   ??_begin 000B  
                                 ??_fputc 000D                 __end_of_SYSTEM_Initialize 19A6  
                                 ??_fputs 0016                                   ??_print 0010  
                                 ??_putch 0009                                __pbssBANK0 0060  
                              ??_INT1_ISR 0004                                ??_INT2_ISR 0004  
                              __pnvCOMRAM 0054                         __CFG_PLLSEL$PLL4X 000000  
        __end_of_TMR0_SetInterruptHandler 19BE                                   ?___wmul 0009  
                              ??_TMR0_ISR 0001                        __size_of_setCursor 011A  
                                 ?_strlen 0009                ??_INT1_SetInterruptHandler 000B  
                               ?_caracter 0001                                   _OSCCON2 000FD2  
                      __size_of_vfpfcnvrt 034A                          ___lomod@dividend 0009  
                                 __Hparam 0000                                   __Lparam 0000  
                         __size_of___wmul 0026                                   ___lodiv 100A  
                                 ___lomod 11E8                                 ?_vfprintf 00A0  
                            __psmallconst 0800                                   __pcinit 18E8  
                                 __ramtop 0800                                   __ptext0 10FA  
                                 __ptext1 1636                                   __ptext2 1578  
                                 __ptext3 0816                                   __ptext4 0B60  
                                 __ptext5 1382                                   __ptext6 181C  
                                 __ptext7 1724                                   __ptext8 12B8  
                                 __ptext9 19F6                                   _comando 1978  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                                 _busdata 15DA                     _OSCILLATOR_Initialize 19BE  
                            __size_of_pad 00C2                                   _isdigit 17E4  
                              ??_caracter 000B                  ??_PIN_MANAGER_Initialize 0009  
                                 _isspace 1688                                   atoi@neg 0016  
              __size_of_SYSTEM_Initialize 0016                                   _sprintf 1636  
                          __pintcode_body 1444                      end_of_initialization 1900  
                       __end_of_setCursor 100A                  _INT2_SetInterruptHandler 19D2  
          ??_INT2_DefaultInterruptHandler 0004                                   fputc@fp 000B  
                           __Lmediumconst 0000                                   int_func 1444  
                                 fputs@fp 0014                    __size_of_ocultarcursor 000E  
                       __end_of_vfpfcnvrt 0B60                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                ??_vfprintf 004E  
                                 strlen@a 000B                                   strlen@s 0009  
                _TMR0_SetInterruptHandler 19B4                     _INT1_InterruptHandler 00BC  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                       __size_of_INT1_ISR 0008                         __size_of_INT2_ISR 0008  
            __end_of_INTERRUPT_Initialize 19D2                               vfpfcnvrt@ap 0048  
                             vfpfcnvrt@fp 0044                            __end_of___wmul 1934  
                       __size_of_TMR0_ISR 003A                    ?_OSCILLATOR_Initialize 0001  
                           _ocultarcursor 19A6                            __end_of_strlen 1852  
                     start_initialization 18E8                           ___lodiv@divisor 0011  
                         ___lodiv@counter 0021                  __size_of_TMR0_Initialize 0036  
         __size_of_PIN_MANAGER_Initialize 0042                     __end_of_INT1_CallBack 18E8  
                             __end_of_pad 1444                     __end_of_INT2_CallBack 18B8  
                         __CFG_nLPBOR$OFF 000000                               vfprintf@fmt 00A2  
                                ??___wmul 000D                __end_of_EXT_INT_Initialize 195A  
                          ?_ocultarcursor 0001                                  ??_strlen 000B  
                             __pbssCOMRAM 004E                             __pcstackBANK0 0094  
                       __size_of_caracter 001E                     _INT2_InterruptHandler 00BA  
                               _atoi$1326 0018                                 _atoi$1327 001C  
                               _atoi$1328 001A                     _TMR0_InterruptHandler 00B8  
                               __pnvBANK0 00B8                    _PIN_MANAGER_Initialize 1768  
                               __pintcode 0008                                  ?___lodiv 0009  
                                ?___lomod 0009                                setCursor@m 000F  
                              setCursor@n 0010                                setCursor@x 0011  
                              setCursor@y 000B                               __pintcodelo 0018  
                       __size_of_vfprintf 0062                                  ?_comando 0001  
                         ___lomod@divisor 0011                                  ?_busdata 0001  
                             __smallconst 0800                           ___lomod@counter 0019  
              ??_INT2_SetInterruptHandler 000B                                  ?_isdigit 0009  
                                ?_isspace 0009                                 caracter@a 000D  
                               caracter@m 000B                                 caracter@n 000C  
                          __size_of_begin 004A                                  ?_sprintf 00A8  
                          __size_of_fputc 00CA                            __size_of_fputs 0044  
                          __size_of_print 007E                            __size_of_putch 0002  
                    _INTERRUPT_Initialize 19C8                         ??_TMR0_Initialize 000B  
                                _INT1_ISR 19EE                                  _INT2_ISR 19E6  
                          ___wmul@product 000D         __size_of_INT1_SetInterruptHandler 000A  
                               _setCursor 0EF0                 ?_INT1_SetInterruptHandler 0009  
                                i1u131_20 18CC                                  i1u131_21 18C8  
                                i1u132_28 18D2                                  i1u133_20 189C  
                                i1u132_29 18E6                                  i1u133_21 1898  
                                i1u134_28 18A2                                  i1u134_29 18B6  
                                i1u160_20 00B0                                  i1u160_21 00AC  
                                i1u155_20 003C                                  i1u155_21 0038  
                                i1u156_20 004A                                  i1u156_21 0046  
                                i1u157_20 0068                                  i1u157_21 0064  
                                i1u158_20 0082                                  i1u158_21 007E  
                                i1u159_20 0090                                  i1u159_21 008C  
                                i2u150_40 1468                                  i2u150_41 1464  
                                i2u151_40 1486                                  i2u151_41 1482  
                                i2u136_40 17C8                                  i2u152_40 14A6  
                                i2u136_41 17C4                                  i2u152_41 14A2  
                                i2u153_40 14C6                                  i2u153_41 14C2  
                                i2u137_48 17CE                                  i2u154_40 14DE  
                                i2u137_49 17E2                                  i2u154_41 14D8  
                                i2u154_46 14E0                                  i2u149_40 145A  
              ??_TMR0_SetInterruptHandler 000B                                  i2u149_41 1456  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 17AA                           ??_ocultarcursor 000B  
                               _vfpfcnvrt 0816                         ___wmul@multiplier 0009  
                       __CFG_CFGPLLEN$OFF 000000                              _isspace$1344 000F  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                   ?_INTERRUPT_Initialize 0001                                ?_setCursor 000B  
                                __Hrparam 0000                                vfprintf@ap 00A4  
                                __Lrparam 0000                                vfprintf@fp 00A0  
                      __CFG_BOREN$SBORDIS 000000                   ??_OSCILLATOR_Initialize 0009  
                        __size_of___lodiv 00F0                          __size_of___lomod 00D0  
                              ?_vfpfcnvrt 0044                          __size_of_comando 0018  
                              sprintf@fmt 00AA                                  _caracter 195A  
                        __size_of_busdata 005C           ??_INTERRUPT_InterruptManagerLow 0004  
                        __size_of_isdigit 0038                          __size_of_isspace 0052  
                                __ptext10 11E8                                  __ptext11 100A  
                                __ptext20 16DA                                  __ptext12 0D60  
                                __ptext21 1978                                  __ptext13 1688  
                                __ptext30 19D2                                  __ptext22 15DA  
                                __ptext14 17E4                                  __ptext31 19DC  
                                __ptext23 1990                                  __ptext15 190E  
                                __ptext40 17AA                                  __ptext24 1852  
                                __ptext16 0EF0                                  __ptext41 19FC  
                                __ptext33 19E6                                  __ptext25 19B4  
                                __ptext17 14FA                                  __ptext42 0000  
                                __ptext34 1888                                  __ptext26 1768  
                                __ptext18 195A                                  __ptext35 19F8  
                                __ptext27 19BE                                  __ptext19 19A6  
                                __ptext36 19EE                                  __ptext28 19C8  
                                __ptext37 18B8                                  __ptext29 1934  
                                __ptext38 19FA                          __size_of_sprintf 0052  
                           __size_of_atoi 0190                             __size_of_main 00EE  
                           __size_of_utoa 0200      __end_of_TMR0_DefaultInterruptHandler 19FE  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 19FC  
                                int$flags 0056                                  comando@a 000A  
                                _vfprintf 1578      __end_of_INT1_DefaultInterruptHandler 19FC  
   __size_of_INT1_DefaultInterruptHandler 0002              _INT1_DefaultInterruptHandler 19FA  
                                busdata@a 0009                                _INTCONbits 000FF2  
                                isdigit@c 0009                    ??_INTERRUPT_Initialize 0009  
                      _EXT_INT_Initialize 1934                                  intlevel1 0000  
                                intlevel2 0000                                 sprintf@ap 00B0  
                                isspace@c 0009                   ?_PIN_MANAGER_Initialize 0001  
                             ??_setCursor 000C                       ?_EXT_INT_Initialize 0001  
         fp__TMR0_DefaultInterruptHandler 0000             ?_TMR0_DefaultInterruptHandler 0001  
                  __size_of_INT1_CallBack 0030                      __CFG_CPUDIV$NOCLKDIV 000000  
                             ??_vfpfcnvrt 004A                             _vfpfcnvrt$871 009E  
                  __size_of_INT2_CallBack 0030    __end_of_INTERRUPT_InterruptManagerHigh 14FA  
 __size_of_INTERRUPT_InterruptManagerHigh 14F2            _INTERRUPT_InterruptManagerHigh 0008  
                    ??_EXT_INT_Initialize 000B                                  sprintf@f 00B2  
                                sprintf@s 00A8           fp__INT1_DefaultInterruptHandler 0000  
           ?_INT1_DefaultInterruptHandler 0001                           _TMR0_Initialize 1852  
        __end_of_INT1_SetInterruptHandler 19E6     __end_of_INTERRUPT_InterruptManagerLow 00CC  
  __size_of_INTERRUPT_InterruptManagerLow 00B4             _INTERRUPT_InterruptManagerLow 0018  
                      __CFG_FOSC$INTOSCIO 000000            __end_of_PIN_MANAGER_Initialize 17AA  
