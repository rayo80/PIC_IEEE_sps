

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 28 23:58:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F45K50 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ANSELD	set	3934
    50  0000                     _ANSELC	set	3933
    51  0000                     _RCREG1	set	4014
    52  0000                     _TXREG1	set	4013
    53  0000                     _RCSTAbits	set	4011
    54  0000                     _SPBRG	set	4015
    55  0000                     _TXSTAbits	set	4012
    56  0000                     _BAUDCONbits	set	4024
    57  0000                     _TRISCbits	set	3988
    58  0000                     _OSCCON2	set	4050
    59  0000                     _OSCCON	set	4051
    60  0000                     _PORTD	set	3971
    61  0000                     _TRISD	set	3989
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  007E26                     __pcinit:
    67                           	opt callstack 0
    68  007E26                     start_initialization:
    69                           	opt callstack 0
    70  007E26                     __initialization:
    71                           	opt callstack 0
    72  007E26                     end_of_initialization:
    73                           	opt callstack 0
    74  007E26                     __end_of__initialization:
    75                           	opt callstack 0
    76  007E26  0100               	movlb	0
    77  007E28  EF1B  F03F         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80  000001                     __pcstackCOMRAM:
    81                           	opt callstack 0
    82  000001                     ?___aldiv:
    83                           	opt callstack 0
    84  000001                     ___aldiv@dividend:
    85                           	opt callstack 0
    86                           
    87                           ; 4 bytes @ 0x0
    88  000001                     	ds	4
    89  000005                     ___aldiv@divisor:
    90                           	opt callstack 0
    91                           
    92                           ; 4 bytes @ 0x4
    93  000005                     	ds	4
    94  000009                     ___aldiv@counter:
    95                           	opt callstack 0
    96                           
    97                           ; 1 bytes @ 0x8
    98  000009                     	ds	1
    99  00000A                     ___aldiv@sign:
   100                           	opt callstack 0
   101                           
   102                           ; 1 bytes @ 0x9
   103  00000A                     	ds	1
   104  00000B                     ___aldiv@quotient:
   105                           	opt callstack 0
   106                           
   107                           ; 4 bytes @ 0xA
   108  00000B                     	ds	4
   109  00000F                     serial_begin@baudios:
   110                           	opt callstack 0
   111                           
   112                           ; 4 bytes @ 0xE
   113  00000F                     	ds	4
   114  000013                     _serial_begin$962:
   115                           	opt callstack 0
   116                           
   117                           ; 4 bytes @ 0x12
   118  000013                     	ds	4
   119  000017                     
   120                           ; 2 bytes @ 0x16
   121  000017                     	ds	2
   122  000019                     
   123                           ; 3 bytes @ 0x18
   124  000019                     	ds	3
   125  00001C                     
   126                           ; 1 bytes @ 0x1B
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 12 in file "main.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;  argc            2   22[COMRAM] int 
   135 ;;  argv            3   24[COMRAM] PTR PTR unsigned char 
   136 ;; Auto vars:     Size  Location     Type
   137 ;;		None
   138 ;; Return value:  Size  Location     Type
   139 ;;                  2   22[COMRAM] int 
   140 ;; Registers used:
   141 ;;		wreg, status,2, status,0, cstack
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   147 ;;      Params:         5       0       0       0       0       0       0       0       0
   148 ;;      Locals:         0       0       0       0       0       0       0       0       0
   149 ;;      Temps:          0       0       0       0       0       0       0       0       0
   150 ;;      Totals:         5       0       0       0       0       0       0       0       0
   151 ;;Total ram usage:        5 bytes
   152 ;; Hardware stack levels required when called:    2
   153 ;; This function calls:
   154 ;;		_oscilador
   155 ;;		_serial_begin
   156 ;;		_serial_read
   157 ;; This function is called by:
   158 ;;		Startup code after reset
   159 ;; This function uses a non-reentrant model
   160 ;;
   161                           
   162                           	psect	text0
   163  007E36                     __ptext0:
   164                           	opt callstack 0
   165  007E36                     _main:
   166                           	opt callstack 29
   167  007E36                     
   168                           ;main.c: 13:     ANSELC=0;
   169  007E36  0E00               	movlw	0
   170  007E38  010F               	movlb	15	; () banked
   171  007E3A  6F5D               	movwf	93,b	;volatile
   172                           
   173                           ;main.c: 14:     ANSELD=0;
   174  007E3C  0E00               	movlw	0
   175  007E3E  6F5E               	movwf	94,b	;volatile
   176                           
   177                           ;main.c: 15:     TRISD=0;
   178  007E40  0E00               	movlw	0
   179  007E42  6E95               	movwf	149,c	;volatile
   180  007E44                     
   181                           ; BSR set to: 15
   182                           ;main.c: 16:     oscilador();
   183  007E44  EC16  F03F         	call	_oscilador	;wreg free
   184  007E48                     
   185                           ;main.c: 17:     serial_begin(9600);
   186  007E48  0E80               	movlw	128
   187  007E4A  6E0F               	movwf	serial_begin@baudios^0,c
   188  007E4C  0E25               	movlw	37
   189  007E4E  6E10               	movwf	(serial_begin@baudios+1)^0,c
   190  007E50  0E00               	movlw	0
   191  007E52  6E11               	movwf	(serial_begin@baudios+2)^0,c
   192  007E54  0E00               	movlw	0
   193  007E56  6E12               	movwf	(serial_begin@baudios+3)^0,c
   194  007E58  EC41  F03F         	call	_serial_begin	;wreg free
   195  007E5C                     l891:
   196                           
   197                           ;main.c: 22:         if(serial_read()=='A'){
   198  007E5C  EC11  F03F         	call	_serial_read	;wreg free
   199  007E60  0A41               	xorlw	65
   200  007E62  A4D8               	btfss	status,2,c
   201  007E64  EF36  F03F         	goto	u161
   202  007E68  EF38  F03F         	goto	u160
   203  007E6C                     u161:
   204  007E6C  EF3B  F03F         	goto	l895
   205  007E70                     u160:
   206  007E70                     
   207                           ;main.c: 23:             PORTD=255;
   208  007E70  6883               	setf	131,c	;volatile
   209                           
   210                           ;main.c: 24:         }
   211  007E72  EF2E  F03F         	goto	l891
   212  007E76                     l895:
   213                           
   214                           ;main.c: 26:             PORTD=0;
   215  007E76  0E00               	movlw	0
   216  007E78  6E83               	movwf	131,c	;volatile
   217  007E7A  EF2E  F03F         	goto	l891
   218  007E7E  EF00  F000         	goto	start
   219  007E82                     __end_of_main:
   220                           	opt callstack 0
   221                           
   222 ;; *************** function _serial_read *****************
   223 ;; Defined at:
   224 ;;		line 39 in file "EUSART.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      unsigned char 
   231 ;; Registers used:
   232 ;;		wreg, status,2
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   238 ;;      Params:         0       0       0       0       0       0       0       0       0
   239 ;;      Locals:         0       0       0       0       0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0       0       0       0       0
   241 ;;      Totals:         0       0       0       0       0       0       0       0       0
   242 ;;Total ram usage:        0 bytes
   243 ;; Hardware stack levels used:    1
   244 ;; This function calls:
   245 ;;		Nothing
   246 ;; This function is called by:
   247 ;;		_main
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text1
   252  007E22                     __ptext1:
   253                           	opt callstack 0
   254  007E22                     _serial_read:
   255                           	opt callstack 30
   256  007E22                     
   257                           ;EUSART.c: 40:     return RCREG1;
   258  007E22  50AE               	movf	174,w,c	;volatile
   259  007E24  0012               	return		;funcret
   260  007E26                     __end_of_serial_read:
   261                           	opt callstack 0
   262                           
   263 ;; *************** function _serial_begin *****************
   264 ;; Defined at:
   265 ;;		line 6 in file "EUSART.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;  baudios         4   14[COMRAM] long 
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   279 ;;      Params:         4       0       0       0       0       0       0       0       0
   280 ;;      Locals:         4       0       0       0       0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0       0       0       0       0
   282 ;;      Totals:         8       0       0       0       0       0       0       0       0
   283 ;;Total ram usage:        8 bytes
   284 ;; Hardware stack levels used:    1
   285 ;; Hardware stack levels required when called:    1
   286 ;; This function calls:
   287 ;;		___aldiv
   288 ;; This function is called by:
   289 ;;		_main
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text2
   294  007E82                     __ptext2:
   295                           	opt callstack 0
   296  007E82                     _serial_begin:
   297                           	opt callstack 29
   298  007E82                     
   299                           ;EUSART.c: 8:     TRISCbits.RC6=0;
   300  007E82  9C94               	bcf	148,6,c	;volatile
   301                           
   302                           ;EUSART.c: 9:     TRISCbits.RC7=1;
   303  007E84  8E94               	bsf	148,7,c	;volatile
   304                           
   305                           ;EUSART.c: 10:     BAUDCONbits.BRG16=0;
   306  007E86  96B8               	bcf	184,3,c	;volatile
   307                           
   308                           ;EUSART.c: 11:     TXSTAbits.BRGH=0;
   309  007E88  94AC               	bcf	172,2,c	;volatile
   310                           
   311                           ;EUSART.c: 12:     TXSTAbits.SYNC=0;
   312  007E8A  98AC               	bcf	172,4,c	;volatile
   313  007E8C                     
   314                           ;EUSART.c: 13:     SPBRG=(unsigned char)(((8000000/baudios)/64)-1);
   315  007E8C  C00F  F005         	movff	serial_begin@baudios,___aldiv@divisor
   316  007E90  C010  F006         	movff	serial_begin@baudios+1,___aldiv@divisor+1
   317  007E94  C011  F007         	movff	serial_begin@baudios+2,___aldiv@divisor+2
   318  007E98  C012  F008         	movff	serial_begin@baudios+3,___aldiv@divisor+3
   319  007E9C  0E00               	movlw	0
   320  007E9E  6E01               	movwf	___aldiv@dividend^0,c
   321  007EA0  0E12               	movlw	18
   322  007EA2  6E02               	movwf	(___aldiv@dividend+1)^0,c
   323  007EA4  0E7A               	movlw	122
   324  007EA6  6E03               	movwf	(___aldiv@dividend+2)^0,c
   325  007EA8  0E00               	movlw	0
   326  007EAA  6E04               	movwf	(___aldiv@dividend+3)^0,c
   327  007EAC  EC7A  F03F         	call	___aldiv	;wreg free
   328  007EB0  C001  F013         	movff	?___aldiv,_serial_begin$962
   329  007EB4  C002  F014         	movff	?___aldiv+1,_serial_begin$962+1
   330  007EB8  C003  F015         	movff	?___aldiv+2,_serial_begin$962+2
   331  007EBC  C004  F016         	movff	?___aldiv+3,_serial_begin$962+3
   332                           
   333                           ;EUSART.c: 13:     SPBRG=(unsigned char)(((8000000/baudios)/64)-1);
   334  007EC0  C013  F001         	movff	_serial_begin$962,___aldiv@dividend
   335  007EC4  C014  F002         	movff	_serial_begin$962+1,___aldiv@dividend+1
   336  007EC8  C015  F003         	movff	_serial_begin$962+2,___aldiv@dividend+2
   337  007ECC  C016  F004         	movff	_serial_begin$962+3,___aldiv@dividend+3
   338  007ED0  0E40               	movlw	64
   339  007ED2  6E05               	movwf	___aldiv@divisor^0,c
   340  007ED4  0E00               	movlw	0
   341  007ED6  6E06               	movwf	(___aldiv@divisor+1)^0,c
   342  007ED8  0E00               	movlw	0
   343  007EDA  6E07               	movwf	(___aldiv@divisor+2)^0,c
   344  007EDC  0E00               	movlw	0
   345  007EDE  6E08               	movwf	(___aldiv@divisor+3)^0,c
   346  007EE0  EC7A  F03F         	call	___aldiv	;wreg free
   347  007EE4  0401               	decf	?___aldiv^0,w,c
   348  007EE6  6EAF               	movwf	175,c	;volatile
   349  007EE8                     
   350                           ;EUSART.c: 14:     RCSTAbits.SPEN=1;
   351  007EE8  8EAB               	bsf	171,7,c	;volatile
   352  007EEA                     
   353                           ;EUSART.c: 17:     TXSTAbits.TX9=0;
   354  007EEA  9CAC               	bcf	172,6,c	;volatile
   355  007EEC                     
   356                           ;EUSART.c: 18:     TXSTAbits.TXEN=1;
   357  007EEC  8AAC               	bsf	172,5,c	;volatile
   358  007EEE                     
   359                           ;EUSART.c: 21:     RCSTAbits.RC9=0;
   360  007EEE  9CAB               	bcf	171,6,c	;volatile
   361  007EF0                     
   362                           ;EUSART.c: 22:     RCSTAbits.CREN=1;
   363  007EF0  88AB               	bsf	171,4,c	;volatile
   364  007EF2  0012               	return		;funcret
   365  007EF4                     __end_of_serial_begin:
   366                           	opt callstack 0
   367                           
   368 ;; *************** function ___aldiv *****************
   369 ;; Defined at:
   370 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;  dividend        4    0[COMRAM] long 
   373 ;;  divisor         4    4[COMRAM] long 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  quotient        4   10[COMRAM] long 
   376 ;;  sign            1    9[COMRAM] unsigned char 
   377 ;;  counter         1    8[COMRAM] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  4    0[COMRAM] long 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         8       0       0       0       0       0       0       0       0
   388 ;;      Locals:         6       0       0       0       0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0
   390 ;;      Totals:        14       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:       14 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_serial_begin
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text3
   401  007EF4                     __ptext3:
   402                           	opt callstack 0
   403  007EF4                     ___aldiv:
   404                           	opt callstack 29
   405  007EF4  0E00               	movlw	0
   406  007EF6  6E0A               	movwf	___aldiv@sign^0,c
   407  007EF8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
   408  007EFA  EF83  F03F         	goto	u100
   409  007EFE  EF81  F03F         	goto	u101
   410  007F02                     u101:
   411  007F02  EF8D  F03F         	goto	l835
   412  007F06                     u100:
   413  007F06  1E08               	comf	(___aldiv@divisor+3)^0,f,c
   414  007F08  1E07               	comf	(___aldiv@divisor+2)^0,f,c
   415  007F0A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
   416  007F0C  6C05               	negf	___aldiv@divisor^0,c
   417  007F0E  0E00               	movlw	0
   418  007F10  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
   419  007F12  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
   420  007F14  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
   421  007F16  0E01               	movlw	1
   422  007F18  6E0A               	movwf	___aldiv@sign^0,c
   423  007F1A                     l835:
   424  007F1A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
   425  007F1C  EF94  F03F         	goto	u110
   426  007F20  EF92  F03F         	goto	u111
   427  007F24                     u111:
   428  007F24  EF9E  F03F         	goto	l841
   429  007F28                     u110:
   430  007F28  1E04               	comf	(___aldiv@dividend+3)^0,f,c
   431  007F2A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
   432  007F2C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
   433  007F2E  6C01               	negf	___aldiv@dividend^0,c
   434  007F30  0E00               	movlw	0
   435  007F32  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
   436  007F34  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
   437  007F36  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
   438  007F38  0E01               	movlw	1
   439  007F3A  1A0A               	xorwf	___aldiv@sign^0,f,c
   440  007F3C                     l841:
   441  007F3C  0E00               	movlw	0
   442  007F3E  6E0B               	movwf	___aldiv@quotient^0,c
   443  007F40  0E00               	movlw	0
   444  007F42  6E0C               	movwf	(___aldiv@quotient+1)^0,c
   445  007F44  0E00               	movlw	0
   446  007F46  6E0D               	movwf	(___aldiv@quotient+2)^0,c
   447  007F48  0E00               	movlw	0
   448  007F4A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
   449  007F4C  5005               	movf	___aldiv@divisor^0,w,c
   450  007F4E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
   451  007F50  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
   452  007F52  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
   453  007F54  B4D8               	btfsc	status,2,c
   454  007F56  EFAF  F03F         	goto	u121
   455  007F5A  EFB1  F03F         	goto	u120
   456  007F5E                     u121:
   457  007F5E  EFE7  F03F         	goto	l863
   458  007F62                     u120:
   459  007F62  0E01               	movlw	1
   460  007F64  6E09               	movwf	___aldiv@counter^0,c
   461  007F66  EFBB  F03F         	goto	l849
   462  007F6A                     l847:
   463  007F6A  90D8               	bcf	status,0,c
   464  007F6C  3605               	rlcf	___aldiv@divisor^0,f,c
   465  007F6E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
   466  007F70  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
   467  007F72  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
   468  007F74  2A09               	incf	___aldiv@counter^0,f,c
   469  007F76                     l849:
   470  007F76  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
   471  007F78  EFC0  F03F         	goto	u131
   472  007F7C  EFC2  F03F         	goto	u130
   473  007F80                     u131:
   474  007F80  EFB5  F03F         	goto	l847
   475  007F84                     u130:
   476  007F84                     l851:
   477  007F84  90D8               	bcf	status,0,c
   478  007F86  360B               	rlcf	___aldiv@quotient^0,f,c
   479  007F88  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
   480  007F8A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
   481  007F8C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
   482  007F8E  5005               	movf	___aldiv@divisor^0,w,c
   483  007F90  5C01               	subwf	___aldiv@dividend^0,w,c
   484  007F92  5006               	movf	(___aldiv@divisor+1)^0,w,c
   485  007F94  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
   486  007F96  5007               	movf	(___aldiv@divisor+2)^0,w,c
   487  007F98  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
   488  007F9A  5008               	movf	(___aldiv@divisor+3)^0,w,c
   489  007F9C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
   490  007F9E  A0D8               	btfss	status,0,c
   491  007FA0  EFD4  F03F         	goto	u141
   492  007FA4  EFD6  F03F         	goto	u140
   493  007FA8                     u141:
   494  007FA8  EFDF  F03F         	goto	l859
   495  007FAC                     u140:
   496  007FAC  5005               	movf	___aldiv@divisor^0,w,c
   497  007FAE  5E01               	subwf	___aldiv@dividend^0,f,c
   498  007FB0  5006               	movf	(___aldiv@divisor+1)^0,w,c
   499  007FB2  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
   500  007FB4  5007               	movf	(___aldiv@divisor+2)^0,w,c
   501  007FB6  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
   502  007FB8  5008               	movf	(___aldiv@divisor+3)^0,w,c
   503  007FBA  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
   504  007FBC  800B               	bsf	___aldiv@quotient^0,0,c
   505  007FBE                     l859:
   506  007FBE  90D8               	bcf	status,0,c
   507  007FC0  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
   508  007FC2  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
   509  007FC4  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
   510  007FC6  3205               	rrcf	___aldiv@divisor^0,f,c
   511  007FC8  2E09               	decfsz	___aldiv@counter^0,f,c
   512  007FCA  EFC2  F03F         	goto	l851
   513  007FCE                     l863:
   514  007FCE  500A               	movf	___aldiv@sign^0,w,c
   515  007FD0  B4D8               	btfsc	status,2,c
   516  007FD2  EFED  F03F         	goto	u151
   517  007FD6  EFEF  F03F         	goto	u150
   518  007FDA                     u151:
   519  007FDA  EFF7  F03F         	goto	l867
   520  007FDE                     u150:
   521  007FDE  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
   522  007FE0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
   523  007FE2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
   524  007FE4  6C0B               	negf	___aldiv@quotient^0,c
   525  007FE6  0E00               	movlw	0
   526  007FE8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
   527  007FEA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
   528  007FEC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
   529  007FEE                     l867:
   530  007FEE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   531  007FF2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   532  007FF6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   533  007FFA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   534  007FFE  0012               	return		;funcret
   535  008000                     __end_of___aldiv:
   536                           	opt callstack 0
   537                           
   538 ;; *************** function _oscilador *****************
   539 ;; Defined at:
   540 ;;		line 33 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   554 ;;      Params:         0       0       0       0       0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0       0       0       0
   557 ;;      Totals:         0       0       0       0       0       0       0       0       0
   558 ;;Total ram usage:        0 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text4
   568  007E2C                     __ptext4:
   569                           	opt callstack 0
   570  007E2C                     _oscilador:
   571                           	opt callstack 30
   572  007E2C                     
   573                           ;main.c: 34:     OSCCON=0x60;
   574  007E2C  0E60               	movlw	96
   575  007E2E  6ED3               	movwf	211,c	;volatile
   576                           
   577                           ;main.c: 35:     OSCCON2=0x00;
   578  007E30  0E00               	movlw	0
   579  007E32  6ED2               	movwf	210,c	;volatile
   580  007E34  0012               	return		;funcret
   581  007E36                     __end_of_oscilador:
   582                           	opt callstack 0
   583  0000                     
   584                           	psect	rparam
   585  0000                     tosu	equ	0xFFF
   586                           tosh	equ	0xFFE
   587                           tosl	equ	0xFFD
   588                           stkptr	equ	0xFFC
   589                           pclatu	equ	0xFFB
   590                           pclath	equ	0xFFA
   591                           pcl	equ	0xFF9
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           prodh	equ	0xFF4
   597                           prodl	equ	0xFF3
   598                           indf0	equ	0xFEF
   599                           postinc0	equ	0xFEE
   600                           postdec0	equ	0xFED
   601                           preinc0	equ	0xFEC
   602                           plusw0	equ	0xFEB
   603                           fsr0h	equ	0xFEA
   604                           fsr0l	equ	0xFE9
   605                           wreg	equ	0xFE8
   606                           indf1	equ	0xFE7
   607                           postinc1	equ	0xFE6
   608                           postdec1	equ	0xFE5
   609                           preinc1	equ	0xFE4
   610                           plusw1	equ	0xFE3
   611                           fsr1h	equ	0xFE2
   612                           fsr1l	equ	0xFE1
   613                           bsr	equ	0xFE0
   614                           indf2	equ	0xFDF
   615                           postinc2	equ	0xFDE
   616                           postdec2	equ	0xFDD
   617                           preinc2	equ	0xFDC
   618                           plusw2	equ	0xFDB
   619                           fsr2h	equ	0xFDA
   620                           fsr2l	equ	0xFD9
   621                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_serial_begin
    _serial_begin->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5     725
                                             22 COMRAM     5     0      5
                          _oscilador
                       _serial_begin
                        _serial_read
 ---------------------------------------------------------------------------------
 (1) _serial_read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_begin                                         8     4      4     725
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _oscilador                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _oscilador
   _serial_begin
     ___aldiv
   _serial_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1B      1B       1       28.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 28 23:58:33 2020

                     l31 7E34                       l63 7E24                       l48 7EF2  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l145 7FFE  
                    l831 7F06                      l841 7F3C                      l833 7F16  
                    l851 7F84                      l843 7F4C                      l835 7F1A  
                    l827 7EF4                      l861 7FC8                      l853 7F8E  
                    l845 7F62                      l837 7F28                      l829 7EF8  
                    l783 7E2C                      l855 7FAC                      l847 7F6A  
                    l863 7FCE                      l839 7F38                      l871 7E82  
                    l865 7FDE                      l857 7FBC                      l849 7F76  
                    l881 7EEE                      l873 7E8C                      l867 7FEE  
                    l859 7FBE                      l883 7EF0                      l875 7EE8  
                    l891 7E5C                      l877 7EEA                      l893 7E70  
                    l885 7E36                      l879 7EEC                      l799 7E22  
                    l895 7E76                      l887 7E44                      l889 7E48  
           __CFG_CPB$OFF 000000                      u100 7F06                      u101 7F02  
                    u110 7F28                      u111 7F24                      u120 7F62  
                    u121 7F5E                      u130 7F84                      u131 7F80  
                    u140 7FAC                      u141 7FA8                      u150 7FDE  
                    u151 7FDA                      u160 7E70                      u161 7E6C  
           __CFG_CPD$OFF 000000                     _main 7E36            __CFG_BORV$190 000000  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000          __end_of___aldiv 8000                    ?_main 0017  
                  _SPBRG 000FAF                    _PORTD 000F83                    _TRISD 000F95  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    status 000FD8           __CFG_T3CMX$RC0 000000  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 7E26  
           __end_of_main 7E82           __CFG_PCLKEN$ON 000000                   ??_main 001C  
          __activetblptr 000000           __CFG_SDOMX$RB3 000000          __CFG_CCP2MX$RC1 000000  
                 _ANSELC 000F5D                   _ANSELD 000F5E           __CFG_WDTEN$OFF 000000  
                 _RCREG1 000FAE                   _OSCCON 000FD3                   _TXREG1 000FAD  
         __CFG_XINST$OFF 000000             ?_serial_read 0001                ??___aldiv 0009  
         __CFG_STVREN$ON 000000     __CFG_LS48MHZ$SYS24X4 000000               __accesstop 0060  
__end_of__initialization 7E26            ___rparam_used 000001           __pcstackCOMRAM 0001  
       __CFG_nPWRTEN$OFF 000000      serial_begin@baudios 000F        __CFG_PLLSEL$PLL4X 000000  
     __size_of_oscilador 000A                  _OSCCON2 000FD2                  __Hparam 0000  
                __Lparam 0000            ?_serial_begin 000F                  ___aldiv 7EF4  
   __size_of_serial_read 0004                  __pcinit 7E26                  __ramtop 0800  
                __ptext0 7E36                  __ptext1 7E22                  __ptext2 7E82  
                __ptext3 7EF4                  __ptext4 7E2C         ___aldiv@dividend 0001  
   end_of_initialization 7E26        __end_of_oscilador 7E36           ??_serial_begin 0013  
              _RCSTAbits 000FAB         ___aldiv@quotient 000B                _TRISCbits 000F94  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8      start_initialization 7E26  
        __CFG_nLPBOR$OFF 000000     __end_of_serial_begin 7EF4                 ?___aldiv 0001  
        ___aldiv@divisor 0005          ___aldiv@counter 0009                _oscilador 7E2C  
          ??_serial_read 0001         __CFG_WDTPS$32768 000000        __CFG_CFGPLLEN$OFF 000000  
               __Hrparam 0000               ?_oscilador 0001                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000         __size_of___aldiv 010C      __end_of_serial_read 7E26  
  __size_of_serial_begin 0072            __size_of_main 004C         _serial_begin$962 0013  
           _serial_begin 7E82                 main@argc 0017                 main@argv 0019  
            ??_oscilador 0001              _serial_read 7E22     __CFG_CPUDIV$NOCLKDIV 000000  
           ___aldiv@sign 000A       __CFG_FOSC$INTOSCIO 000000  
